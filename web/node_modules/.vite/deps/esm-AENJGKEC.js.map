{
  "version": 3,
  "sources": ["../../@descope/tenant-profile-widget/src/lib/widget/mixins/helpers.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/asyncActions/helpers.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/asyncActions/getMe.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/asyncActions/getTenant.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/asyncActions/getTenantAdminLinkSSO.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/initialState.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/apiPaths.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/sdk/helpers.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/sdk/mocks.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/sdk/createTenantSdk.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/sdk/createUserSdk.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/apiMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/sdk/index.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/stateManagementMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/flowRedirectUrlMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/state/selectors.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/flowSyncThemeMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/ErrorComponent.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantAdminLinkSSOMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/api/types.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantCustomAttributesMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantEmailDomainsMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantSSOExclusionsMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantEnforceSSOMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTenantNameMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/mixins/initMixin/initMixin.ts", "../../@descope/tenant-profile-widget/src/lib/widget/index.ts", "../../@descope/tenant-profile-widget/src/lib/index.ts"],
  "sourcesContent": ["import { createTemplate, kebabCase } from '@descope/sdk-helpers';\n\ntype FlowConfig = {\n  projectId: string;\n  flowId: string;\n  tenant?: string;\n  baseUrl?: string;\n  baseStaticUrl?: string;\n  baseCdnUrl?: string;\n  refreshCookieName?: string;\n  theme?: string;\n  form?: string;\n};\n\nexport const createFlowTemplate = (\n  flowConfig: FlowConfig = {} as FlowConfig,\n) => {\n  const template = createTemplate(`<descope-wc></descope-wc>`);\n\n  Object.entries(flowConfig).forEach(([key, value]) => {\n    template.content\n      .querySelector('descope-wc')\n      .setAttribute(kebabCase(key), value);\n  });\n\n  return template;\n};\n\nexport function getUrlParam(paramName: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(paramName);\n}\n\nexport function resetUrlParam(paramName: string) {\n  if (window.history.replaceState && getUrlParam(paramName)) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.delete(paramName);\n    newUrl.search = search.toString();\n    window.history.replaceState({}, '', newUrl.toString());\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['me']>,\n  ThunkConfigExtraApi\n>('users/me', (arg, { extra: { api } }) => api.user.me());\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.me.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.me),\n);\n\nexport const getMe = { action, reducer };\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['tenant']['details']>,\n  ThunkConfigExtraApi\n>('tenant/details', (arg, { extra: { api } }) => api.tenant.details());\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.tenant.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.tenant),\n);\n\nexport const getTenant = { action, reducer };\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['tenant']['adminLinkSso']>,\n  ThunkConfigExtraApi\n>('tenant/adminLinkSso', (arg, { extra: { api } }) =>\n  api.tenant.adminLinkSso(),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.tenantAdminLinkSSO.data =\n        action.payload?.adminSSOConfigurationLink || '';\n    },\n  },\n  withRequestStatus((state: State) => state.tenantAdminLinkSSO),\n);\n\nexport const getTenantAdminLinkSSO = { action, reducer };\n", "import { State } from './types';\n\nexport const initialState: State = {\n  me: {\n    loading: false,\n    error: null,\n    data: {},\n  },\n  tenant: {\n    loading: false,\n    error: null,\n    data: {},\n  },\n  tenantAdminLinkSSO: {\n    loading: false,\n    error: null,\n    data: '',\n  },\n};\n", "export const apiPaths = {\n  user: {\n    me: '/v1/auth/me',\n  },\n  tenant: {\n    details: '/v1/mgmt/tenant',\n    adminLinkSso: '/v1/mgmt/tenant/adminlinks/sso/authenticated',\n  },\n};\n", "export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n", "import { Tenant, TenantAdminLinkSSOResponse, User } from '../types';\n\nconst me: () => Promise<User> = async () =>\n  new Promise((resolve) => {\n    resolve({\n      loginIds: [`user@company.com`],\n      externalIds: [`user@company.com`],\n      userId: `user-1`,\n      name: `Test User`,\n      email: `user@company.com`,\n      roleNames: [`Role`],\n      phone: `+1-202-555-010`,\n      verifiedEmail: true,\n      verifiedPhone: true,\n      userTenants: [],\n      status: 'enabled',\n      editable: true,\n      createdTime: new Date().getTime(),\n      customAttributes: {},\n      familyName: '',\n      givenName: '',\n      middleName: '',\n      picture: undefined,\n      password: true,\n      SAML: false,\n      test: false,\n      TOTP: false,\n      webauthn: true,\n    });\n  });\n\nconst user = {\n  me,\n};\n\nconst get: () => Promise<Tenant> = async () =>\n  new Promise((resolve) => {\n    resolve({\n      // create tenant mocks\n      tenantId: 'tenant-1',\n      roleNames: ['admin'],\n      id: 'tenant-1',\n      name: 'Test Tenant',\n      selfProvisioningDomains: ['example1.com', 'example2.com'],\n      customAttributes: {},\n      authType: 'password',\n      domains: [],\n      createdTime: Date.now(),\n      disabled: false,\n      enforceSSO: true,\n    });\n  });\n\nconst getTenantAdminLinkSSO: () => Promise<TenantAdminLinkSSOResponse> =\n  async () =>\n    new Promise((resolve) => {\n      resolve({\n        adminSSOConfigurationLink: '_blank',\n      });\n    });\n\nconst tenantMock = {\n  get,\n  getTenantAdminLinkSSO,\n};\n\nexport { tenantMock, user };\n", "import { apiPaths } from '../apiPaths';\nimport { HttpClient } from '../types';\nimport { withErrorHandler } from './helpers';\nimport { tenantMock } from './mocks';\n\nexport const createTenantSdk = ({\n  httpClient,\n  tenantId,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenantId?: string;\n  mock: boolean;\n}) => {\n  const tenantIdEncoded = encodeURIComponent(tenantId || '');\n  const queryParams = `?tenant=${tenantIdEncoded}&id=${tenantIdEncoded}`;\n\n  const details = async () => {\n    if (mock) {\n      return tenantMock.get();\n    }\n    if (!tenantId) throw new Error('tenantId is not defined');\n\n    const url = `${apiPaths.tenant.details}${queryParams}`;\n    const res = await httpClient.get(url);\n    await withErrorHandler(res);\n    const data = await res.json();\n    return data;\n  };\n\n  const adminLinkSso = async () => {\n    if (mock) {\n      return tenantMock.getTenantAdminLinkSSO();\n    }\n    if (!tenantId) throw new Error('tenantId is not defined');\n\n    const res = await httpClient.post(\n      `${apiPaths.tenant.adminLinkSso}?tenant=${tenantIdEncoded}`,\n      {\n        tenantId: tenantIdEncoded,\n      },\n      {\n        headers: { 'Content-Type': 'application/json' },\n      },\n    );\n    await withErrorHandler(res);\n    const data = await res.json();\n    return data;\n  };\n\n  return {\n    details,\n    adminLinkSso,\n  };\n};\n", "import { apiPaths } from '../apiPaths';\nimport { HttpClient } from '../types';\nimport { withErrorHandler } from './helpers';\nimport { user } from './mocks';\n\nexport const createUserSdk = ({\n  httpClient,\n  mock,\n}: {\n  httpClient: HttpClient;\n  mock: boolean;\n}) => {\n  const me = async () => {\n    if (mock) {\n      return user.me();\n    }\n    const res = await httpClient.get(apiPaths.user.me);\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  return {\n    me,\n  };\n};\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  baseUrlMixin,\n  cookieConfigMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      baseUrlMixin,\n      cookieConfigMixin,\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          {\n            projectId: this.projectId,\n            baseUrl: this.baseUrl,\n            refreshCookieName: this.refreshCookieName,\n          },\n          this.tenantId,\n          this.mock === 'true',\n          this.widgetId,\n        );\n      }\n\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      get tenantId() {\n        return this.getAttribute('tenant');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(\n          ['project-id', 'base-url', 'tenant', 'mock'],\n          () => {\n            if (this.#api) {\n              this.#createSdk();\n            }\n          },\n        );\n      }\n    };\n  },\n);\n", "import '@descope/core-js-sdk';\nimport createWebSdk from '@descope/web-js-sdk';\nimport { createTenantSdk } from './createTenantSdk';\nimport { createUserSdk } from './createUserSdk';\n\ndeclare const BUILD_VERSION: string;\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  tenant: string,\n  mock: boolean,\n  widgetId?: string,\n) => {\n  const webSdk = createWebSdk({\n    ...config,\n    persistTokens: true,\n    baseHeaders: {\n      'x-descope-widget-type': 'tenant-profile-widget',\n      'x-descope-widget-id': widgetId,\n      'x-descope-widget-version': BUILD_VERSION,\n    },\n  });\n\n  return {\n    user: createUserSdk({ httpClient: webSdk.httpClient, mock }),\n    tenant: createTenantSdk({\n      httpClient: webSdk.httpClient,\n      tenantId: tenant,\n      mock,\n    }),\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n", "/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { getMe, getTenant, getTenantAdminLinkSSO } from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {},\n        extraReducers: (builder) => {\n          getMe.reducer(builder);\n          getTenant.reducer(builder);\n          getTenantAdminLinkSSO.reducer(builder);\n        },\n        asyncActions: {\n          getMe: getMe.action,\n          getTenant: getTenant.action,\n          getTenantAdminLinkSSO: getTenantAdminLinkSSO.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n", "import { FlowDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  initLifecycleMixin,\n  loggerMixin,\n  modalMixin,\n  themeMixin,\n} from '@descope/sdk-mixins';\nimport { createFlowTemplate, getUrlParam, resetUrlParam } from './helpers';\nimport { stateManagementMixin } from './stateManagementMixin';\n\nconst REDIRECT_FLOW_NAME_QUERY_PARAM = 'widget-flow';\n\nexport const flowRedirectUrlMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class FlowRedirectUrlMixinClass extends compose(\n      initLifecycleMixin,\n      modalMixin,\n      stateManagementMixin,\n      cookieConfigMixin,\n      loggerMixin,\n      themeMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n\n        const widgetFlow = getUrlParam(REDIRECT_FLOW_NAME_QUERY_PARAM);\n\n        if (widgetFlow) {\n          resetUrlParam(REDIRECT_FLOW_NAME_QUERY_PARAM);\n          this.#createFlowRedirectModal(widgetFlow);\n        }\n      }\n\n      #createFlowRedirectModal(widgetFlow: string) {\n        const modal = this.createModal({ 'data-id': 'redirect-flow' });\n        modal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: widgetFlow,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n\n        const flow = new FlowDriver(\n          () => modal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n\n        flow.onSuccess(() => {\n          modal.close();\n          this.actions.getMe();\n          this.actions.getTenant();\n          this.actions.getTenantAdminLinkSSO();\n        });\n\n        modal.afterClose = () => {\n          modal.remove();\n        };\n\n        modal.open();\n      }\n    },\n);\n", "import { createSelector } from 'reselect';\nimport { State } from './types';\n\nexport const getMe = (state: State) => state.me.data;\nexport const getMeError = (state: State) => state.me.error;\n\nexport const getTenant = (state: State) => state.tenant.data;\nexport const getTenantError = (state: State) => state.tenant.error;\n\nexport const getTenantAdminLinkSSO = (state: State) =>\n  state.tenantAdminLinkSSO.data;\nexport const getTenantAdminLinkSSOError = (state: State) =>\n  state.tenantAdminLinkSSO.error;\n\nexport const getTenantCustomAttributes = createSelector(\n  getTenant,\n  (tenant) => tenant.customAttributes || ({} as Record<string, any>),\n);\n\nexport const getTenantName = createSelector(\n  getTenant,\n  (tenant) => tenant.name || '',\n);\n\nexport const getTenantEmailDomains = createSelector(\n  getTenant,\n  (tenant) => tenant.selfProvisioningDomains || [],\n);\n\nexport const getTenantSSOExclusions = createSelector(\n  getTenant,\n  (tenant) => tenant.enforceSSOExclusions || [],\n);\n\nexport const getTenantEnforceSSO = createSelector(\n  getTenant,\n  (tenant) => tenant.enforceSSO || false,\n);\n", "import { FlowDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { observeAttributesMixin, themeMixin } from '@descope/sdk-mixins';\n\nexport const flowSyncThemeMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class FlowSyncThemeMixinClass extends compose(\n      themeMixin,\n      observeAttributesMixin,\n    )(superclass) {\n      syncFlowTheme(flowDriver: FlowDriver) {\n        // eslint-disable-next-line no-param-reassign\n        flowDriver.theme = this.theme;\n        this.observeAttributes(['theme'], () => {\n          // eslint-disable-next-line no-param-reassign\n          flowDriver.theme = this.theme;\n        });\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'tenant-profile-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res.body;\n      }\n    };\n  },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport {\n  getMeError,\n  getTenantAdminLinkSSOError,\n  getTenantError,\n} from '../../../state/selectors';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { createErrorComponent } from './ErrorComponent';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        /*\n        const importRoot = await import(\n          '../../../../../../test/mocks/rootMock'\n        ).then((module) => module.default);\n        */\n\n        const template = createTemplate(\n          // importRoot,\n          await this.fetchWidgetPage('root.html'),\n        );\n\n        await this.loadDescopeUiComponents(template);\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        try {\n          await Promise.all([\n            this.actions.getMe(),\n            this.actions.getTenant(),\n            this.actions.getTenantAdminLinkSSO(),\n          ]);\n        } catch (e) {\n          // Errors are handled in state, but catch just in case\n        }\n\n        // Check for errors in state\n        const error =\n          getMeError(this.state) ||\n          getTenantError(this.state) ||\n          getTenantAdminLinkSSOError(this.state);\n\n        if (error) {\n          this.contentRootElement.innerHTML = '';\n          const mainMessage =\n            typeof error === 'object' && error !== null && 'message' in error\n              ? (error.message as string)\n              : String(error) || 'An error occurred';\n          this.contentRootElement.append(createErrorComponent({ mainMessage }));\n          return;\n        }\n\n        await this.#initWidgetRoot();\n        this.onWidgetRootReady();\n      }\n    },\n);\n", "export function createErrorComponent({ mainMessage = 'An error occurred' }) {\n  const wrapper = document.createElement('div');\n  wrapper.setAttribute('data-id', 'widget-error');\n  wrapper.style.display = 'flex';\n  wrapper.style.flexDirection = 'column';\n  wrapper.style.alignItems = 'center';\n  wrapper.style.justifyContent = 'center';\n  wrapper.style.padding = '72px 36px';\n  wrapper.style.background = '#fff';\n  wrapper.style.borderRadius = '12px';\n  wrapper.style.boxShadow = '0 2px 8px rgba(0,0,0,0.03)';\n  wrapper.style.margin = '32px auto';\n  wrapper.style.maxWidth = '400px';\n\n  // Icon\n  const icon = document.createElement('div');\n  icon.innerHTML = `\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"20\" cy=\"20\" r=\"18\" stroke=\"#FF3B3B\" stroke-width=\"3\" fill=\"#fff\"/>\n      <text x=\"20\" y=\"27\" text-anchor=\"middle\" font-size=\"24\" font-family=\"Arial, sans-serif\" fill=\"#FF3B3B\">!</text>\n    </svg>\n  `;\n  icon.style.marginBottom = '12px';\n  wrapper.appendChild(icon);\n\n  // Main message\n  const main = document.createElement('div');\n  main.textContent = mainMessage;\n  main.style.fontWeight = 'bold';\n  main.style.fontSize = '20px';\n  main.style.color = '#222';\n  main.style.textAlign = 'center';\n  main.style.marginTop = '8px';\n  wrapper.appendChild(main);\n\n  return wrapper;\n}\n", "import { LinkDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getTenantAdminLinkSSO } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initTenantAdminLinkSSOMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantAdminLinkSSOMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      tenantAdminLinkSSODriver: LinkDriver;\n\n      #initTenantAdminLinkSSO() {\n        this.tenantAdminLinkSSODriver = new LinkDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-link[data-id=\"tenant-admin-link-sso\"]',\n            ),\n          { logger: this.logger },\n        );\n      }\n\n      #onValueUpdate = withMemCache(\n        (tenantAdminLinkSSO: ReturnType<typeof getTenantAdminLinkSSO>) => {\n          this.tenantAdminLinkSSODriver.href = tenantAdminLinkSSO;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTenantAdminLinkSSO();\n\n        this.#onValueUpdate(getTenantAdminLinkSSO(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getTenantAdminLinkSSO);\n      }\n    },\n);\n", "import createWebSdk from '@descope/web-js-sdk';\n\nexport type Sdk = ReturnType<typeof createWebSdk>;\n\ntype CustomAttributeType = string | boolean | number;\n\ntype CustomAttributes = Record<string, CustomAttributeType>;\n\ntype UserStatus = 'enabled' | 'disabled' | 'invited';\n\nexport type Tenant = AssociatedTenant & {\n  id: string;\n  name: string;\n  selfProvisioningDomains: string[];\n  customAttributes: CustomAttributes;\n  authType: string;\n  domains: string[];\n  createdTime: number;\n  disabled: boolean;\n  enforceSSO: boolean;\n};\n\nexport type TenantAdminLinkSSOResponse = {\n  adminSSOConfigurationLink: string;\n};\n\nexport type HttpClient = Sdk['httpClient'];\n\nexport type AssociatedTenant = {\n  tenantId: string;\n  roleNames: string[];\n};\n\nexport type User = {\n  loginIds: string[];\n  userId: string;\n  name: string;\n  email: string;\n  phone: string;\n  verifiedEmail: boolean;\n  verifiedPhone: boolean;\n  roleNames: string[];\n  userTenants: Tenant[];\n  status: UserStatus;\n  externalIds: string[];\n  picture: string;\n  test: boolean;\n  editable: boolean;\n  customAttributes: CustomAttributes;\n  createdTime: number;\n  TOTP: boolean;\n  SAML: boolean;\n  // OAuth: {},\n  webauthn: boolean;\n  password: boolean;\n  // ssoAppIds: [],\n  givenName: string;\n  middleName: string;\n  familyName: string;\n};\n\nexport enum AttributeTypeName {\n  TEXT = 'text',\n  NUMBER = 'number',\n  BOOLEAN = 'boolean',\n  SINGLE_SELECT = 'singleSelect',\n  ARRAY = 'array',\n  DATE = 'date',\n}\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { AttributeTypeName } from '../../../api/types';\nimport { getTenantCustomAttributes } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nconst getFormattedValue = (type: string, val: any) => {\n  if (type === AttributeTypeName.DATE && val) {\n    return new Date(val).toLocaleString();\n  }\n  if (type === AttributeTypeName.BOOLEAN && val !== undefined) {\n    return !val ? 'False' : 'True';\n  }\n  return (val || '').toString();\n};\n\nexport const initTenantCustomAttributesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantCustomAttributesMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      // flow Id is key in all maps\n      #editModals: Record<string, ModalDriver> = {};\n\n      #editFlows: Record<string, FlowDriver> = {};\n\n      #deleteModals: Record<string, ModalDriver> = {};\n\n      #deleteFlows: Record<string, FlowDriver> = {};\n\n      #initEditModalContent(\n        flowId: string,\n        type: string,\n        attName: string,\n        value: any,\n      ) {\n        const customAttributeValue =\n          type === AttributeTypeName.ARRAY ? (value || []).join(',') : value;\n\n        this.#editModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n            form: JSON.stringify({\n              customAttributes: {\n                [attName]: customAttributeValue,\n              },\n            }),\n          }),\n        );\n        this.#editFlows[flowId]?.onSuccess(() => {\n          this.#editModals[flowId]?.close();\n          this.actions.getTenant();\n        });\n      }\n\n      // have 2 init functions for edit and delete modals in order to keep the same standards as the email/phone/name mixin\n      #initDeleteModalContent(flowId: string) {\n        this.#deleteModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlows[flowId]?.onSuccess(() => {\n          this.#deleteModals[flowId]?.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #updateCustomValueTenantAttrs = withMemCache(\n        (\n          tenantCustomAttributes: ReturnType<typeof getTenantCustomAttributes>,\n        ) => {\n          const allCustomAttributesComponents =\n            this.shadowRoot?.querySelectorAll(\n              'descope-user-attribute[data-id^=\"customAttributes.\"]',\n            );\n\n          Array.from(allCustomAttributesComponents).forEach((nodeEle) => {\n            const attrName = nodeEle.getAttribute('data-id');\n            const customAttrName = attrName.replace('customAttributes.', '');\n            const type =\n              nodeEle.getAttribute('data-type') || AttributeTypeName.TEXT;\n            const val = tenantCustomAttributes[customAttrName];\n\n            const compInstance = new UserAttributeDriver(nodeEle, {\n              logger: this.logger,\n            });\n\n            compInstance.value = getFormattedValue(type, val);\n\n            this.#initEditFlow(\n              nodeEle,\n              customAttrName,\n              compInstance,\n              type,\n              customAttrName,\n              val,\n            );\n            this.#initDeleteFlow(nodeEle, customAttrName, compInstance);\n          });\n        },\n      );\n\n      #initEditFlow(\n        nodeEle: Element,\n        customAttrName: string,\n        compInstance: UserAttributeDriver,\n        type: string,\n        attName: string,\n        val: string,\n      ) {\n        const editFlowId = nodeEle.getAttribute('edit-flow-id');\n        if (editFlowId) {\n          this.#editModals[editFlowId] = this.createModal({\n            'data-id': `edit-${customAttrName}`,\n          });\n\n          this.#editFlows[editFlowId] = new FlowDriver(\n            () =>\n              this.#editModals[editFlowId]?.ele?.querySelector('descope-wc'),\n            { logger: this.logger },\n          );\n          this.#editModals[editFlowId].afterClose =\n            this.#initEditModalContent.bind(this, editFlowId);\n\n          compInstance.onEditClick(() => {\n            this.#editModals?.[editFlowId]?.open();\n          });\n\n          this.#initEditModalContent(editFlowId, type, attName, val);\n          this.syncFlowTheme(this.#editFlows[editFlowId]);\n        }\n      }\n\n      #initDeleteFlow(\n        nodeEle: Element,\n        customAttrName: string,\n        compInstance: UserAttributeDriver,\n      ) {\n        const deleteFlowId = nodeEle.getAttribute('delete-flow-id');\n        if (deleteFlowId) {\n          this.#deleteModals[deleteFlowId] = this.createModal({\n            'data-id': `delete-${customAttrName}`,\n          });\n\n          this.#deleteFlows[deleteFlowId] = new FlowDriver(\n            () =>\n              this.#deleteModals[deleteFlowId]?.ele?.querySelector(\n                'descope-wc',\n              ),\n            { logger: this.logger },\n          );\n          this.#deleteModals[deleteFlowId].afterClose =\n            this.#initDeleteModalContent.bind(this, deleteFlowId);\n\n          compInstance.onDeleteClick(() => {\n            this.#deleteModals?.[deleteFlowId]?.open();\n          });\n\n          this.#initDeleteModalContent(deleteFlowId);\n          this.syncFlowTheme(this.#deleteFlows[deleteFlowId]);\n        }\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#updateCustomValueTenantAttrs(\n          getTenantCustomAttributes(this.state),\n        );\n\n        this.subscribe(\n          this.#updateCustomValueTenantAttrs.bind(this),\n          getTenantCustomAttributes,\n        );\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getTenantEmailDomains } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initTenantEmailDomainsMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantEmailDomainsMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      tenantEmailDomainsDriver: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.tenantEmailDomainsDriver.editFlowId) return;\n\n        this.#editModal = this.createModal({\n          'data-id': 'edit-tenant-email-domains',\n        });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantEmailDomainsDriver.editFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n            form: JSON.stringify({\n              tenantEmailDomains: getTenantEmailDomains(this.state),\n            }),\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.tenantEmailDomainsDriver.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({\n          'data-id': 'delete-tenant-email-domains',\n        });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantEmailDomainsDriver.deleteFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initTenantEmailDomains() {\n        this.tenantEmailDomainsDriver = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"tenant-email-domains-edit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.tenantEmailDomainsDriver.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.tenantEmailDomainsDriver.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache(\n        (tenantEmailDomains: ReturnType<typeof getTenantEmailDomains>) => {\n          this.tenantEmailDomainsDriver.value = tenantEmailDomains;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTenantEmailDomains();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getTenantEmailDomains(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getTenantEmailDomains);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getTenantSSOExclusions } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initTenantSSOExclusionsMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantSSOExclusionsMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      tenantSSOExclusionsDriver: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.tenantSSOExclusionsDriver.editFlowId) return;\n\n        this.#editModal = this.createModal({\n          'data-id': 'edit-tenant-sso-exclusions',\n        });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantSSOExclusionsDriver.editFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n            form: JSON.stringify({\n              enforceSSOExclusions: getTenantSSOExclusions(this.state),\n            }),\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.tenantSSOExclusionsDriver.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({\n          'data-id': 'delete-tenant-sso-exclusions',\n        });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantSSOExclusionsDriver.deleteFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initTenantSSOExclusions() {\n        this.tenantSSOExclusionsDriver = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"tenant-force-sso-exclusions-edit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.tenantSSOExclusionsDriver.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.tenantSSOExclusionsDriver.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache(\n        (\n          ssoEnforceSSOExclusions: ReturnType<typeof getTenantSSOExclusions>,\n        ) => {\n          this.tenantSSOExclusionsDriver.value = ssoEnforceSSOExclusions;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTenantSSOExclusions();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getTenantSSOExclusions(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getTenantSSOExclusions);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getTenantEnforceSSO } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initTenantEnforceSSOMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantEnforceSSOMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      tenantEnforceSSODriver: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.tenantEnforceSSODriver.editFlowId) return;\n\n        this.#editModal = this.createModal({\n          'data-id': 'edit-tenant-enforce-sso',\n        });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantEnforceSSODriver.editFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n            form: JSON.stringify({\n              enforceSSO: getTenantEnforceSSO(this.state),\n            }),\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.tenantEnforceSSODriver.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({\n          'data-id': 'delete-tenant-enforce-sso',\n        });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantEnforceSSODriver.deleteFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initTenantEnforceSSO() {\n        this.tenantEnforceSSODriver = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"tenant-enforce-sso-edit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.tenantEnforceSSODriver.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.tenantEnforceSSODriver.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache(\n        (tenantEnforceSSO: ReturnType<typeof getTenantEnforceSSO>) => {\n          this.tenantEnforceSSODriver.value = tenantEnforceSSO;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTenantEnforceSSO();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getTenantEnforceSSO(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getTenantEnforceSSO);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getTenantName } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initTenantNameMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TenantNameMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      tenantNameDriver: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.tenantNameDriver.editFlowId) return;\n\n        this.#editModal = this.createModal({\n          'data-id': 'tenant-profile-set-name',\n        });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.tenantNameDriver.editFlowId,\n            tenant: this.tenantId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n            form: JSON.stringify({ tenantName: getTenantName(this.state) }),\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getTenant();\n        });\n      }\n\n      #initTenantName() {\n        this.tenantNameDriver = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"tenant-name-edit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.tenantNameDriver.onEditClick(() => {\n          this.#editModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache(\n        (tenantName: ReturnType<typeof getTenantName>) => {\n          this.tenantNameDriver.value = tenantName;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTenantName();\n        this.#initEditModal();\n\n        this.#onValueUpdate(getTenantName(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getTenantName);\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { flowRedirectUrlMixin } from '../flowRedirectUrlMixin';\nimport { initTenantAdminLinkSSOMixin } from './initComponentsMixins/initTenantAdminLinkSSOMixin';\nimport { initTenantCustomAttributesMixin } from './initComponentsMixins/initTenantCustomAttributesMixin';\nimport { initTenantEmailDomainsMixin } from './initComponentsMixins/initTenantEmailDomainsMixin';\nimport { initTenantSSOExclusionsMixin } from './initComponentsMixins/initTenantSSOExclusionsMixin';\nimport { initTenantEnforceSSOMixin } from './initComponentsMixins/initTenantEnforceSSOMixin';\nimport { initTenantNameMixin } from './initComponentsMixins/initTenantNameMixin';\nimport { initWidgetRootMixin } from './initComponentsMixins/initWidgetRootMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    /* @ts-ignore */\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      flowRedirectUrlMixin, // This mixin must be before all other mixins that loads flows,\n      initWidgetRootMixin,\n      initTenantNameMixin,\n      initTenantEmailDomainsMixin,\n      initTenantSSOExclusionsMixin,\n      initTenantEnforceSSOMixin,\n      initTenantCustomAttributesMixin,\n      initTenantAdminLinkSSOMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n", "import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\ndeclare const BUILD_VERSION: string;\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {\n    async init() {\n      await super.init?.();\n\n      const WebComponent: any =\n        customElements.get('descope-wc') ||\n        (await import('@descope/web-component').then(\n          (module) => module.default,\n        ));\n\n      WebComponent.sdkConfigOverrides = {\n        baseHeaders: {\n          'x-descope-widget-type': 'tenant-profile-widget',\n          'x-descope-widget-id': this.getAttribute('widget-id'),\n          'x-descope-widget-version': BUILD_VERSION,\n        },\n      };\n    }\n  };\n\nexport const TenantProfileWidget = compose(rootMixin)(HTMLElement);\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { TenantProfileWidget } from './widget';\nimport '@descope/web-component';\n\ndeclare global {\n  interface HTMLElement {\n    attributeChangedCallback(\n      attrName: string,\n      oldValue: string | null,\n      newValue: string | null,\n    ): void;\n    connectedCallback(): void;\n  }\n}\n\nexport default TenantProfileWidget;\n\ncustomElements.define('descope-tenant-profile-widget', TenantProfileWidget);\n"],
  "mappings": "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",
  "names": ["createFlowTemplate", "flowConfig", "template", "createTemplate", "Object", "entries", "forEach", "key", "value", "content", "querySelector", "setAttribute", "kebabCase", "getUrlParam", "paramName", "URLSearchParams", "window", "location", "search", "get", "buildAsyncReducer", "action", "args", "builder", "addCase", "pending", "state", "onPending", "fulfilled", "onFulfilled", "rejected", "onRejected", "withRequestStatus", "getStateSection", "loading", "error", "createAsyncThunk", "arg", "extra", "api", "user", "me", "reducer", "data", "payload", "getMe", "tenant", "details", "getTenant", "adminLinkSso", "getTenantAdminLinkSSO", "tenantAdminLinkSSO", "_a", "adminSSOConfigurationLink", "initialState", "apiPaths", "withErrorHandler", "res", "__awaiter", "text", "json", "JSON", "parse", "ok", "descopeErrorMsg", "errorDescription", "errorMessage", "Error", "status", "statusText", "Promise", "resolve", "loginIds", "externalIds", "userId", "name", "email", "roleNames", "phone", "verifiedEmail", "verifiedPhone", "userTenants", "editable", "createdTime", "Date", "getTime", "customAttributes", "familyName", "givenName", "middleName", "picture", "undefined", "password", "SAML", "test", "TOTP", "webauthn", "tenantMock", "tenantId", "id", "selfProvisioningDomains", "authType", "domains", "now", "disabled", "enforceSSO", "createTenantSdk", "httpClient", "mock", "tenantIdEncoded", "encodeURIComponent", "queryParams", "url", "post", "headers", "createUserSdk", "apiMixin", "createSingletonMixin", "superclass", "BaseClass", "compose", "projectIdMixin", "observeAttributesMixin", "loggerMixin", "baseUrlMixin", "cookieConfigMixin", "constructor", "_ApiMixinClass_api", "set", "this", "widgetId", "getAttribute", "__classPrivateFieldGet", "_ApiMixinClass_instances", "_ApiMixinClass_createSdk", "call", "init", "_b", "_super", "observeAttributes", "o", "n", "logger", "debug", "__classPrivateFieldSet", "config", "webSdk", "createWebSdk", "assign", "persistTokens", "baseHeaders", "projectId", "baseUrl", "refreshCookieName", "stateManagementMixin", "createStateManagementMixin", "reducers", "extraReducers", "asyncActions", "initLifecycleMixin", "super", "subscribe", "REDIRECT_FLOW_NAME_QUERY_PARAM", "flowRedirectUrlMixin", "_FlowRedirectUrlMixinClass_instances", "_FlowRedirectUrlMixinClass_createFlowRedirectModal", "modalMixin", "themeMixin", "widgetFlow", "history", "replaceState", "newUrl", "URL", "href", "delete", "toString", "modal", "createModal", "setContent", "flowId", "baseStaticUrl", "baseCdnUrl", "theme", "FlowDriver", "ele", "onSuccess", "close", "actions", "afterClose", "remove", "open", "getTenantCustomAttributes", "createSelector", "getTenantName", "getTenantEmailDomains", "getTenantSSOExclusions", "enforceSSOExclusions", "getTenantEnforceSSO", "flowSyncThemeMixin", "flowDriver", "fetchWidgetPagesMixin", "staticResourcesMixin", "createValidateAttributesMixin", "missingAttrValidator", "filename", "fetchStaticResource", "body", "initWidgetRootMixin", "_InitWidgetRootMixinClass_instances", "_InitWidgetRootMixinClass_initWidgetRoot", "descopeUiMixin", "initElementMixin", "onWidgetRootReady", "all", "e", "contentRootElement", "innerHTML", "mainMessage", "message", "String", "append", "wrapper", "document", "createElement", "style", "display", "flexDirection", "alignItems", "justifyContent", "padding", "background", "borderRadius", "boxShadow", "margin", "maxWidth", "icon", "marginBottom", "appendChild", "main", "textContent", "fontWeight", "fontSize", "color", "textAlign", "marginTop", "fetchWidgetPage", "loadDescopeUiComponents", "cloneNode", "initTenantAdminLinkSSOMixin", "_TenantAdminLinkSSOMixinClass_instances", "_TenantAdminLinkSSOMixinClass_initTenantAdminLinkSSO", "_TenantAdminLinkSSOMixinClass_onValueUpdate", "withMemCache", "tenantAdminLinkSSODriver", "bind", "LinkDriver", "shadowRoot", "AttributeTypeName", "initTenantCustomAttributesMixin", "_TenantCustomAttributesMixinClass_instances", "_TenantCustomAttributesMixinClass_editModals", "_TenantCustomAttributesMixinClass_editFlows", "_TenantCustomAttributesMixinClass_deleteModals", "_TenantCustomAttributesMixinClass_deleteFlows", "_TenantCustomAttributesMixinClass_initEditModalContent", "_TenantCustomAttributesMixinClass_initDeleteModalContent", "_TenantCustomAttributesMixinClass_updateCustomValueTenantAttrs", "_TenantCustomAttributesMixinClass_initEditFlow", "_TenantCustomAttributesMixinClass_initDeleteFlow", "tenantCustomAttributes", "allCustomAttributesComponents", "querySelectorAll", "Array", "from", "nodeEle", "customAttrName", "replace", "type", "TEXT", "val", "compInstance", "UserAttributeDriver", "DATE", "toLocaleString", "BOOLEAN", "m", "attName", "customAttributeValue", "ARRAY", "join", "form", "stringify", "_c", "i", "editFlowId", "onEditClick", "t", "syncFlowTheme", "deleteFlowId", "onDeleteClick", "initTenantEmailDomainsMixin", "_TenantEmailDomainsMixinClass_instances", "_TenantEmailDomainsMixinClass_editModal", "_TenantEmailDomainsMixinClass_editFlow", "_TenantEmailDomainsMixinClass_deleteModal", "_TenantEmailDomainsMixinClass_deleteFlow", "_TenantEmailDomainsMixinClass_initEditModal", "_TenantEmailDomainsMixinClass_initEditModalContent", "_TenantEmailDomainsMixinClass_initDeleteModal", "_TenantEmailDomainsMixinClass_initDeleteModalContent", "_TenantEmailDomainsMixinClass_initTenantEmailDomains", "_TenantEmailDomainsMixinClass_onValueUpdate", "tenantEmailDomains", "tenantEmailDomainsDriver", "c", "initTenantSSOExclusionsMixin", "_TenantSSOExclusionsMixinClass_instances", "_TenantSSOExclusionsMixinClass_editModal", "_TenantSSOExclusionsMixinClass_editFlow", "_TenantSSOExclusionsMixinClass_deleteModal", "_TenantSSOExclusionsMixinClass_deleteFlow", "_TenantSSOExclusionsMixinClass_initEditModal", "_TenantSSOExclusionsMixinClass_initEditModalContent", "_TenantSSOExclusionsMixinClass_initDeleteModal", "_TenantSSOExclusionsMixinClass_initDeleteModalContent", "_TenantSSOExclusionsMixinClass_initTenantSSOExclusions", "_TenantSSOExclusionsMixinClass_onValueUpdate", "ssoEnforceSSOExclusions", "tenantSSOExclusionsDriver", "initTenantEnforceSSOMixin", "_TenantEnforceSSOMixinClass_instances", "_TenantEnforceSSOMixinClass_editModal", "_TenantEnforceSSOMixinClass_editFlow", "_TenantEnforceSSOMixinClass_deleteModal", "_TenantEnforceSSOMixinClass_deleteFlow", "_TenantEnforceSSOMixinClass_initEditModal", "_TenantEnforceSSOMixinClass_initEditModalContent", "_TenantEnforceSSOMixinClass_initDeleteModal", "_TenantEnforceSSOMixinClass_initDeleteModalContent", "_TenantEnforceSSOMixinClass_initTenantEnforceSSO", "_TenantEnforceSSOMixinClass_onValueUpdate", "tenantEnforceSSO", "tenantEnforceSSODriver", "initTenantNameMixin", "_TenantNameMixinClass_instances", "_TenantNameMixinClass_editModal", "_TenantNameMixinClass_editFlow", "_TenantNameMixinClass_initEditModal", "_TenantNameMixinClass_initEditModalContent", "_TenantNameMixinClass_initTenantName", "_TenantNameMixinClass_onValueUpdate", "tenantName", "tenantNameDriver", "initMixin", "debuggerMixin", "TenantProfileWidget", "customElements", "import", "then", "module", "default", "sdkConfigOverrides", "HTMLElement", "define"]
}
