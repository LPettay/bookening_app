import {
  A,
  cookieConfigMixin,
  createAsyncThunk,
  createSelector,
  createStateManagementMixin,
  debuggerMixin,
  h as h2,
  x
} from "./chunk-ZIPBE7IV.js";
import {
  baseUrlMixin,
  createValidateAttributesMixin,
  descopeUiMixin,
  initElementMixin,
  projectIdMixin,
  staticResourcesMixin,
  themeMixin
} from "./chunk-GFNMNSNR.js";
import {
  Ie
} from "./chunk-GDK7FDVS.js";
import {
  initLifecycleMixin,
  loggerMixin,
  observeAttributesMixin
} from "./chunk-O4KJNIMM.js";
import {
  __awaiter,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __rest,
  h,
  l,
  n,
  o,
  r
} from "./chunk-AHUQ6KYR.js";
import "./chunk-KEXKKQVW.js";

// node_modules/@descope/audit-management-widget/dist/esm/index.js
var L = (e, t) => t ? { [e]: t } : {};
var A2 = (e) => {
  if (!e) return;
  const t = JSON.parse(e);
  return Array.isArray(t) && 0 === t.length ? void 0 : t;
};
var O = (e) => e.selectedAuditId;
var D = createSelector((e) => e.auditList.data, (e) => e.map((e2) => {
  const t = e2 || {}, { occurred: s, ID: i, type: o2 } = t, a = t.data, n2 = void 0 === a ? { saml_request: "", saml_response: "", saml_generated_user: "", saml_generated_roles: "", oidc_response: "", oidc_generated_user: "" } : a, { saml_request: d, saml_response: c, saml_generated_user: l2, saml_generated_roles: u, oidc_response: h3, oidc_generated_user: g } = n2, m = __rest(n2, ["saml_request", "saml_response", "saml_generated_user", "saml_generated_roles", "oidc_response", "oidc_generated_user"]), p = __rest(t, ["occurred", "ID", "type", "data"]);
  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, p), { data: m }), L("type", (v = o2) && v[0].toUpperCase() + v.slice(1))), L("saml_request", d)), L("saml_response", c)), L("saml_generated_user", A2(l2))), L("saml_generated_roles", A2(u))), L("oidc_response", A2(h3))), L("oidc_generated_user", A2(g))), { occurredFormatted: s ? new Date(Number(s) || 0).toLocaleString() : "N/A" });
  var v;
}));
createSelector(O, D, (e, t) => t.find((t2) => e === t2.id)), createSelector(O, (e) => !!e);
var W = createAsyncThunk("audit/search", (e, { extra: { api: t }, getState: s }) => {
  const i = s().searchParams;
  return t.audit.search(Object.assign(Object.assign({}, i), e));
});
var S = (/* @__PURE__ */ ((e) => (...t) => (s) => {
  s.addCase(e.pending, (e2, s2) => {
    t.forEach(({ onPending: t2 }) => {
      null == t2 || t2(e2, s2);
    });
  }), s.addCase(e.fulfilled, (e2, s2) => {
    t.forEach(({ onFulfilled: t2 }) => {
      null == t2 || t2(e2, s2);
    });
  }), s.addCase(e.rejected, (e2, s2) => {
    t.forEach(({ onRejected: t2 }) => {
      null == t2 || t2(e2, s2);
    });
  });
})(W))({ onPending: (e, t) => {
  e.searchParams = Object.assign(Object.assign({}, e.searchParams), t.meta.arg);
}, onFulfilled: (e, t) => {
  e.auditList.data = t.payload;
} }, ($ = (e) => e.auditList, { onFulfilled: (e) => {
  $(e).loading = false;
}, onPending: (e) => {
  $(e).loading = true, $(e).error = null;
}, onRejected: (e, t) => {
  $(e).loading = false, $(e).error = t.error;
} }));
var $;
var P = { action: W, reducer: S };
var M = { auditList: { data: [], loading: false, error: null }, searchParams: { text: "", sort: [] }, selectedAuditId: "" };
var q = { search: "/v1/mgmt/audit/search" };
var E = (e) => __awaiter(void 0, [e], void 0, function* ({ text: e2, sort: t }) {
  return new Promise((s) => {
    const i = [], o2 = (/* @__PURE__ */ new Date()).getTime() / 1e3 + 2592e3, r2 = new Date(o2).toLocaleString();
    for (let e3 = 1; e3 < 9; e3 += 1) i.push({ id: `Audit ${e3}`, action: `Action ${e3}`, actorId: `Actor ${e3}`, type: "info", method: `Method ${e3}`, userId: `User ${e3}`, device: `Device ${e3}`, geo: `Geo ${e3}`, remoteAddress: `127.0.0.${e3}`, externalIds: [`Login ID ${e3}`], occurred: o2, occurredFormatted: r2 });
    t.forEach((e3) => {
      i.sort((t2, s2) => {
        var i2, o3;
        return e3.desc ? null === (o3 = s2[e3.field]) || void 0 === o3 ? void 0 : o3.localeCompare(t2[e3.field]) : null === (i2 = t2[e3.field]) || void 0 === i2 ? void 0 : i2.localeCompare(s2[e3.field]);
      });
    }), s(i.filter((t2) => t2.id.toLowerCase().includes(e2.toLowerCase()) || t2.action.toLowerCase().includes(e2.toLowerCase()) || t2.type.toLowerCase().includes(e2.toLowerCase()) || t2.device.toLowerCase().includes(e2.toLowerCase()) || t2.method.toLowerCase().includes(e2.toLowerCase()) || t2.geo.toLowerCase().includes(e2.toLowerCase()) || t2.remoteAddress.toLowerCase().includes(e2.toLowerCase()) || t2.externalIds.includes(e2.toLowerCase()) || t2.userId.toLowerCase().includes(e2.toLowerCase())));
  });
});
var T = ({ httpClient: e, tenant: t, mock: s }) => ({ search: (...i) => __awaiter(void 0, [...i], void 0, function* ({ page: i2, limit: o2 = 1e4, text: r2, sort: n2, from: d } = {}) {
  if (s) return E({ page: i2, limit: o2, text: r2, sort: n2 }, t);
  const c = yield e.post(q.search, { limit: o2, page: i2, text: r2, sort: n2, from: d }, { queryParams: { tenant: t } });
  yield ((e2) => __awaiter(void 0, void 0, void 0, function* () {
    const t2 = yield e2.text(), s2 = JSON.parse(t2);
    if (!e2.ok) {
      const t3 = `${s2.errorDescription}${s2.errorMessage ? `: ${s2.errorMessage}` : ""}`;
      throw Error(t3 || `${e2.status} ${e2.statusText}`);
    }
    e2.json = () => Promise.resolve(s2), e2.text = () => Promise.resolve(t2);
  }))(c);
  return (yield c.json()).audits;
}) });
var N = h((e) => {
  var s, i, o2, r2;
  const p = r(projectIdMixin, observeAttributesMixin, loggerMixin, baseUrlMixin, cookieConfigMixin, createValidateAttributesMixin({ tenant: createValidateAttributesMixin.missingAttrValidator }))(e);
  return r2 = class extends p {
    constructor() {
      super(...arguments), s.add(this), i.set(this, void 0);
    }
    get tenantId() {
      return this.getAttribute("tenant");
    }
    get widgetId() {
      return this.getAttribute("widget-id");
    }
    get mock() {
      return this.getAttribute("mock");
    }
    get api() {
      return __classPrivateFieldGet(this, i, "f") || __classPrivateFieldGet(this, s, "m", o2).call(this), __classPrivateFieldGet(this, i, "f");
    }
    init() {
      const e2 = Object.create(null, { init: { get: () => super.init } });
      return __awaiter(this, void 0, void 0, function* () {
        var t;
        yield null === (t = e2.init) || void 0 === t ? void 0 : t.call(this), this.observeAttributes(["project-id", "base-url", "tenant"], () => {
          __classPrivateFieldGet(this, i, "f") && __classPrivateFieldGet(this, s, "m", o2).call(this);
        });
      });
    }
  }, i = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakSet(), o2 = function() {
    this.logger.debug("creating an sdk instance"), __classPrivateFieldSet(this, i, ((e2, t, s2, i2) => {
      const o3 = Ie(Object.assign(Object.assign({}, e2), { persistTokens: true, baseHeaders: { "x-descope-widget-type": "audit-management-widget", "x-descope-widget-id": i2, "x-descope-widget-version": "0.5.9" } }));
      return { audit: T({ httpClient: o3.httpClient, tenant: t, mock: s2 }) };
    })({ projectId: this.projectId, baseUrl: this.baseUrl, refreshCookieName: this.refreshCookieName }, this.tenantId, "true" === this.mock, this.widgetId), "f");
  }, r2;
});
var H = h((e) => {
  const s = r(createStateManagementMixin({ name: "widget", initialState: M, reducers: { setSelectedAuditId: (e2, { payload: t }) => {
    e2.selectedAuditId = t;
  } }, extraReducers: (e2) => {
    P.reducer(e2);
  }, asyncActions: { searchAudit: P.action } }), initLifecycleMixin, loggerMixin, N)(e);
  return class extends s {
    constructor(...e2) {
      super(...e2), this.state = M, this.subscribe((e3) => {
        this.logger.debug("State update:", e3), this.state = e3;
      });
    }
  };
});
var F = h((e) => {
  const s = r(staticResourcesMixin, createValidateAttributesMixin({ "widget-id": createValidateAttributesMixin.missingAttrValidator }))(e);
  return class extends s {
    get widgetId() {
      return this.getAttribute("widget-id");
    }
    fetchWidgetPage(e2) {
      return __awaiter(this, void 0, void 0, function* () {
        return (yield this.fetchStaticResource(`audit-management-widget/${this.widgetId}/${e2}`, "text")).body;
      });
    }
  };
});
var U = h((e) => {
  var i, o2, r2;
  return r2 = class extends r(loggerMixin, initLifecycleMixin, descopeUiMixin, initElementMixin, F, H)(e) {
    constructor() {
      super(...arguments), i.add(this);
    }
    onWidgetRootReady() {
      return __awaiter(this, void 0, void 0, function* () {
      });
    }
    init() {
      const e2 = Object.create(null, { init: { get: () => super.init } });
      return __awaiter(this, void 0, void 0, function* () {
        var t;
        yield null === (t = e2.init) || void 0 === t ? void 0 : t.call(this), yield Promise.all([__classPrivateFieldGet(this, i, "m", o2).call(this)]), this.onWidgetRootReady();
      });
    }
  }, i = /* @__PURE__ */ new WeakSet(), o2 = function() {
    return __awaiter(this, void 0, void 0, function* () {
      const e2 = n(yield this.fetchWidgetPage("root.html"));
      yield this.loadDescopeUiComponents(e2), this.contentRootElement.append(e2.content.cloneNode(true));
    });
  }, r2;
});
var J = h((e) => {
  var s, o2, r2, d, c;
  return c = class extends r(loggerMixin, U, H)(e) {
    constructor() {
      super(...arguments), s.add(this), o2.set(this, l(() => {
        const e2 = this.rangeInput.value, t = /* @__PURE__ */ new Date();
        let s2;
        switch (e2) {
          case "minuets15":
            s2 = t.setMinutes(t.getMinutes() - 15);
            break;
          case "hour":
            s2 = t.setHours(t.getHours() - 1);
            break;
          case "hour6":
            s2 = t.setHours(t.getHours() - 6);
            break;
          case "day":
          default:
            s2 = t.setDate(t.getDate() - 1);
            break;
          case "day3":
            s2 = t.setDate(t.getDate() - 3);
            break;
          case "week":
            s2 = t.setDate(t.getDate() - 7);
            break;
          case "week2":
            s2 = t.setDate(t.getDate() - 14);
            break;
          case "month":
            s2 = t.setMonth(t.getMonth() - 1);
        }
        this.actions.searchAudit({ text: this.searchInput.value, from: Math.floor(new Date(s2).getTime()) });
      }));
    }
    onWidgetRootReady() {
      const e2 = Object.create(null, { onWidgetRootReady: { get: () => super.onWidgetRootReady } });
      return __awaiter(this, void 0, void 0, function* () {
        var t;
        yield null === (t = e2.onWidgetRootReady) || void 0 === t ? void 0 : t.call(this), __classPrivateFieldGet(this, s, "m", r2).call(this), __classPrivateFieldGet(this, s, "m", d).call(this);
      });
    }
  }, o2 = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakSet(), r2 = function() {
    var e2;
    this.searchInput = new x(null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.querySelector('[data-id="search-input"]'), { logger: this.logger }), this.searchInput.onInput(__classPrivateFieldGet(this, o2, "f")), __classPrivateFieldGet(this, o2, "f").call(this);
  }, d = function() {
    var e2;
    this.rangeInput = new A(null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.querySelector('[data-id="range-input"]'), { logger: this.logger }), this.rangeInput.onInput(__classPrivateFieldGet(this, o2, "f"));
  }, c;
});
var V = h((e) => {
  var s, i, r2, d;
  return d = class extends r(H, loggerMixin, U)(e) {
    constructor() {
      super(...arguments), s.add(this), r2.set(this, o((e2) => {
        this.auditTable.data = e2;
      }));
    }
    onWidgetRootReady() {
      const e2 = Object.create(null, { onWidgetRootReady: { get: () => super.onWidgetRootReady } });
      return __awaiter(this, void 0, void 0, function* () {
        var t;
        yield null === (t = e2.onWidgetRootReady) || void 0 === t ? void 0 : t.call(this), __classPrivateFieldGet(this, s, "m", i).call(this), __classPrivateFieldGet(this, r2, "f").call(this, D(this.state)), this.subscribe(__classPrivateFieldGet(this, r2, "f").bind(this), D);
      });
    }
  }, r2 = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakSet(), i = function() {
    var e2;
    this.auditTable = new h2(null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.querySelector('[data-id="audit-table"]'), { logger: this.logger }), this.auditTable.onSelectedItemsChange((e3) => {
      this.actions.setSelectedAuditId(e3.detail.value.map(({ id: e4 }) => e4));
    });
  }, d;
});
var G = h((e) => class extends r(debuggerMixin, themeMixin, V, J)(e) {
  init() {
    const e2 = Object.create(null, { init: { get: () => super.init } });
    return __awaiter(this, void 0, void 0, function* () {
      var t;
      yield null === (t = e2.init) || void 0 === t ? void 0 : t.call(this);
    });
  }
});
var z = r((e) => class extends G(e) {
})(HTMLElement);
customElements.define("descope-audit-management-widget", z);
export {
  z as default
};
//# sourceMappingURL=esm-VMAG6AOM.js.map
