{
  "version": 3,
  "sources": ["../../@descope/applications-portal-widget/src/lib/widget/api/types.ts", "../../@descope/applications-portal-widget/src/lib/widget/state/selectors.ts", "../../@descope/applications-portal-widget/src/lib/widget/state/asyncActions/loadSSOApps.ts", "../../@descope/applications-portal-widget/src/lib/widget/state/asyncActions/helpers.ts", "../../@descope/applications-portal-widget/src/lib/widget/state/initialState.ts", "../../@descope/applications-portal-widget/src/lib/widget/api/apiPaths.ts", "../../@descope/applications-portal-widget/src/lib/widget/api/sdk/mocks.ts", "../../@descope/applications-portal-widget/src/lib/widget/api/sdk/createSsoAppsSdk.ts", "../../@descope/applications-portal-widget/src/lib/widget/api/sdk/helpers.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/apiMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/api/sdk/index.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/stateManagementMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initAppsListMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/mixins/initMixin/initMixin.ts", "../../@descope/applications-portal-widget/src/lib/widget/index.ts", "../../@descope/applications-portal-widget/src/lib/index.ts"],
  "sourcesContent": ["import createWebSdk from '@descope/web-js-sdk';\n\nexport type Sdk = ReturnType<typeof createWebSdk>;\n\nexport type HttpClient = Sdk['httpClient'];\n\nexport enum SSOAppType {\n  oidc = 'oidc',\n  saml = 'saml',\n}\n\ninterface App {\n  id: string;\n  name: string;\n  description?: string;\n  enabled: boolean;\n  logo?: string;\n}\n\nexport interface SamlApplication extends App {\n  appType: SSOAppType.saml;\n  samlSettings?: {\n    idpInitiatedUrl: string;\n  };\n}\n\nexport interface OidcApplication extends App {\n  appType: SSOAppType.oidc;\n  oidcSettings?: {\n    customIdpInitiatedLoginPageUrl: string;\n  };\n}\n\nexport type SSOApplication = SamlApplication | OidcApplication;\n", "import { createSelector } from 'reselect';\nimport { State } from './types';\nimport { SSOAppType } from '../api/types';\n\nexport const getSSOAppsList = (state: State) => state.ssoAppsList.data;\nexport const getSamlApps = createSelector(\n  getSSOAppsList,\n  (ssoAppsList) =>\n    ssoAppsList?.filter?.((app) => app.appType === SSOAppType.saml),\n);\n\nexport const getOidcWithCustomIdpInitiatedLoginPageUrlApps = createSelector(\n  getSSOAppsList,\n  (ssoAppsList) =>\n    ssoAppsList?.filter?.(\n      (app) =>\n        app.appType === SSOAppType.oidc &&\n        app.oidcSettings?.customIdpInitiatedLoginPageUrl,\n    ),\n);\n\nexport const getAppsList = createSelector(\n  getSamlApps,\n  getOidcWithCustomIdpInitiatedLoginPageUrlApps,\n  (samlApps, oidcApps) =>\n    [...samlApps, ...oidcApps].map((app) => ({\n      name: app.name,\n      icon: app.logo,\n      url:\n        app.appType === SSOAppType.saml\n          ? app.samlSettings?.idpInitiatedUrl\n          : app.oidcSettings?.customIdpInitiatedLoginPageUrl,\n    })),\n);\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['ssoApps']['load']>,\n  ThunkConfigExtraApi\n>('ssoApps/load', (arg, { extra: { api } }) => api.ssoApps.load());\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.ssoAppsList.data = action.payload?.apps;\n    },\n  },\n  withRequestStatus((state: State) => state.ssoAppsList),\n);\n\nexport const loadSSOApps = { action, reducer };\n", "/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n", "import { State } from './types';\n\nexport const initialState: State = {\n  ssoAppsList: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n};\n", "export const apiPaths = {\n  ssoApps: {\n    load: '/v1/mgmt/sso/idp/apps/load',\n  },\n};\n", "import { SSOApplication, SSOAppType } from '../types';\n\nconst load: () => Promise<{ apps: SSOApplication[] }> = async () =>\n  new Promise((resolve) => {\n    resolve({\n      apps: [\n        {\n          id: 'ssoapp1',\n          name: 'App 1',\n          description: 'This is the first SAML app',\n          enabled: true,\n          appType: SSOAppType.saml,\n          logo: 'logo1',\n          samlSettings: {\n            idpInitiatedUrl: '',\n          },\n        },\n        {\n          id: 'ssoapp2',\n          name: 'App 2',\n          description: 'This is the first OIDC app',\n          enabled: true,\n          appType: SSOAppType.oidc,\n          logo: 'logo2',\n        },\n        {\n          id: 'ssoapp3',\n          name: 'App 3',\n          description: 'This is the second SAML app',\n          enabled: true,\n          appType: SSOAppType.saml,\n          logo: 'logo3',\n          samlSettings: {\n            idpInitiatedUrl: '',\n          },\n        },\n      ],\n    });\n  });\n\nconst ssoApps = {\n  load,\n};\n\nexport { ssoApps };\n", "import { apiPaths } from '../apiPaths';\nimport { HttpClient } from '../types';\nimport { withErrorHandler } from './helpers';\nimport { ssoApps } from './mocks';\n\nexport const createSsoAppsSdk = ({\n  httpClient,\n  mock,\n}: {\n  httpClient: HttpClient;\n  mock: boolean;\n}) => {\n  const load = async () => {\n    if (mock) {\n      return ssoApps.load();\n    }\n    const res = await httpClient.get(apiPaths.ssoApps.load);\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  return {\n    load,\n  };\n};\n", "export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  baseUrlMixin,\n  cookieConfigMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      cookieConfigMixin,\n      baseUrlMixin,\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          {\n            projectId: this.projectId,\n            baseUrl: this.baseUrl,\n            refreshCookieName: this.refreshCookieName,\n          },\n          this.mock === 'true',\n          this.widgetId,\n        );\n      }\n\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(['project-id', 'base-url'], () => {\n          if (this.#api) {\n            this.#createSdk();\n          }\n        });\n      }\n    };\n  },\n);\n", "import createWebSdk from '@descope/web-js-sdk';\nimport { createSsoAppsSdk } from './createSsoAppsSdk';\n\ndeclare const BUILD_VERSION: string;\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  mock: boolean,\n  widgetId?: string,\n) => {\n  const webSdk = createWebSdk({\n    ...config,\n    persistTokens: true,\n    baseHeaders: {\n      'x-descope-widget-type': 'applications-portal-widget',\n      'x-descope-widget-id': widgetId,\n      'x-descope-widget-version': BUILD_VERSION,\n    },\n  });\n\n  return {\n    ssoApps: createSsoAppsSdk({ httpClient: webSdk.httpClient, mock }),\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n", "/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { loadSSOApps } from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {},\n        extraReducers: (builder) => {\n          loadSSOApps.reducer(builder);\n        },\n        asyncActions: {\n          loadSSOApps: loadSSOApps.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'applications-portal-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res.body;\n      }\n    };\n  },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        const template = createTemplate(\n          // await import('../../../../../../test/mocks/rootMock').then(\n          //   (module) => module.default,\n          // ),\n          await this.fetchWidgetPage('root.html'),\n        );\n        await this.loadDescopeUiComponents(template);\n\n        return template;\n      }\n\n      #renderTemplate(template: HTMLTemplateElement) {\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        const [template] = await Promise.all([\n          this.#initWidgetRoot(),\n          this.actions.loadSSOApps(),\n        ]);\n        // we want to render the template only after the data was fetched\n        // so we won't show the apps-list empty state until the data is loaded\n        this.#renderTemplate(template);\n\n        this.onWidgetRootReady();\n      }\n    },\n);\n", "import { AppsListDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { getAppsList } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initAppsListMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitAppsListMixinClass extends compose(\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      appsList: AppsListDriver;\n\n      #initAppsList(appsList: ReturnType<typeof getAppsList>) {\n        this.appsList = new AppsListDriver(\n          () => this.shadowRoot?.querySelector('descope-apps-list'),\n          { logger: this.logger },\n        );\n        this.appsList.data = appsList;\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n        this.#initAppsList(getAppsList(this.state));\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { initAppsListMixin } from './initComponentsMixins/initAppsListMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    // @ts-ignore\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      initAppsListMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n", "import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {};\n\nexport const ApplicationsPortalWidget = compose(rootMixin)(HTMLElement);\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { ApplicationsPortalWidget } from './widget';\n\nexport default ApplicationsPortalWidget;\n\ncustomElements.define(\n  'descope-applications-portal-widget',\n  ApplicationsPortalWidget,\n);\n"],
  "mappings": "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",
  "names": ["SSOAppType", "getSSOAppsList", "state", "ssoAppsList", "data", "getSamlApps", "createSelector", "_a", "filter", "call", "app", "appType", "saml", "getOidcWithCustomIdpInitiatedLoginPageUrlApps", "oidc", "oidcSettings", "customIdpInitiatedLoginPageUrl", "getAppsList", "samlApps", "oidcApps", "map", "name", "icon", "logo", "url", "samlSettings", "idpInitiatedUrl", "_b", "action", "createAsyncThunk", "arg", "extra", "api", "ssoApps", "load", "reducer", "args", "builder", "addCase", "pending", "forEach", "onPending", "fulfilled", "onFulfilled", "rejected", "onRejected", "payload", "apps", "getStateSection", "loading", "error", "loadSSOApps", "initialState", "apiPaths", "__awaiter", "Promise", "resolve", "id", "description", "enabled", "createSsoAppsSdk", "httpClient", "mock", "res", "get", "text", "json", "JSON", "parse", "ok", "descopeErrorMsg", "errorDescription", "errorMessage", "Error", "status", "statusText", "withErrorHandler", "apiMixin", "createSingletonMixin", "superclass", "BaseClass", "compose", "projectIdMixin", "observeAttributesMixin", "loggerMixin", "cookieConfigMixin", "baseUrlMixin", "constructor", "_ApiMixinClass_api", "set", "this", "getAttribute", "__classPrivateFieldGet", "_ApiMixinClass_instances", "_ApiMixinClass_createSdk", "init", "_super", "observeAttributes", "logger", "debug", "__classPrivateFieldSet", "config", "widgetId", "webSdk", "createWebSdk", "Object", "assign", "persistTokens", "baseHeaders", "projectId", "baseUrl", "refreshCookieName", "stateManagementMixin", "createStateManagementMixin", "reducers", "extraReducers", "asyncActions", "initLifecycleMixin", "super", "subscribe", "fetchWidgetPagesMixin", "staticResourcesMixin", "createValidateAttributesMixin", "missingAttrValidator", "filename", "fetchStaticResource", "body", "initWidgetRootMixin", "_InitWidgetRootMixinClass_instances", "_InitWidgetRootMixinClass_initWidgetRoot", "_InitWidgetRootMixinClass_renderTemplate", "descopeUiMixin", "initElementMixin", "onWidgetRootReady", "template", "all", "actions", "n", "createTemplate", "fetchWidgetPage", "loadDescopeUiComponents", "contentRootElement", "append", "content", "cloneNode", "initAppsListMixin", "_InitAppsListMixinClass_instances", "_InitAppsListMixinClass_initAppsList", "appsList", "AppsListDriver", "shadowRoot", "querySelector", "initMixin", "debuggerMixin", "themeMixin", "ApplicationsPortalWidget", "HTMLElement", "customElements", "define"]
}
