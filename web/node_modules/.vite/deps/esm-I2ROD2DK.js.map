{
  "version": 3,
  "sources": ["../../@descope/user-profile-widget/src/lib/widget/mixins/helpers.ts", "../../@descope/user-profile-widget/src/lib/widget/state/asyncActions/helpers.ts", "../../@descope/user-profile-widget/src/lib/widget/state/asyncActions/getMe.ts", "../../@descope/user-profile-widget/src/lib/widget/state/asyncActions/logout.ts", "../../@descope/user-profile-widget/src/lib/widget/state/initialState.ts", "../../@descope/user-profile-widget/src/lib/widget/api/apiPaths.ts", "../../@descope/user-profile-widget/src/lib/widget/api/sdk/mocks.ts", "../../@descope/user-profile-widget/src/lib/widget/api/sdk/createUserSdk.ts", "../../@descope/user-profile-widget/src/lib/widget/api/sdk/helpers.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/apiMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/api/sdk/index.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/stateManagementMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/flowRedirectUrlMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/state/selectors.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/flowSyncThemeMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initAvatarMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initEmailUserAttrMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initLogoutMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initNameUserAttrMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initPasskeyUserAuthMethodMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initPasswordUserAuthMethodMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initPhoneUserAttrMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initTotpUserAuthMethodMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initUserBuiltinAttributesMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/api/types.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initUserCustomAttributesMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/mixins/initMixin/initMixin.ts", "../../@descope/user-profile-widget/src/lib/widget/index.ts", "../../@descope/user-profile-widget/src/lib/index.ts"],
  "sourcesContent": ["import { createTemplate, kebabCase } from '@descope/sdk-helpers';\n\ntype FlowConfig = {\n  projectId: string;\n  flowId: string;\n  baseUrl?: string;\n  baseStaticUrl?: string;\n  baseCdnUrl?: string;\n  refreshCookieName?: string;\n  theme?: string;\n};\n\nexport const createFlowTemplate = (\n  flowConfig: FlowConfig = {} as FlowConfig,\n) => {\n  const template = createTemplate(`<descope-wc></descope-wc>`);\n\n  Object.entries(flowConfig).forEach(([key, value]) => {\n    template.content\n      .querySelector('descope-wc')\n      .setAttribute(kebabCase(key), value);\n  });\n\n  return template;\n};\n\nexport function getUrlParam(paramName: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(paramName);\n}\n\nexport function resetUrlParam(paramName: string) {\n  if (window.history.replaceState && getUrlParam(paramName)) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.delete(paramName);\n    newUrl.search = search.toString();\n    window.history.replaceState({}, '', newUrl.toString());\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['me']>,\n  ThunkConfigExtraApi\n>('users/me', (arg, { extra: { api } }) => api.user.me());\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.me.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.me),\n);\n\nexport const getMe = { action, reducer };\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['logout']>,\n  ThunkConfigExtraApi\n>('users/logout', (arg, { extra: { api } }) => api.user.logout());\n\nconst reducer = buildAsyncReducer(action)({});\n\nexport const logout = { action, reducer };\n", "import { State } from './types';\n\nexport const initialState: State = {\n  me: {\n    loading: false,\n    error: null,\n    data: {},\n  },\n};\n", "export const apiPaths = {\n  user: {\n    me: '/v1/auth/me',\n  },\n};\n", "import { User } from '../types';\n\nconst me: () => Promise<User> = async () =>\n  new Promise((resolve) => {\n    resolve({\n      loginIds: [`user@company.com`],\n      externalIds: [`user@company.com`],\n      userId: `user-1`,\n      name: `Test User`,\n      email: `user@company.com`,\n      roleNames: [`Role`],\n      phone: `+1-202-555-010`,\n      verifiedEmail: true,\n      verifiedPhone: true,\n      userTenants: [],\n      status: 'enabled',\n      editable: true,\n      createdTime: new Date().getTime(),\n      customAttributes: {},\n      familyName: '',\n      givenName: '',\n      middleName: '',\n      picture: undefined,\n      password: true,\n      SAML: false,\n      test: false,\n      TOTP: false,\n      webauthn: true,\n    });\n  });\n\nconst user = {\n  me,\n};\n\nexport { user };\n", "import { apiPaths } from '../apiPaths';\nimport { HttpClient } from '../types';\nimport { withErrorHandler } from './helpers';\nimport { user } from './mocks';\n\nexport const createUserSdk = ({\n  httpClient,\n  mock,\n}: {\n  httpClient: HttpClient;\n  mock: boolean;\n}) => {\n  const me = async () => {\n    if (mock) {\n      return user.me();\n    }\n    const res = await httpClient.get(apiPaths.user.me);\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  return {\n    me,\n  };\n};\n", "export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  baseUrlMixin,\n  cookieConfigMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      baseUrlMixin,\n      cookieConfigMixin,\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          {\n            projectId: this.projectId,\n            baseUrl: this.baseUrl,\n            refreshCookieName: this.refreshCookieName,\n          },\n          this.mock === 'true',\n          this.widgetId,\n        );\n      }\n\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(['project-id', 'base-url'], () => {\n          if (this.#api) {\n            this.#createSdk();\n          }\n        });\n      }\n    };\n  },\n);\n", "import '@descope/core-js-sdk';\nimport createWebSdk from '@descope/web-js-sdk';\nimport { createUserSdk } from './createUserSdk';\n\ndeclare const BUILD_VERSION: string;\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  mock: boolean,\n  widgetId?: string,\n) => {\n  const webSdk = createWebSdk({\n    ...config,\n    persistTokens: true,\n    baseHeaders: {\n      'x-descope-widget-type': 'user-profile-widget',\n      'x-descope-widget-id': widgetId,\n      'x-descope-widget-version': BUILD_VERSION,\n    },\n  });\n\n  return {\n    user: {\n      ...createUserSdk({ httpClient: webSdk.httpClient, mock }),\n      logout: !mock\n        ? webSdk.logout\n        : <typeof webSdk.logout>(<unknown>(async () => {})),\n    },\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n", "/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { getMe, logout } from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {},\n        extraReducers: (builder) => {\n          getMe.reducer(builder);\n          logout.reducer(builder);\n        },\n        asyncActions: {\n          getMe: getMe.action,\n          logout: logout.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n", "import { FlowDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  initLifecycleMixin,\n  loggerMixin,\n  modalMixin,\n  cookieConfigMixin,\n  themeMixin,\n} from '@descope/sdk-mixins';\nimport { createFlowTemplate, getUrlParam, resetUrlParam } from './helpers';\nimport { stateManagementMixin } from './stateManagementMixin';\n\nconst REDIRECT_FLOW_NAME_QUERY_PARAM = 'widget-flow';\n\nexport const flowRedirectUrlMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class FlowRedirectUrlMixinClass extends compose(\n      initLifecycleMixin,\n      modalMixin,\n      stateManagementMixin,\n      cookieConfigMixin,\n      loggerMixin,\n      themeMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n\n        const widgetFlow = getUrlParam(REDIRECT_FLOW_NAME_QUERY_PARAM);\n\n        if (widgetFlow) {\n          resetUrlParam(REDIRECT_FLOW_NAME_QUERY_PARAM);\n          this.#createFlowRedirectModal(widgetFlow);\n        }\n      }\n\n      #createFlowRedirectModal(widgetFlow: string) {\n        const modal = this.createModal({ 'data-id': 'redirect-flow' });\n        modal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: widgetFlow,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n\n        const flow = new FlowDriver(\n          () => modal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n\n        flow.onSuccess(() => {\n          modal.close();\n          this.actions.getMe();\n        });\n\n        modal.afterClose = () => {\n          modal.remove();\n        };\n\n        modal.open();\n      }\n    },\n);\n", "import { createSelector } from 'reselect';\nimport { State } from './types';\n\nexport const getMe = (state: State) => state.me.data;\n\nexport const getPicture = createSelector(getMe, (me) => me.picture);\nexport const getEmail = createSelector(getMe, (me) => me.email);\nexport const getIsEmailVerified = createSelector(\n  getMe,\n  (me) => me.verifiedEmail,\n);\nexport const getName = createSelector(getMe, (me) => me.name);\nexport const getPhone = createSelector(getMe, (me) => me.phone);\nexport const getIsPhoneVerified = createSelector(\n  getMe,\n  (me) => me.verifiedPhone,\n);\nexport const getHasPasskey = createSelector(getMe, (me) => me.webauthn);\nexport const getHasPassword = createSelector(getMe, (me) => me.password);\nexport const getHasTotp = createSelector(getMe, (me) => me.TOTP);\n\nexport const getUserCustomAttrs = createSelector(\n  getMe,\n  (me) => me.customAttributes as Record<string, any>,\n);\n\nexport const getUserBuiltinAttrs = createSelector(getMe, (me) => ({\n  givenName: me.givenName,\n  middleName: me.middleName,\n  familyName: me.familyName,\n}));\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'user-profile-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res.body;\n      }\n    };\n  },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        const template = createTemplate(\n          // await import('../../../../../../test/mocks/rootMock').then(module => module.default)\n          await this.fetchWidgetPage('root.html'),\n        );\n        await this.loadDescopeUiComponents(template);\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        await Promise.all([this.actions.getMe(), this.#initWidgetRoot()]);\n\n        this.onWidgetRootReady();\n      }\n    },\n);\n", "import { FlowDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { observeAttributesMixin, themeMixin } from '@descope/sdk-mixins';\n\nexport const flowSyncThemeMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class FlowSyncThemeMixinClass extends compose(\n      themeMixin,\n      observeAttributesMixin,\n    )(superclass) {\n      syncFlowTheme(flowDriver: FlowDriver) {\n        // eslint-disable-next-line no-param-reassign\n        flowDriver.theme = this.theme;\n        this.observeAttributes(['theme'], () => {\n          // eslint-disable-next-line no-param-reassign\n          flowDriver.theme = this.theme;\n        });\n      }\n    },\n);\n", "import {\n  AvatarDriver,\n  FlowDriver,\n  ModalDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n  themeMixin,\n} from '@descope/sdk-mixins';\nimport { getName, getPicture } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initAvatarMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class AvatarMixinClass extends compose(\n      flowSyncThemeMixin,\n      themeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      cookieConfigMixin,\n      initWidgetRootMixin,\n      modalMixin,\n    )(superclass) {\n      avatar: AvatarDriver;\n\n      #modal: ModalDriver;\n\n      #flow: FlowDriver;\n\n      #initModal() {\n        if (!this.avatar.flowId) return;\n\n        this.#modal = this.createModal({ 'data-id': 'update-pic' });\n        this.#flow = new FlowDriver(\n          () => this.#modal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#modal.afterClose = this.#initModalContent.bind(this);\n        this.#initModalContent();\n        this.syncFlowTheme(this.#flow);\n      }\n\n      #initModalContent() {\n        this.#modal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.avatar.flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#flow.onSuccess(() => {\n          this.#modal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initAvatar() {\n        this.avatar = new AvatarDriver(\n          () => this.shadowRoot?.querySelector('descope-avatar'),\n          { logger: this.logger },\n        );\n\n        this.avatar.onClick(() => {\n          this.#modal?.open();\n        });\n      }\n\n      #onPictureUpdate = withMemCache(\n        (picture: ReturnType<typeof getPicture>) => {\n          this.avatar.image = picture;\n        },\n      );\n\n      #onNameUpdate = withMemCache((name: ReturnType<typeof getName>) => {\n        this.avatar.displayName = name;\n      });\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initAvatar();\n        this.#initModal();\n\n        this.#onPictureUpdate(getPicture(this.state));\n        this.#onNameUpdate(getName(this.state));\n\n        this.subscribe(this.#onPictureUpdate.bind(this), getPicture);\n\n        this.subscribe(this.#onNameUpdate.bind(this), getName);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getEmail, getIsEmailVerified } from '../../../state/selectors';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initEmailUserAttrMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class EmailUserAttrMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      emailUserAttr: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.emailUserAttr.editFlowId) return;\n\n        this.#editModal = this.createModal({ 'data-id': 'edit-email' });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.emailUserAttr.editFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.emailUserAttr.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({ 'data-id': 'delete-email' });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.emailUserAttr.deleteFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initEmailUserAttr() {\n        this.emailUserAttr = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"email\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.emailUserAttr.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.emailUserAttr.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache((email: ReturnType<typeof getEmail>) => {\n        this.emailUserAttr.value = email;\n      });\n\n      #onValueBadgeLabelUpdate = withMemCache(\n        (isEmailVerified: ReturnType<typeof getIsEmailVerified>) => {\n          this.emailUserAttr.badgeLabel = isEmailVerified ? '' : 'Unverified';\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initEmailUserAttr();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getEmail(this.state));\n        this.#onValueBadgeLabelUpdate(getIsEmailVerified(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getEmail);\n\n        this.subscribe(\n          this.#onValueBadgeLabelUpdate.bind(this),\n          getIsEmailVerified,\n        );\n      }\n    },\n);\n", "import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initLogoutMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class LogoutMixinClass extends compose(\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      modalMixin,\n    )(superclass) {\n      logout: ButtonDriver;\n\n      #initLogout() {\n        this.logout = new ButtonDriver(\n          () =>\n            this.shadowRoot?.querySelector('descope-button[data-id=\"logout\"]'),\n          { logger: this.logger },\n        );\n\n        this.logout.onClick(async () => {\n          await this.actions.logout();\n          this.dispatchEvent(new CustomEvent('logout'));\n        });\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initLogout();\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getName } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initNameUserAttrMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class NameUserAttrMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      nameUserAttr: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.nameUserAttr.editFlowId) return;\n\n        this.#editModal = this.createModal({ 'data-id': 'edit-name' });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.nameUserAttr.editFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.nameUserAttr.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({ 'data-id': 'delete-name' });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.nameUserAttr.deleteFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initNameUserAttr() {\n        this.nameUserAttr = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"name\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.nameUserAttr.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.nameUserAttr.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache((name: ReturnType<typeof getName>) => {\n        this.nameUserAttr.value = name;\n      });\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initNameUserAttr();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getName(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getName);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAuthMethodDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { getHasPasskey } from '../../../state/selectors';\nimport { createFlowTemplate } from '../../helpers';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initPasskeyUserAuthMethodMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class PasskeyUserAuthMethodMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      passkeyUserAuthMethod: UserAuthMethodDriver;\n\n      #addModal: ModalDriver;\n\n      #addFlow: FlowDriver;\n\n      #removeModal: ModalDriver;\n\n      #removeFlow: FlowDriver;\n\n      #initAddModal() {\n        if (!this.passkeyUserAuthMethod.flowId) return;\n\n        this.#addModal = this.createModal({ 'data-id': 'add-passkey' });\n        this.#addFlow = new FlowDriver(\n          () => this.#addModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#addModal.afterClose = this.#initAddModalContent.bind(this);\n        this.#initAddModalContent();\n        this.syncFlowTheme(this.#addFlow);\n      }\n\n      #initAddModalContent() {\n        this.#addModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.passkeyUserAuthMethod.flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#addFlow.onSuccess(() => {\n          this.#addModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initRemoveModal() {\n        if (!this.passkeyUserAuthMethod.fulfilledFlowId) return;\n\n        this.#removeModal = this.createModal({ 'data-id': 'remove-passkey' });\n        this.#removeFlow = new FlowDriver(\n          () => this.#removeModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#removeModal.afterClose = this.#initRemoveModalContent.bind(this);\n        this.#initRemoveModalContent();\n        this.syncFlowTheme(this.#removeFlow);\n      }\n\n      #initRemoveModalContent() {\n        this.#removeModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.passkeyUserAuthMethod.fulfilledFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#removeFlow.onSuccess(() => {\n          this.#removeModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initPasskeyAuthMethod() {\n        this.passkeyUserAuthMethod = new UserAuthMethodDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-auth-method[data-id=\"passkey\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.passkeyUserAuthMethod.onUnfulfilledButtonClick(() => {\n          this.#addModal?.open();\n        });\n\n        this.passkeyUserAuthMethod.onFulfilledButtonClick(() => {\n          this.#removeModal?.open();\n        });\n      }\n\n      #onFulfilledUpdate = withMemCache(\n        (hasPasskey: ReturnType<typeof getHasPasskey>) => {\n          this.passkeyUserAuthMethod.fulfilled = hasPasskey;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initPasskeyAuthMethod();\n        this.#initAddModal();\n        this.#initRemoveModal();\n\n        this.#onFulfilledUpdate(getHasPasskey(this.state));\n\n        this.subscribe(this.#onFulfilledUpdate.bind(this), getHasPasskey);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAuthMethodDriver,\n} from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initPasswordUserAuthMethodMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class PasswordUserAuthMethodMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      passwordUserAuthMethod: UserAuthMethodDriver;\n\n      #modal: ModalDriver;\n\n      #flow: FlowDriver;\n\n      #initModal() {\n        if (!this.passwordUserAuthMethod.flowId) return;\n\n        this.#modal = this.createModal({ 'data-id': 'password' });\n        this.#flow = new FlowDriver(\n          () => this.#modal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#modal.afterClose = this.#initModalContent.bind(this);\n        this.#initModalContent();\n        this.syncFlowTheme(this.#flow);\n      }\n\n      #initModalContent() {\n        this.#modal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.passwordUserAuthMethod.flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#flow.onSuccess(() => {\n          this.#modal.close();\n        });\n      }\n\n      initPasswordAuthMethod() {\n        this.passwordUserAuthMethod = new UserAuthMethodDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-auth-method[data-id=\"password\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.passwordUserAuthMethod.onUnfulfilledButtonClick(() => {\n          this.#modal?.open();\n        });\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.initPasswordAuthMethod();\n        this.#initModal();\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  loggerMixin,\n  modalMixin,\n  cookieConfigMixin,\n} from '@descope/sdk-mixins';\nimport { getIsPhoneVerified, getPhone } from '../../../state/selectors';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initPhoneUserAttrMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class PhoneUserAttrMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      phoneUserAttr: UserAttributeDriver;\n\n      #editModal: ModalDriver;\n\n      #editFlow: FlowDriver;\n\n      #deleteModal: ModalDriver;\n\n      #deleteFlow: FlowDriver;\n\n      #initEditModal() {\n        if (!this.phoneUserAttr.editFlowId) return;\n\n        this.#editModal = this.createModal({ 'data-id': 'edit-phone' });\n        this.#editFlow = new FlowDriver(\n          () => this.#editModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#editModal.afterClose = this.#initEditModalContent.bind(this);\n        this.#initEditModalContent();\n        this.syncFlowTheme(this.#editFlow);\n      }\n\n      #initEditModalContent() {\n        this.#editModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.phoneUserAttr.editFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#editFlow.onSuccess(() => {\n          this.#editModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initDeleteModal() {\n        if (!this.phoneUserAttr.deleteFlowId) return;\n\n        this.#deleteModal = this.createModal({ 'data-id': 'delete-phone' });\n        this.#deleteFlow = new FlowDriver(\n          () => this.#deleteModal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#deleteModal.afterClose = this.#initDeleteModalContent.bind(this);\n        this.#initDeleteModalContent();\n        this.syncFlowTheme(this.#deleteFlow);\n      }\n\n      #initDeleteModalContent() {\n        this.#deleteModal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.phoneUserAttr.deleteFlowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlow.onSuccess(() => {\n          this.#deleteModal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initPhoneUserAttr() {\n        this.phoneUserAttr = new UserAttributeDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-attribute[data-id=\"phone\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.phoneUserAttr.onEditClick(() => {\n          this.#editModal?.open();\n        });\n\n        this.phoneUserAttr.onDeleteClick(() => {\n          this.#deleteModal?.open();\n        });\n      }\n\n      #onValueUpdate = withMemCache((phone: ReturnType<typeof getPhone>) => {\n        this.phoneUserAttr.value = phone;\n      });\n\n      #onValueBadgeLabelUpdate = withMemCache(\n        (isPhoneVerified: ReturnType<typeof getIsPhoneVerified>) => {\n          this.phoneUserAttr.badgeLabel = isPhoneVerified ? '' : 'Unverified';\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initPhoneUserAttr();\n        this.#initEditModal();\n        this.#initDeleteModal();\n\n        this.#onValueUpdate(getPhone(this.state));\n        this.#onValueBadgeLabelUpdate(getIsPhoneVerified(this.state));\n\n        this.subscribe(this.#onValueUpdate.bind(this), getPhone);\n\n        this.subscribe(\n          this.#onValueBadgeLabelUpdate.bind(this),\n          getIsPhoneVerified,\n        );\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAuthMethodDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { getHasTotp } from '../../../state/selectors';\nimport { createFlowTemplate } from '../../helpers';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initTotpUserAuthMethodMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class TotpUserAuthMethodMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      totpUserAuthMethod: UserAuthMethodDriver;\n\n      #modal: ModalDriver;\n\n      #flow: FlowDriver;\n\n      #initModal() {\n        if (!this.totpUserAuthMethod.flowId) return;\n\n        this.#modal = this.createModal({ 'data-id': 'totp' });\n        this.#flow = new FlowDriver(\n          () => this.#modal.ele?.querySelector('descope-wc'),\n          { logger: this.logger },\n        );\n        this.#modal.afterClose = this.#initModalContent.bind(this);\n        this.#initModalContent();\n        this.syncFlowTheme(this.#flow);\n      }\n\n      #initModalContent() {\n        this.#modal.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId: this.totpUserAuthMethod.flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#flow.onSuccess(() => {\n          this.#modal.close();\n          this.actions.getMe();\n        });\n      }\n\n      #initTotpAuthMethod() {\n        this.totpUserAuthMethod = new UserAuthMethodDriver(\n          () =>\n            this.shadowRoot?.querySelector(\n              'descope-user-auth-method[data-id=\"totp\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.totpUserAuthMethod.onUnfulfilledButtonClick(() => {\n          this.#modal?.open();\n        });\n      }\n\n      #onFulfilledUpdate = withMemCache(\n        (hasTotp: ReturnType<typeof getHasTotp>) => {\n          this.totpUserAuthMethod.fulfilled = hasTotp;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initTotpAuthMethod();\n        this.#initModal();\n\n        this.#onFulfilledUpdate(getHasTotp(this.state));\n\n        this.subscribe(this.#onFulfilledUpdate.bind(this), getHasTotp);\n      }\n    },\n);\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { getUserBuiltinAttrs } from '../../../state/selectors';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initUserBuiltinAttributesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class UserBuiltinAttributesMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      // flow Id is key in all maps\n      #editModals: Record<string, ModalDriver> = {};\n\n      #editFlows: Record<string, FlowDriver> = {};\n\n      #deleteModals: Record<string, ModalDriver> = {};\n\n      #deleteFlows: Record<string, FlowDriver> = {};\n\n      #initEditModalContent(flowId: string) {\n        this.#editModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#editFlows[flowId]?.onSuccess(() => {\n          this.#editModals[flowId]?.close();\n          this.actions.getMe();\n        });\n      }\n\n      // have 2 init functions for edit and delete modals in order to keep the same standards as the email/phone/name mixin\n      #initDeleteModalContent(flowId: string) {\n        this.#deleteModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlows[flowId]?.onSuccess(() => {\n          this.#deleteModals[flowId]?.close();\n          this.actions.getMe();\n        });\n      }\n\n      #updateBuiltinValueUserAttrs = withMemCache(\n        (userBuiltinAttributes: ReturnType<typeof getUserBuiltinAttrs>) => {\n          const allBuiltinAttributesComponents =\n            this.shadowRoot?.querySelectorAll(\n              'descope-user-attribute[data-id^=\"builtin.\"]',\n            );\n\n          Array.from(allBuiltinAttributesComponents).forEach((nodeEle) => {\n            const field = nodeEle\n              .getAttribute('data-id')\n              .replace('builtin.', '');\n            const val = userBuiltinAttributes[field];\n\n            const compInstance = new UserAttributeDriver(nodeEle, {\n              logger: this.logger,\n            });\n\n            compInstance.value = (val || '').toString();\n\n            this.#initEditFlow(nodeEle, field, compInstance);\n            this.#initDeleteFlow(nodeEle, field, compInstance);\n          });\n        },\n      );\n\n      #initEditFlow(\n        nodeEle: Element,\n        field: string,\n        compInstance: UserAttributeDriver,\n      ) {\n        const editFlowId = nodeEle.getAttribute('edit-flow-id');\n        if (editFlowId) {\n          this.#editModals[editFlowId] = this.createModal({\n            'data-id': `edit-${field}`,\n          });\n\n          this.#editFlows[editFlowId] = new FlowDriver(\n            () =>\n              this.#editModals[editFlowId]?.ele?.querySelector('descope-wc'),\n            { logger: this.logger },\n          );\n          this.#editModals[editFlowId].afterClose =\n            this.#initEditModalContent.bind(this, editFlowId);\n\n          compInstance.onEditClick(() => {\n            this.#editModals?.[editFlowId]?.open();\n          });\n\n          this.#initEditModalContent(editFlowId);\n          this.syncFlowTheme(this.#editFlows[editFlowId]);\n        }\n      }\n\n      #initDeleteFlow(\n        nodeEle: Element,\n        field: string,\n        compInstance: UserAttributeDriver,\n      ) {\n        const deleteFlowId = nodeEle.getAttribute('delete-flow-id');\n        if (deleteFlowId) {\n          this.#deleteModals[deleteFlowId] = this.createModal({\n            'data-id': `delete-${field}`,\n          });\n\n          this.#deleteFlows[deleteFlowId] = new FlowDriver(\n            () =>\n              this.#deleteModals[deleteFlowId]?.ele?.querySelector(\n                'descope-wc',\n              ),\n            { logger: this.logger },\n          );\n          this.#deleteModals[deleteFlowId].afterClose =\n            this.#initDeleteModalContent.bind(this, deleteFlowId);\n\n          compInstance.onDeleteClick(() => {\n            this.#deleteModals?.[deleteFlowId]?.open();\n          });\n\n          this.#initDeleteModalContent(deleteFlowId);\n          this.syncFlowTheme(this.#deleteFlows[deleteFlowId]);\n        }\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#updateBuiltinValueUserAttrs(getUserBuiltinAttrs(this.state));\n\n        this.subscribe(\n          this.#updateBuiltinValueUserAttrs.bind(this),\n          getUserBuiltinAttrs,\n        );\n      }\n    },\n);\n", "import createWebSdk from '@descope/web-js-sdk';\n\nexport type Sdk = ReturnType<typeof createWebSdk>;\n\ntype CustomAttributeType = string | boolean | number;\n\ntype CustomAttributes = Record<string, CustomAttributeType>;\n\ntype UserStatus = 'enabled' | 'disabled' | 'invited';\n\ntype Tenant = AssociatedTenant & {\n  tenantName: string;\n};\n\nexport type HttpClient = Sdk['httpClient'];\n\nexport type AssociatedTenant = {\n  tenantId: string;\n  roleNames: string[];\n};\n\nexport type User = {\n  loginIds: string[];\n  userId: string;\n  name: string;\n  email: string;\n  phone: string;\n  verifiedEmail: boolean;\n  verifiedPhone: boolean;\n  roleNames: string[];\n  userTenants: Tenant[];\n  status: UserStatus;\n  externalIds: string[];\n  picture: string;\n  test: boolean;\n  editable: boolean;\n  customAttributes: CustomAttributes;\n  createdTime: number;\n  TOTP: boolean;\n  SAML: boolean;\n  // OAuth: {},\n  webauthn: boolean;\n  password: boolean;\n  // ssoAppIds: [],\n  givenName: string;\n  middleName: string;\n  familyName: string;\n};\n\nexport type Role = {\n  name: string;\n  description: string;\n  permissionNames: string[];\n  createdTime: Date;\n  tenantId: string;\n};\n\nexport type SortParams = { field: string; desc: boolean };\n\nexport type SearchUsersConfig = {\n  page?: number;\n  limit?: number;\n  customAttributes?: CustomAttributes;\n  statuses?: UserStatus;\n  emails?: string[];\n  phones?: string[];\n  text?: string;\n  sort?: SortParams[];\n};\n\nexport type UpdateUserConfig = {\n  loginId?: string;\n  email?: string;\n  phone?: string;\n  displayName?: string;\n  roles?: string[];\n  customAttributes?: CustomAttributes;\n  picture?: string;\n  verifiedEmail?: boolean;\n  verifiedPhone?: boolean;\n  givenName?: string;\n  middleName?: string;\n  familyName?: string;\n  additionalLoginIds?: string[];\n  userTenants?: AssociatedTenant[];\n};\n\nexport type CreateUserConfig = {\n  inviteUrl?: string;\n  sendMail?: boolean; // send invite via mail, default is according to project settings\n  sendSMS?: boolean; // send invite via text message, default is according to project settings\n  invite?: boolean;\n} & UpdateUserConfig;\n\nexport type CustomAttr = {\n  name: string;\n  type: number;\n  options: string[];\n  displayName: string;\n  defaultValue: Record<string, string>;\n  ViewPermissions: string[];\n  EditPermissions: string[];\n  editable: boolean;\n};\n\nexport enum AttributeTypeName {\n  TEXT = 'text',\n  NUMBER = 'number',\n  BOOLEAN = 'boolean',\n  SINGLE_SELECT = 'singleSelect',\n  ARRAY = 'array',\n  DATE = 'date',\n}\n", "import {\n  FlowDriver,\n  ModalDriver,\n  UserAttributeDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  cookieConfigMixin,\n  loggerMixin,\n  modalMixin,\n} from '@descope/sdk-mixins';\nimport { AttributeTypeName } from '../../../api/types';\nimport { getUserCustomAttrs } from '../../../state/selectors';\nimport { createFlowTemplate } from '../../helpers';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { flowSyncThemeMixin } from '../../flowSyncThemeMixin';\n\nexport const initUserCustomAttributesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class UserCustomAttributesMixinClass extends compose(\n      flowSyncThemeMixin,\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      cookieConfigMixin,\n      modalMixin,\n    )(superclass) {\n      // flow Id is key in all maps\n      #editModals: Record<string, ModalDriver> = {};\n\n      #editFlows: Record<string, FlowDriver> = {};\n\n      #deleteModals: Record<string, ModalDriver> = {};\n\n      #deleteFlows: Record<string, FlowDriver> = {};\n\n      static getFormattedValue(type: string, val: any) {\n        if (type === AttributeTypeName.DATE && val) {\n          // to full date time\n          return new Date(val).toLocaleString();\n        }\n        if (type === AttributeTypeName.BOOLEAN && val !== undefined) {\n          return !val ? 'False' : 'True';\n        }\n        return (val || '').toString();\n      }\n\n      #initEditModalContent(flowId: string) {\n        this.#editModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#editFlows[flowId]?.onSuccess(() => {\n          this.#editModals[flowId]?.close();\n          this.actions.getMe();\n        });\n      }\n\n      // have 2 init functions for edit and delete modals in order to keep the same standards as the email/phone/name mixin\n      #initDeleteModalContent(flowId: string) {\n        this.#deleteModals[flowId]?.setContent(\n          createFlowTemplate({\n            projectId: this.projectId,\n            flowId,\n            baseUrl: this.baseUrl,\n            baseStaticUrl: this.baseStaticUrl,\n            baseCdnUrl: this.baseCdnUrl,\n            refreshCookieName: this.refreshCookieName,\n            theme: this.theme,\n          }),\n        );\n        this.#deleteFlows[flowId]?.onSuccess(() => {\n          this.#deleteModals[flowId]?.close();\n          this.actions.getMe();\n        });\n      }\n\n      #updateCustomValueUserAttrs = withMemCache(\n        (userCustomAttributes: ReturnType<typeof getUserCustomAttrs>) => {\n          const allCustomAttributesComponents =\n            this.shadowRoot?.querySelectorAll(\n              'descope-user-attribute[data-id^=\"customAttributes.\"]',\n            );\n\n          Array.from(allCustomAttributesComponents).forEach((nodeEle) => {\n            const attrName = nodeEle.getAttribute('data-id');\n            const customAttrName = attrName.replace('customAttributes.', '');\n            const type =\n              nodeEle.getAttribute('data-type') || AttributeTypeName.TEXT;\n            const val = userCustomAttributes[customAttrName];\n\n            const compInstance = new UserAttributeDriver(nodeEle, {\n              logger: this.logger,\n            });\n\n            compInstance.value =\n              UserCustomAttributesMixinClass.getFormattedValue(type, val);\n\n            this.#initEditFlow(nodeEle, customAttrName, compInstance);\n            this.#initDeleteFlow(nodeEle, customAttrName, compInstance);\n          });\n        },\n      );\n\n      #initEditFlow(\n        nodeEle: Element,\n        customAttrName: string,\n        compInstance: UserAttributeDriver,\n      ) {\n        const editFlowId = nodeEle.getAttribute('edit-flow-id');\n        if (editFlowId) {\n          this.#editModals[editFlowId] = this.createModal({\n            'data-id': `edit-${customAttrName}`,\n          });\n\n          this.#editFlows[editFlowId] = new FlowDriver(\n            () =>\n              this.#editModals[editFlowId]?.ele?.querySelector('descope-wc'),\n            { logger: this.logger },\n          );\n          this.#editModals[editFlowId].afterClose =\n            this.#initEditModalContent.bind(this, editFlowId);\n\n          compInstance.onEditClick(() => {\n            this.#editModals?.[editFlowId]?.open();\n          });\n\n          this.#initEditModalContent(editFlowId);\n          this.syncFlowTheme(this.#editFlows[editFlowId]);\n        }\n      }\n\n      #initDeleteFlow(\n        nodeEle: Element,\n        customAttrName: string,\n        compInstance: UserAttributeDriver,\n      ) {\n        const deleteFlowId = nodeEle.getAttribute('delete-flow-id');\n        if (deleteFlowId) {\n          this.#deleteModals[deleteFlowId] = this.createModal({\n            'data-id': `delete-${customAttrName}`,\n          });\n\n          this.#deleteFlows[deleteFlowId] = new FlowDriver(\n            () =>\n              this.#deleteModals[deleteFlowId]?.ele?.querySelector(\n                'descope-wc',\n              ),\n            { logger: this.logger },\n          );\n          this.#deleteModals[deleteFlowId].afterClose =\n            this.#initDeleteModalContent.bind(this, deleteFlowId);\n\n          compInstance.onDeleteClick(() => {\n            this.#deleteModals?.[deleteFlowId]?.open();\n          });\n\n          this.#initDeleteModalContent(deleteFlowId);\n          this.syncFlowTheme(this.#deleteFlows[deleteFlowId]);\n        }\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#updateCustomValueUserAttrs(getUserCustomAttrs(this.state));\n\n        this.subscribe(\n          this.#updateCustomValueUserAttrs.bind(this),\n          getUserCustomAttrs,\n        );\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { flowRedirectUrlMixin } from '../flowRedirectUrlMixin';\nimport { initAvatarMixin } from './initComponentsMixins/initAvatarMixin';\nimport { initEmailUserAttrMixin } from './initComponentsMixins/initEmailUserAttrMixin';\nimport { initLogoutMixin } from './initComponentsMixins/initLogoutMixin';\nimport { initNameUserAttrMixin } from './initComponentsMixins/initNameUserAttrMixin';\nimport { initPasskeyUserAuthMethodMixin } from './initComponentsMixins/initPasskeyUserAuthMethodMixin';\nimport { initPasswordUserAuthMethodMixin } from './initComponentsMixins/initPasswordUserAuthMethodMixin';\nimport { initPhoneUserAttrMixin } from './initComponentsMixins/initPhoneUserAttrMixin';\nimport { initTotpUserAuthMethodMixin } from './initComponentsMixins/initTotpUserAuthMethodMixin';\nimport { initUserBuiltinAttributesMixin } from './initComponentsMixins/initUserBuiltinAttributesMixin';\nimport { initUserCustomAttributesMixin } from './initComponentsMixins/initUserCustomAttributesMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    /* @ts-ignore */\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      flowRedirectUrlMixin, // This mixin must be before all other mixins that loads flows\n      initUserCustomAttributesMixin,\n      initEmailUserAttrMixin,\n      initAvatarMixin,\n      initNameUserAttrMixin,\n      initPhoneUserAttrMixin,\n      initPasskeyUserAuthMethodMixin,\n      initPasswordUserAuthMethodMixin,\n      initTotpUserAuthMethodMixin,\n      initUserBuiltinAttributesMixin,\n      initLogoutMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n", "import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\ndeclare const BUILD_VERSION: string;\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {\n    async init() {\n      await super.init?.();\n\n      const WebComponent: any =\n        customElements.get('descope-wc') ||\n        (await import('@descope/web-component').then(\n          (module) => module.default,\n        ));\n\n      WebComponent.sdkConfigOverrides = {\n        baseHeaders: {\n          'x-descope-widget-type': 'user-profile-widget',\n          'x-descope-widget-id': this.getAttribute('widget-id'),\n          'x-descope-widget-version': BUILD_VERSION,\n        },\n      };\n    }\n  };\n\nexport const UserProfileWidget = compose(rootMixin)(HTMLElement);\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { UserProfileWidget } from './widget';\nimport '@descope/web-component';\n\ndeclare global {\n  interface HTMLElement {\n    attributeChangedCallback(\n      attrName: string,\n      oldValue: string | null,\n      newValue: string | null,\n    ): void;\n    connectedCallback(): void;\n  }\n}\n\nexport default UserProfileWidget;\n\ncustomElements.define('descope-user-profile-widget', UserProfileWidget);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,IAAMA,IAAqB,CAChCC,IAAyB,CAAA,MAEzB;AAAA,QAAMC,IAAWC,EAAe,2BAAA;AAQhC,SANAC,OAAOC,QAAQJ,CAAYK,EAAAA,QAAQ,CAAEC,CAAAA,IAAKC,CAAAA,MAAAA;AACxCN,MAASO,QACNC,cAAc,YAAA,EACdC,aAAaC,EAAUL,EAAAA,GAAMC,CAAM;EAAA,CAAA,GAGjCN;AAAQ;AAGX,SAAUW,EAAYC,GAAAA;AAG1B,SAFkB,IAAIC,gBAAgBC,OAAOC,SAASC,MAAAA,EAErCC,IAAIL,CACvB;AAAA;ACkBO,IAAMM,IAC2BC,OACtC,IAAIC,MACHC,OACCA;AAAAA,IAAQC,QAAQH,EAAOI,SAAS,CAACC,IAAOL,OAAAA;AACtCC,MAAKhB,QAAQ,CAAGqB,EAAAA,WAAAA,GAAAA,MAAAA;AACdA,cAAAA,MAAAA,GAAYD,IAAOL,EAAO;IAAA,CAAA;EAC1B,CAAA,GAGJE,EAAQC,QAAQH,EAAOO,WAAW,CAACF,IAAOL,OAAAA;AACxCC,MAAKhB,QAAQ,CAAA,EAAGuB,aACdA,GAAAA,MAAAA;AAAAA,cAAAA,MAAAA,GAAcH,IAAOL,EAAAA;IAAO,CAAA;EAC5B,CAGJE,GAAAA,EAAQC,QAAQH,EAAOS,UAAU,CAACJ,IAAOL,OACvCC;AAAAA,MAAKhB,QAAQ,CAAGyB,EAAAA,YAAAA,GAAAA,MAAAA;AACdA,cAAAA,MAAAA,GAAaL,IAAOL,EAAO;IAAA,CAAA;EAC3B,CACF;AAAA;AApBC,ICzCDA,IAASW,iBAIb,YAAY,CAACC,GAAAA,EAAOC,OAAAA,EAASC,KAAYA,EAAAA,EAAAA,MAAAA,EAAIC,KAAKC,GAAAA,CAAAA;ADqC7C,ICnCDC,IAAUlB,EAAkBC,CAAAA,EAChC,EACEQ,aAAa,CAACH,GAAOL,MAAAA;AACnBK,IAAMW,GAAGE,OAAOlB,EAAOmB;AAAO,EDwDlCC,IAAAA,ICrDmBf,OAAiBA,EAAMW,IDsDb,EAC7BR,aAAcH,OAAAA;AACZe,IAAgBf,CAAAA,EAAOgB,UAAU;AAAK,GAExCf,WAAYD,OAAAA;AACVe,IAAgBf,CAAAA,EAAOgB,UAAAA,MACvBD,EAAgBf,CAAOiB,EAAAA,QAAQ;AAAI,GAErCZ,YAAY,CAACL,GAAOL,MAAAA;AAClBoB,IAAgBf,CAAAA,EAAOgB,UAAU,OACjCD,EAAgBf,CAAOiB,EAAAA,QAAQtB,EAAOsB;AAAK,EAAA,EAAA;AAZd,IAC/BF;AClDK,IAAMG,IAAQ,EAAAvB,QAAEA,GAAMiB,SAAEA,ECfzBjB;ADeC,ICfDA,IAASW,iBAIb,gBAAgB,CAACC,GAAOC,EAAAA,OAAAA,EAASC,KAAAA,EAAAA,EAAAA,MAAYA,EAAIC,KAAKS,OAI3CA,CAAAA;ADON,ICPMA,IAAS,EAAExB,QAAQiB,GAAAA,SAFhBlB,EAAkBC,CAAAA,EAAQ,CAAE,CAAA,EAAA;ADSrC,IEpBMyB,IAAsB,EACjCT,IAAI,EACFK,SAAAA,OACAC,OAAO,MACPJ,MAAM,CAAE,EAAA,EAAA;AFgBL,IGtBMQ,IACL,EACJV,IAAI,cC6BFD;AJTC,IISDA,IA7B0B,MAAWY,UAAAA,QAAA,QAAA,QAAA,aACzC;AAAA,SAAA,IAAIC,QAASC,OAAAA;AACXA,MAAQ,EACNC,UAAU,CAAC,kBAAA,GACXC,aAAa,CAAC,kBAAA,GACdC,QAAQ,UACRC,MAAM,aACNC,OAAO,oBACPC,WAAW,CAAC,MAAA,GACZC,OAAO,kBACPC,eAAAA,MACAC,eAAAA,MACAC,aAAa,CAAA,GACbC,QAAQ,WACRC,UAAAA,MACAC,cAAa,oBAAIC,QAAOC,QAAAA,GACxBC,kBAAkB,CAAE,GACpBC,YAAY,IACZC,WAAW,IACXC,YAAY,IACZC,SAAAA,QACAC,UAAU,MACVC,MAAM,OACNC,MAAAA,OACAC,MAAAA,OACAC,UAAAA,KAAU,CAAA;EACV,CAAA;AAAA,CAAA;AJNC,IKjBMC,IAAgB,CAAA,EAC3BC,YAAAA,GACAC,MAgBO,EAAA,OAAA,EACLzC,IAZS,MAAWW,UAAAA,QAAA,QAAA,QAAA,aACpB;AAAA,MAAI8B,EACF,QAAO1C,EAAAA;AAET,QAAM2C,IAAAA,MAAYF,EAAW1D,IAAI4B,EAAcV,EAI/C;AAAA,SAAA,OCpBmC0C,CAAAA,OAAiB/B,UAAAA,QAAA,QAAA,QAAA,aACtD;AAAA,UAAMgC,IAAaD,MAAAA,GAAIC,KAAAA,GACjBC,KAAOC,KAAKC,MAAMH,CAAAA;AAExB,QAAA,CAAKD,GAAIK,IAAI;AACX,YAAMC,KAAkB,GAAGJ,GAAKK,gBAC9BL,GAAAA,GAAKM,eAAe,KAAKN,GAAKM,YAAAA,KAAiB,EAEjD;AAAA,YAAMC,MAAMH,MAAmB,GAAGN,GAAIlB,MAAAA,IAAUkB,GAAIU,UACrD,EAAA;IAAA;AAEDV,IAAAA,GAAIE,OAAO,MAAMhC,QAAQC,QAAQ+B,EACjCF,GAAAA,GAAIC,OAAO,MAAM/B,QAAQC,QAAQ8B,CAAAA;EACnC,CAAA,GDK2BD,CAAAA,GAEhBA,EAAIE,KAAAA;AACb,CAAA,EAAA;ALCK,IOZMS,IAAWC,EACeC,OAAAA;AAAAA,MAAAA,IAAAA,IAAAA,IAAAA;AACnC,QAAMC,IAAYC,EAChBC,gBACAC,wBACAC,aACAC,cACAC,iBAAAA,EACAP,CAAAA;AAEF,SAAOQ,IAAA,cAA4BP,EAA5B;IAAA,cAAAQ;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IACLC,GAAAA,GAAUC,IAAAC,MAAA,MAAA;IAwCX;IAzBC,IAAA,WAAIC;AACF,aAAOD,KAAKE,aAAa,WAAA;IAC1B;IAED,IAAI5B,OAAAA;AACF,aAAO0B,KAAKE,aAAa,MAC1B;IAAA;IAED,IAAIvE,MAAAA;AAKF,aAJKwE,uBAAAH,MAAIF,IAAA,GACPK,KAAAA,uBAAAH,MAAII,IAAA,KAAAC,EAAJC,EAAAA,KAAAN,IAAAA,GAGKG,uBAAAH,MAAIF,IAAA,GAAA;IACZ;IAEK,OAAAS;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,MAAAA,EAAAA,KAAAA,MAAAA,MAAAA,KAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACY,UAAVC,IAAAC,EAAMF,SAAI,WAAAC,IAAAA,SAAAA,EAAAF,KAAAN,IAEhBA,GAAAA,KAAKU,kBAAkB,CAAC,cAAc,UAAa,GAAA,MAAA;AAC7CP,iCAAAH,MAASF,IAAA,GACXK,KAAAA,uBAAAH,MAAII,IAAA,KAAAC,EAAJC,EAAAA,KAAAN,IACD;QAAA,CAAA;MAAA,CAAA;IAEJ;EAAA,GAAAW,KAAA,oBAAA,WAAAC,KAAA,oBAAA,WAAAC,KAAA,WAAA;AApCCb,SAAKc,OAAOC,MAAM,0BAClBC,GAAAA,uBAAAhB,MAAYF,KCnBK,CACvBmB,GACA3C,GACA2B,OAAAA;AAEA,YAAMiB,KAASC,GACVvH,OAAAwH,OAAAxH,OAAAwH,OAAA,CAAA,GAAAH,CAAAA,GACH,EAAAI,eAAe,MACfC,aAAa,EACX,yBAAyB,uBACzB,uBAAuBrB,IACvB,4BAA4B,SAAA,EAAA,CAAA,CAAA;AAIhC,aAAO,EACLrE,MAAAA,OAAAA,OAAAA,OAAAA,OAAAA,CAAAA,GACKwC,EAAc,EAAEC,YAAY6C,GAAO7C,YAAYC,MAAAA,EAAAA,CAAAA,CAAAA,GAAAA,EAClDjC,QAASiC,IAAAA,MAAAA,UAAAA,QAAAA,QAAAA,QAAAA,aAAAA;MAAAA,CAAAA,IACL4C,GAAO7E,OAGd,CAAA,EAAA;IAAA,GDFO,EACEkF,WAAWvB,KAAKuB,WAChBC,SAASxB,KAAKwB,SACdC,mBAAmBzB,KAAKyB,kBAEZ,GAAA,WAAdzB,KAAK1B,MACL0B,KAAKC,QACN,GAAA,GAAA;EACF,GA2BDL;AAAA,CAAA;APvCC,ISXM8B,IAAuBvC,EACGC,OAAAA;AACnC,QAAMC,IAAYC,EAChBqC,2BAA2B,EACzB7E,MAAM,UACNR,cAAAA,GACAsF,UAAU,CAAE,GACZC,eAAgB9G,CAAAA,OAAAA;AACdqB,MAAMN,QAAQf,EAAAA,GACdsB,EAAOP,QAAQf,EAAQ;EAAA,GAEzB+G,cAAc,EACZ1F,OAAOA,EAAMvB,QACbwB,QAAQA,EAAOxB,OAAAA,EAAAA,CAAAA,GAGnBkH,oBACAtC,aACAP,CAAAA,EACAE,CAAAA;AACF,SAAO,cAAwCC,EAAAA;IAG7C,eAAevE,IACbkH;AAAAA,YAAAA,GAASlH,EAAAA,GAHXkF,KAAK9E,QAAGoB,GAKN0D,KAAKiC,UAAW/G,CAAAA,OACd8E;AAAAA,aAAKc,OAAOC,MAAM,iBAAiB7F,EAAAA,GACnC8E,KAAK9E,QAAQA;MAAK,CAAA;IAErB;EAAA;AACF,CC9BCgH;AVUC,IUVDA,IAAiC;AVUhC,IURMC,IAAuBhD,EACGC,OACnC;AAAA,MAAAgD,GAAAC,IAAAzC;AAAA,SAAAA,KAAA,cAAwCN,EACtCyC,oBACAO,YACAZ,GACA/B,mBACAF,aACA8C,UAAAA,EACAnD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,EAAAA,IAAAA,IAAAA;IAiDC;IAzCO,OAAAU;AAAAA,YAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,MAAAA,EAAAA,KAAAA,MAAAA,MAAAA,KAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACY,UAAVC,IAAAC,GAAMF,SAAI,WAAAC,IAAA,SAAAA,EAAAF,KAAAN,IAAAA;AAEhB,cAAMwC,KAAanI,EAAY6H,CAE3BM;AAAAA,QAAAA,OAAAA,CZGN,SAAwBlI,IAAAA;AAC5B,cAAIE,OAAOiI,QAAQC,gBAAgBrI,EAAYC,EAAAA,GAAY;AACzD,kBAAMqI,IAAS,IAAIC,IAAIpI,OAAOC,SAASoI,IAAAA,GACjCnI,KAAS,IAAIH,gBAAgBoI,EAAOjI,MAAAA;AAC1CA,YAAAA,GAAOoI,OAAOxI,EAAAA,GACdqI,EAAOjI,SAASA,GAAOqI,SAAAA,GACvBvI,OAAOiI,QAAQC,aAAa,CAAA,GAAI,IAAIC,EAAOI,SAAAA,CAAAA;UAC5C;QACH,EYVwBb,CACd/B,GAAAA,uBAAAH,MAA6BoC,GAAA,KAAAC,EAAA/B,EAAAA,KAA7BN,MAA8BwC,EAAAA;MAAAA,CAAAA;IAEjC;EAAA,GAAA,IAAA,oBAAA,WAAA5B,KAAA,SAEwB4B,GACvB;AAAA,UAAMQ,IAAQhD,KAAKiD,YAAY,EAAE,WAAW,gBAC5CD,CAAAA;AAAAA,MAAME,WACJ1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQX,GACRhB,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA;AAIH,QAAIC,EACf,MAAA;AAAK,UAAA/C;AAAC,aAAS,UAATA,KAAAwC,EAAMQ,QAAG,WAAAhD,KAAA,SAAAA,GAAEtG,cAAc,YAAA;IAAa,GAC5C,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,EAGZ2C,UAAU,MAAA;AACbT,QAAMU,MACN1D,GAAAA,KAAK2D,QAAQvH,MAAAA;IAAO,CAAA,GAGtB4G,EAAMY,aAAa,MACjBZ;AAAAA,QAAMa,OAAAA;IAAQ,GAGhBb,EAAMc,KACP;EAAA,GACFlE;AAAA,CC9DQxD;AXmBN,IWnBMA,IAASlB,OAAiBA,EAAMW,GAAGE;AXmBzC,IWjBMgI,IAAaC,eAAe5H,GAAQP,OAAOA,EAAGiC,OAC9CmG;AXgBN,IWhBMA,IAAWD,eAAe5H,GAAQP,OAAOA,EAAGkB,KAAAA;AXgBlD,IWfMmH,IAAqBF,eAChC5H,GACCP,OAAOA,EAAGqB,aAEAiH;AXWN,IWXMA,IAAUH,eAAe5H,GAAQP,OAAOA,EAAGiB,IAAAA;AXWjD,IWVMsH,IAAWJ,eAAe5H,GAAQP,OAAOA,EAAGoB,KAAAA;AXUlD,IWTMoH,IAAqBL,eAChC5H,GACCP,OAAOA,EAAGsB,aAEAmH;AXKN,IWLMA,KAAgBN,eAAe5H,GAAQP,OAAOA,EAAGsC,QAChC6F;AAAAA,eAAe5H,GAAQP,OAAOA,EAAGkC,QACxD;AAAA,IAAMwG,KAAaP,eAAe5H,GAAQP,OAAOA,EAAGqC,IAE9CsG;AAFN,IAEMA,KAAqBR,eAChC5H,GACCP,OAAOA,EAAG6B,gBAAAA;AAJN,IAOM+G,KAAsBT,eAAe5H,GAAQP,QAAQ,EAChE+B,WAAW/B,EAAG+B,WACdC,YAAYhC,EAAGgC,YACfF,YAAY9B,EAAG8B,WCrBJ+G,EAAAA;ADWN,ICXMA,KAAwBvF,EACEC,OACnC;AAAA,QAAMC,IAAYC,EAChBqF,sBACAC,8BAA8B,EAC5B,aAAaA,8BAA8BC,qBAAAA,CAAAA,CAAAA,EAE7CzF,CACF;AAAA,SAAO,cAAyCC,EAAAA;IAC9C,IAAA,WACE;AAAA,aAAOW,KAAKE,aAAa,WAAA;IAC1B;IAEK,gBAAgB4E,IAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAKpB,gBAJkB9E,MAAAA,KAAK+E,oBACrB,uBAA4B/E,KAAKC,QAAY6E,IAAAA,EAAAA,IAC7C,MAESE,GAAAA;MAAAA,CAAAA;IACZ;EACF;AAAA,CAAA;ADTE,IELMC,KAAsB9F,EACIC,OAAAA;AACnC,MAAA8F,IAAAC,IAAAvF;AAAA,SAAAA,KAAA,cAAuCN,EACrCG,aACAsC,oBACAqD,gBACAC,kBACAX,IACAhD,CANqCpC,EAOrCF,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA;IA2BC;IATO,oBAAAyF;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;MAAAA,CAAAA;IAAsB;IAEtB,OAAA/E;AAAAA,YAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,MAAAA,EAAAA,KAAAA,MAAAA,MAAAA,KAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACY,UAAVC,IAAAC,GAAMF,SAAI,WAAAC,IAAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAAAA,MAEVvD,QAAQ8I,IAAI,CAACvF,KAAK2D,QAAQvH,MAAAA,GAAS+D,uBAAAH,MAAoBkF,IAAA,KAAAC,EAAAA,EAAA7E,KAApBN,IAAAA,CAAAA,CAAAA,GAEzCA,KAAKsF,kBAAAA;MAAAA,CAAAA;IACN;EAAA,GAAA1E,KAAA,oBAAA,WAAAD,KAAA,WAAA;AAAA,WAAA,UAAA,MAAA,QAAA,QAAA,aAjBC;AAAA,YAAMjH,IAAWC,EAAAA,MAETqG,KAAKwF,gBAAgB,WAAA,CAAA;AAAA,YAEvBxF,KAAKyF,wBAAwB/L,CAAAA,GACnCsG,KAAK0F,mBAAmBC,OAAOjM,EAASO,QAAQ2L,UAAU,IAAA,CAAA;IAAA,CAAA;EAAA,GAa7DhG;AAAA,CCvCQiG;AHeN,IGfMA,KAAqB1G,EACKC,OACnC,cAAsCE,EACpCiD,YACA/C,sBAAAA,EACAJ,CAAAA,EAAAA;EACA,cAAc0G,IAAAA;AAEZA,IAAAA,GAAWxC,QAAQtD,KAAKsD,OACxBtD,KAAKU,kBAAkB,CAAC,OAAA,GAAU,MAEhCoF;AAAAA,MAAAA,GAAWxC,QAAQtD,KAAKsD;IAAK,CAEhC;EAAA;AAAA,CAAA;AHEA,IIGMyC,KAAkB5G,EACQC,OAAAA;AAAiB,MAAA4G,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAA3G;AAAA,SAAAA,KACpD,cAA+BN,EAC7BuG,IACAtD,YACAb,GACAjC,aACAE,mBACAsF,IACA3C,UAAAA,EACAlD,CAAAA,EAAAA;IARF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAWEoG,GAAoBlG,IAAAC,MAAAA,MAEpBkG,GAAAA,EAAkBnG,IAAAC,MAAA,MAAA,GA4ClBsG,EAAAvG,IAAAC,MAAmBwG,EAChB1I,OAAAA;AACCkC,aAAKyG,OAAOC,QAAQ5I;MAAO,CAAA,CAAA,GAI/ByI,EAAAxG,IAAAC,MAAgBwG,EAAc1J,OAAAA;AAC5BkD,aAAKyG,OAAOE,cAAc7J;MAAI,CAAA,CAAA;IAgBjC;IAbO,oBAAAwI;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACyB,UAAvB9E,IAAAC,EAAM6E,sBAAiB,WAAA9E,IAAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAE7BG,uBAAAH,MAAIgG,IAAA,KAAAK,CAAAA,EAAJ/F,KAAAN,IACAG,GAAAA,uBAAAH,MAAIgG,IAAA,KAAAG,EAAAA,EAAJ7F,KAAAN,IAAAA,GAEAG,uBAAAH,MAAIsG,GAAA,GAAJhG,EAAAA,KAAAN,MAAsB+D,EAAW/D,KAAK9E,KACtCiF,CAAAA,GAAAA,uBAAAH,MAAIuG,GAAA,GAAA,EAAJjG,KAAAN,MAAmBmE,EAAQnE,KAAK9E,KAAAA,CAAAA,GAEhC8E,KAAKiC,UAAU9B,uBAAAH,MAAqBsG,GAAA,GAACM,EAAAA,KAAK5G,IAAO+D,GAAAA,CAAAA,GAEjD/D,KAAKiC,UAAU9B,uBAAAH,MAAkBuG,GAAA,GAAA,EAACK,KAAK5G,IAAAA,GAAOmE,CAAAA;MAAAA,CAC/C;IAAA;EAAA,GAAAxD,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAC,KAAA,oBAAA,WAAAiG,KAAA,WA/DM7G;AAAAA,SAAKyG,OAAOtD,WAEjBnC,uBAAAhB,MAAIiG,IAAUjG,KAAKiD,YAAY,EAAE,WAAW,aAAA,CAAA,GAAA,GAC5CjC,GAAAA,uBAAAhB,MAAIkG,GAAS,IAAI3C,EACf,MAAA;AAAM,UAAA/C;AAAA,aAAe,UAAfA,IAAAL,uBAAAH,MAAIiG,IAAA,GAAA,EAAQzC,QAAG,WAAAhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAA;IAAa,GAClD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIiG,IAAA,GAAA,EAAQrC,aAAazD,uBAAAH,MAAIgG,IAAA,KAAAI,EAAAA,EAAmBQ,KAAK5G,IAAAA,GACrDG,uBAAAH,MAAIgG,IAAA,KAAAI,EAAAA,EAAJ9F,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIkG,GAAA,GAAA,CAAA;EACxB,GAAAa,KAAA,WAGC5G;AAAAA,2BAAAH,MAAWiG,IAAA,GAAA,EAAC/C,WACV1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKyG,OAAOtD,QACpB3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAUkG,GAAA,GAACzC,EAAAA,UAAU,MAAA;AACnBtD,6BAAAH,MAAIiG,IAAA,GAAQvC,EAAAA,MAAAA,GACZ1D,KAAK2D,QAAQvH,MAAAA;IAAO,CAEvB;EAAA,GAAA,IAAA,WAAA;AAGC4D,SAAKyG,SAAS,IAAIO,GAChB,MAAA;AAAM,UAAAxG;AAAA,aAAe,UAAfA,IAAAR,KAAKiH,eAAU,WAAAzG,IAAA,SAAAA,EAAEtG,cAAc,gBAAA;IAAiB,GACtD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAKyG,OAAOS,QAAQ,MAAA;AAAA,UAAA;AACL,gBAAb1G,IAAAL,uBAAAH,MAAIiG,IAAA,GAAS,MAAA,WAAAzF,KAAAA,EAAAsD,KAAAA;IAAM,CAEtB;EAAA,GAyBFlE;AAAA,CCnFQuH;ALFN,IKEMA,KAAyBhI,EACCC,OAAAA;AACnC,MAAAgI,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,GAAAC,GAAAnI;AAAA,SAAAA,IAAA,cAAsCN,EACpCuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAAAA,EACAlD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAUEwH,GAAAA,GAAwBtH,IAAAC,MAAAA,MAAA,GAExBsH,EAAsBvH,IAAAC,MAAA,MAAA,GAEtBuH,GAA0BxH,IAAAC,MAAAA,MAE1BwH,GAAAA,GAAwBzH,IAAAC,MAAA,MAAA,GAkFxB8H,EAAA/H,IAAAC,MAAiBwG,EAAczJ,OAAAA;AAC7BiD,aAAKgI,cAAchO,QAAQ+C;MAAK,CAAA,CAAA,GAGlCgL,EAAAhI,IAAAC,MAA2BwG,EACxByB,OAAAA;AACCjI,aAAKgI,cAAcE,aAAaD,IAAkB,KAAK;MAAY,CAqBxE,CAAA;IAAA;IAjBO,oBAAA3C;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AACyB,cAAA,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAE7BG,GAAAA,uBAAAH,MAAIoH,IAAA,KAAAS,EAAAA,EAAJvH,KAAAN,IAAAA,GACAG,uBAAAH,MAAIoH,IAAA,KAAAK,CAAAA,EAAJnH,KAAAN,IAAAA,GACAG,uBAAAH,MAAIoH,IAAA,KAAAO,CAAAA,EAAJrH,KAAAN,IAEAG,GAAAA,uBAAAH,MAAI8H,GAAA,GAAA,EAAJxH,KAAAN,MAAoBiE,EAASjE,KAAK9E,KAAAA,CAAAA,GAClCiF,uBAAAH,MAAI+H,GAAA,GAAA,EAAJzH,KAAAN,MAA8BkE,EAAmBlE,KAAK9E,KAAAA,CAAAA,GAEtD8E,KAAKiC,UAAU9B,uBAAAH,MAAmB8H,GAAA,GAAA,EAAClB,KAAK5G,IAAOiE,GAAAA,CAAAA,GAE/CjE,KAAKiC,UACH9B,uBAAAH,MAA6B+H,GAAA,GAACnB,EAAAA,KAAK5G,IAAAA,GACnCkE,CAAAA;MAAAA,CAAAA;IAEH;EAAA,GAAAvD,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAnG,KAAA,oBAAA,WAAA,IAAA,WAzGMZ;AAAAA,SAAKgI,cAAcG,eAExBnH,uBAAAhB,MAAIqH,IAAcrH,KAAKiD,YAAY,EAAE,WAAW,aAAA,CAAA,GAAA,GAAA,GAChDjC,uBAAAhB,MAAIsH,GAAa,IAAI/D,EACnB,MAAM;AAAA,UAAA/C;AAAA,aAAmB,UAAnBA,IAAAL,uBAAAH,MAAIqH,IAAA,GAAA,EAAY7D,QAAG,WAAAhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAA;IAAa,GACtD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIqH,IAAA,GAAYzD,EAAAA,aAAazD,uBAAAH,MAAIoH,IAAA,KAAAM,CAAAA,EAAuBd,KAAK5G,IAC7DG,GAAAA,uBAAAH,MAAIoH,IAAA,KAAAM,CAAJpH,EAAAA,KAAAN,IACAA,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAIsH,GAAA,GAAA,CAAA;EACxB,GAAA,IAAA,WAAA;AAGCnH,2BAAAH,MAAeqH,IAAA,GAACnE,EAAAA,WACd1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKgI,cAAcG,YAC3B3G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAcsH,GAAA,GAAA,EAAC7D,UAAU,MACvBtD;AAAAA,6BAAAH,MAAIqH,IAAA,GAAA,EAAY3D,MAChB1D,GAAAA,KAAK2D,QAAQvH,MAAAA;IAAO,CAAA;EAEvB,GAAA,IAAA,WAGM4D;AAAAA,SAAKgI,cAAcI,iBAExBpH,uBAAAhB,MAAIuH,IAAgBvH,KAAKiD,YAAY,EAAE,WAAW,eAAA,CAAA,GAAA,GAAA,GAClDjC,uBAAAhB,MAAIwH,IAAe,IAAIjE,EACrB,MAAA;AAAM,UAAA/C;AAAA,aAAqB,UAArBA,IAAAL,uBAAAH,MAAIuH,IAAA,GAAA,EAAc/D,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACxD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIuH,IAAA,GAAc3D,EAAAA,aAAazD,uBAAAH,MAAIoH,IAAA,KAAAQ,CAAAA,EAAyBhB,KAAK5G,IACjEG,GAAAA,uBAAAH,MAAIoH,IAAA,KAAAQ,CAAJtH,EAAAA,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIwH,IAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAAA;AAGCrH,2BAAAH,MAAiBuH,IAAA,GAACrE,EAAAA,WAChB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKgI,cAAcI,cAC3B5G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAgBwH,IAAA,GAAC/D,EAAAA,UAAU,MACzBtD;AAAAA,6BAAAH,MAAIuH,IAAA,GAAA,EAAc7D,MAClB1D,GAAAA,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAAiM,KAAA,WAAA;AAGCrI,SAAKgI,gBAAgB,IAAIM,EACvB,MAAA;AAAA,UAAA;AACE,aAAA,UAAA9H,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,yCAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAKgI,cAAcO,YAAY,MAAA;AAAA,UAAA;AACZ,gBAAjB/H,IAAAL,uBAAAH,MAAIqH,IAAA,GAAA,MAAA,WAAa7G,KAAAA,EAAAsD,KAAM;IAAA,CAAA,GAGzB9D,KAAKgI,cAAcQ,cAAc,MAAA;AAAA,UAAA;AACZ,gBAAnBhI,IAAAL,uBAAAH,MAAIuH,IAAA,GAAe,MAAA,WAAA/G,KAAAA,EAAAsD,KAAAA;IAAM,CAE5B;EAAA,GA6BFlE;AAAA,CC9IQ6I;ANaN,IMbMA,KAAkBtJ,EACQC,OAAiB;AAAA,MAAAsJ,GAAAC,IAAA/I;AAAA,SAAAA,KACpD,cAA+BN,EAC7BoC,GACAjC,aACAwF,IACA3C,UAJ6BhD,EAK7BF,CAAAA,EAAAA;IALF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,EAAAA,IAAAA,IAAAA;IA0BC;IALO,oBAAAyF;AAAAA,YAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACyB,UAAvB9E,IAAAC,GAAM6E,sBAAiB,WAAA9E,IAAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAE7BG,uBAAAH,MAAI0I,GAAA,KAAAC,EAAAA,EAAJrI,KAAAN,IAAAA;MAAAA,CAAAA;IACD;EAAA,GAAA,IAAA,oBAAA,WAAAY,KAAA,WAhBCZ;AAAAA,SAAK3D,SAAS,IAAIuM,EAChB,MACE;AAAA,UAAApI;AAAA,aAAe,UAAfA,IAAAR,KAAKiH,eAAAA,WAAUzG,IAAAA,SAAAA,EAAEtG,cAAc,kCAAmC;IAAA,GACpE,EAAE4G,QAAQd,KAAKc,OAGjBd,CAAAA,GAAAA,KAAK3D,OAAO6K,QAAQ,MAAW1K,UAAAwD,MAAAA,QAAA,QAAA,aAAA;AAAA,YACvBA,KAAK2D,QAAQtH,OACnB2D,GAAAA,KAAK6I,cAAc,IAAIC,YAAY,QACpC,CAAA;IAAA,CAAA,CAAA;EACF,GAOFlJ;AAAA,CAAA;ANfE,IOEMmJ,KAAwB5J,EACEC,OAAAA;AACnC,MAAA4J,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,GAAA9J;AAAA,SAAAA,IAAA,cAAqCN,EACnCuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAAAA,EACAlD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAUEoJ,GAAAA,GAAwBlJ,IAAAC,MAAAA,MAAA,GAExBkJ,EAAsBnJ,IAAAC,MAAA,MAAA,GAEtBmJ,GAA0BpJ,IAAAC,MAAAA,MAAA,GAE1BoJ,GAAwBrJ,IAAAC,MAAAA,MAkFxB0J,GAAAA,EAAA3J,IAAAC,MAAiBwG,EAAc1J,OAC7BkD;AAAAA,aAAK2J,aAAa3P,QAAQ8C;MAAI,CAcjC,CAAA;IAAA;IAXO,oBAAAwI;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACyB,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAE7BG,GAAAA,uBAAAH,MAAIgJ,IAAA,KAAAS,EAAJnJ,EAAAA,KAAAN,IAAAA,GACAG,uBAAAH,MAAIgJ,IAAA,KAAAK,CAAAA,EAAJ/I,KAAAN,IAAAA,GACAG,uBAAAH,MAAIgJ,IAAA,KAAAO,CAAAA,EAAJjJ,KAAAN,IAAAA,GAEAG,uBAAAH,MAAI0J,GAAA,GAAJpJ,EAAAA,KAAAN,MAAoBmE,EAAQnE,KAAK9E,KAEjC8E,CAAAA,GAAAA,KAAKiC,UAAU9B,uBAAAH,MAAmB0J,GAAA,GAAC9C,EAAAA,KAAK5G,IAAAA,GAAOmE,CAAAA;MAAAA,CAAAA;IAChD;EAAA,GAAAxD,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAnG,KAAA,oBAAA,WAAA,IAAA,WA7FMZ;AAAAA,SAAK2J,aAAaxB,eAEvBnH,uBAAAhB,MAAIiJ,IAAcjJ,KAAKiD,YAAY,EAAE,WAAW,YAAA,CAAA,GAAA,GAAA,GAChDjC,uBAAAhB,MAAIkJ,GAAa,IAAI3F,EACnB,MAAA;AAAM,UAAA/C;AAAA,aAAmB,UAAnBA,IAAAL,uBAAAH,MAAIiJ,IAAA,GAAA,EAAYzF,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACtD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIiJ,IAAA,GAAYrF,EAAAA,aAAazD,uBAAAH,MAAIgJ,IAAA,KAAAM,CAAAA,EAAuB1C,KAAK5G,IAAAA,GAC7DG,uBAAAH,MAAIgJ,IAAA,KAAAM,CAAJhJ,EAAAA,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIkJ,GAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAAA;AAGC/I,2BAAAH,MAAeiJ,IAAA,GAAC/F,EAAAA,WACd1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAK2J,aAAaxB,YAC1B3G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAckJ,GAAA,GAACzF,EAAAA,UAAU,MACvBtD;AAAAA,6BAAAH,MAAIiJ,IAAA,GAAA,EAAYvF,MAChB1D,GAAAA,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAA,IAAA,WAAA;AAGM4D,SAAK2J,aAAavB,iBAEvBpH,uBAAAhB,MAAImJ,IAAgBnJ,KAAKiD,YAAY,EAAE,WAAW,cAAA,CAAA,GAAA,GAAA,GAClDjC,uBAAAhB,MAAIoJ,IAAe,IAAI7F,EACrB,MAAM;AAAA,UAAA/C;AAAA,aAAqB,UAArBA,IAAAL,uBAAAH,MAAImJ,IAAA,GAAc3F,EAAAA,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACxD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAImJ,IAAA,GAAcvF,EAAAA,aAAazD,uBAAAH,MAAIgJ,IAAA,KAAAQ,CAAAA,EAAyB5C,KAAK5G,IACjEG,GAAAA,uBAAAH,MAAIgJ,IAAA,KAAAQ,CAAJlJ,EAAAA,KAAAN,IACAA,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAIoJ,IAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAGCjJ;AAAAA,2BAAAH,MAAiBmJ,IAAA,GAAA,EAACjG,WAChB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAK2J,aAAavB,cAC1B5G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAgBoJ,IAAA,GAAA,EAAC3F,UAAU,MACzBtD;AAAAA,6BAAAH,MAAImJ,IAAA,GAAA,EAAczF,MAAAA,GAClB1D,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAAiM,KAAA,WAAA;AAGCrI,SAAK2J,eAAe,IAAIrB,EACtB,MAAA;AAAA,UAAA;AACE,aAAA,UAAA9H,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,wCAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAK2J,aAAapB,YAAY,MAAA;AAAA,UAAA;AACX,gBAAjB/H,IAAAL,uBAAAH,MAAIiJ,IAAA,GAAa,MAAA,WAAAzI,KAAAA,EAAAsD,KAAAA;IAAM,CAGzB9D,GAAAA,KAAK2J,aAAanB,cAAc,MAAA;AAAA,UAAA;AACX,gBAAnBhI,IAAAL,uBAAAH,MAAImJ,IAAA,GAAe,MAAA,WAAA3I,KAAAA,EAAAsD,KAAAA;IAAM,CAE5B;EAAA,GAiBFlE;AAAA,CCnHQgK;ARFN,IQEMA,KAAiCzK,EACPC,OAAAA;AACnC,MAAAyK,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,GAAA3K;AAAA,SAAAA,IAAA,cAA8CN,EAC5CuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAN4ChD,EAO5CF,CAPF,EAAA;IAAA,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAUEiK,GAAuB/J,IAAAC,MAAA,MAAA,GAEvB+J,EAAqBhK,IAAAC,MAAAA,MAErBgK,GAAAA,GAA0BjK,IAAAC,MAAA,MAAA,GAE1BiK,GAAwBlK,IAAAC,MAAAA,MAkFxBuK,GAAAA,EAAAxK,IAAAC,MAAqBwG,EAClBgE,OAAAA;AACCxK,aAAKyK,sBAAsBrP,YAAYoP;MAAU,CAAA,CAAA;IAetD;IAXO,oBAAAlF;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AACyB,cAAA,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAE7BG,uBAAAH,MAAI6J,IAAA,KAAAS,EAAAA,EAAJhK,KAAAN,IAAAA,GACAG,uBAAAH,MAAI6J,IAAA,KAAAK,CAAAA,EAAJ5J,KAAAN,IACAG,GAAAA,uBAAAH,MAAI6J,IAAA,KAAAO,CAAJ9J,EAAAA,KAAAN,IAEAG,GAAAA,uBAAAH,MAAIuK,GAAA,GAAA,EAAJjK,KAAAN,MAAwBsE,GAActE,KAAK9E,KAAAA,CAAAA,GAE3C8E,KAAKiC,UAAU9B,uBAAAH,MAAuBuK,GAAA,GAAC3D,EAAAA,KAAK5G,IAAAA,GAAOsE,EAAAA;MAAAA,CAAAA;IACpD;EAAA,GAAA3D,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAnG,KAAA,oBAAA,WAAA,IAAA,WAAA;AA/FMZ,SAAKyK,sBAAsBtH,WAEhCnC,uBAAAhB,MAAI8J,IAAa9J,KAAKiD,YAAY,EAAE,WAAW,cAAA,CAAA,GAAA,GAAA,GAC/CjC,uBAAAhB,MAAI+J,GAAY,IAAIxG,EAClB,MAAA;AAAM,UAAA/C;AAAA,aAAkB,UAAlBA,IAAAL,uBAAAH,MAAI8J,IAAA,GAAA,EAAWtG,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACrD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAI8J,IAAA,GAAWlG,EAAAA,aAAazD,uBAAAH,MAAI6J,IAAA,KAAAM,CAAAA,EAAsBvD,KAAK5G,IAAAA,GAC3DG,uBAAAH,MAAI6J,IAAA,KAAAM,CAAAA,EAAJ7J,KAAAN,IACAA,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAI+J,GAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAAA;AAGC5J,2BAAAH,MAAc8J,IAAA,GAAC5G,EAAAA,WACb1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKyK,sBAAsBtH,QACnC3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAGhBnD,CAAAA,CAAAA,GAAAA,uBAAAH,MAAa+J,GAAA,GAAA,EAACtG,UAAU,MACtBtD;AAAAA,6BAAAH,MAAI8J,IAAA,GAAA,EAAWpG,MACf1D,GAAAA,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAA,IAAA,WAAA;AAGM4D,SAAKyK,sBAAsBC,oBAEhC1J,uBAAAhB,MAAIgK,IAAgBhK,KAAKiD,YAAY,EAAE,WAAW,iBAAA,CAAA,GAAA,GAAA,GAClDjC,uBAAAhB,MAAIiK,IAAe,IAAI1G,EACrB,MAAM;AAAA,UAAA/C;AAAA,aAAqB,UAArBA,IAAAL,uBAAAH,MAAIgK,IAAA,GAAA,EAAcxG,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACxD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIgK,IAAA,GAAcpG,EAAAA,aAAazD,uBAAAH,MAAI6J,IAAA,KAAAQ,CAAAA,EAAyBzD,KAAK5G,IACjEG,GAAAA,uBAAAH,MAAI6J,IAAA,KAAAQ,CAAJ/J,EAAAA,KAAAN,IACAA,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAIiK,IAAA,GAAA,CAAA;EACxB,GAAA,IAAA,WAAA;AAGC9J,2BAAAH,MAAiBgK,IAAA,GAAA,EAAC9G,WAChB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKyK,sBAAsBC,iBACnClJ,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAgBiK,IAAA,GAAA,EAACxG,UAAU,MACzBtD;AAAAA,6BAAAH,MAAIgK,IAAA,GAAA,EAActG,MAClB1D,GAAAA,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAAiM,KAAA,WAAA;AAGCrI,SAAKyK,wBAAwB,IAAIE,EAC/B,MAAA;AAAA,UAAA;AACE,aAAA,UAAAnK,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,6CAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAKyK,sBAAsBG,yBAAyB,MAAA;AAAA,UAAA;AAClC,gBAAhBpK,IAAAL,uBAAAH,MAAI8J,IAAA,GAAA,MAAA,WAAYtJ,KAAAA,EAAAsD,KAAAA;IAAM,CAGxB9D,GAAAA,KAAKyK,sBAAsBI,uBAAuB,MAAA;AAAA,UAAA;AAC7B,gBAAnBrK,IAAAL,uBAAAH,MAAIgK,IAAA,GAAe,MAAA,WAAAxJ,KAAAA,EAAAsD,KAAAA;IAAM,CAE5B;EAAA,GAmBFlE;AAAA,CC1HQkL;ATGN,ISHMA,KAAkC3L,EACRC,OAAAA;AACnC,MAAA2L,IAAAC,IAAAC,IAAAC,GAAAC,IAAAvL;AAAA,SAAAA,KAAA,cAA+CN,EAC7CuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAAAA,EACAlD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAUEmL,GAAoBjL,IAAAC,MAAAA,MAEpBiL,GAAAA,GAAkBlL,IAAAC,MAAA,MAAA;IAoDnB;IApBC,yBAAAoL;AACEpL,WAAKqL,yBAAyB,IAAIV,EAChC,MAAA;AAAA,YAAA;AACE,eAAA,UAAAnK,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,8CAAA;MACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAKqL,uBAAuBT,yBAAyB,MAAA;AAAA,YAAA;AACtC,kBAAbpK,IAAAL,uBAAAH,MAAIgL,IAAA,GAAA,MAAA,WAASxK,KAAAA,EAAAsD,KAAM;MAAA,CAAA;IAEtB;IAEK,oBAAAwB;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AACyB,cAAA,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAE7BA,GAAAA,KAAKoL,uBACLjL,GAAAA,uBAAAH,MAAI+K,IAAA,KAAAG,CAAJ5K,EAAAA,KAAAN,IAAAA;MAAAA,CACD;IAAA;EAAA,GAAAW,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAAD,KAAA,oBAAA,WAAA,IAAA,WAhDMZ;AAAAA,SAAKqL,uBAAuBlI,WAEjCnC,uBAAAhB,MAAIgL,IAAUhL,KAAKiD,YAAY,EAAE,WAAW,WAAA,CAAA,GAAA,GAAA,GAC5CjC,uBAAAhB,MAAIiL,IAAS,IAAI1H,EACf,MAAA;AAAM,UAAA/C;AAAA,aAAe,UAAfA,IAAAL,uBAAAH,MAAIgL,IAAA,GAAA,EAAQxH,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GAClD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAAAA,GAEjBX,uBAAAH,MAAIgL,IAAA,GAAQpH,EAAAA,aAAazD,uBAAAH,MAAI+K,IAAA,KAAAI,EAAmBvE,EAAAA,KAAK5G,IACrDG,GAAAA,uBAAAH,MAAI+K,IAAA,KAAAI,EAAJ7K,EAAAA,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIiL,IAAA,GACxB,CAAA;EAAA,GAAApE,KAAA,WAAA;AAGC1G,2BAAAH,MAAWgL,IAAA,GAAC9H,EAAAA,WACV1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKqL,uBAAuBlI,QACpC3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAUiL,IAAA,GAACxH,EAAAA,UAAU,MACnBtD;AAAAA,6BAAAH,MAAIgL,IAAA,GAAA,EAAQtH,MAAO;IAAA,CAAA;EAEtB,GAsBF9D;AAAA,CAAA;AT/DE,IUEM0L,KAAyBnM,EACCC,OAAAA;AACnC,MAAAmM,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC,IAAAC,GAAAC,GAAAtM;AAAA,SAAAA,IAAA,cAAsCN,EACpCuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UANoChD,EAOpCF,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAUE2L,GAAwBzL,IAAAC,MAAAA,MAExByL,GAAAA,EAAsB1L,IAAAC,MAAAA,MAAA,GAEtB0L,GAA0B3L,IAAAC,MAAA,MAAA,GAE1B2L,GAAwB5L,IAAAC,MAAAA,MAkFxBiM,GAAAA,EAAAlM,IAAAC,MAAiBwG,EAAcvJ,OAAAA;AAC7B+C,aAAKmM,cAAcnS,QAAQiD;MAAK,CAAA,CAAA,GAGlCiP,EAAAnM,IAAAC,MAA2BwG,EACxB4F,OAAAA;AACCpM,aAAKmM,cAAcjE,aAAakE,IAAkB,KAAK;MAAY,CAAA,CAAA;IAqBxE;IAjBO,oBAAA9G;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACyB,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAE7BG,GAAAA,uBAAAH,MAAIuL,IAAA,KAAAS,EAAJ1L,EAAAA,KAAAN,IACAG,GAAAA,uBAAAH,MAAIuL,IAAA,KAAAK,CAAJtL,EAAAA,KAAAN,IAAAA,GACAG,uBAAAH,MAAIuL,IAAA,KAAAO,CAAAA,EAAJxL,KAAAN,IAAAA,GAEAG,uBAAAH,MAAIiM,GAAA,GAAJ3L,EAAAA,KAAAN,MAAoBoE,EAASpE,KAAK9E,KAClCiF,CAAAA,GAAAA,uBAAAH,MAAIkM,GAAA,GAAA,EAAJ5L,KAAAN,MAA8BqE,EAAmBrE,KAAK9E,KAAAA,CAAAA,GAEtD8E,KAAKiC,UAAU9B,uBAAAH,MAAmBiM,GAAA,GAACrF,EAAAA,KAAK5G,IAAOoE,GAAAA,CAAAA,GAE/CpE,KAAKiC,UACH9B,uBAAAH,MAA6BkM,GAAA,GAAA,EAACtF,KAAK5G,IAAAA,GACnCqE,CAAAA;MAAAA,CAAAA;IAEH;EAAA,GAAA1D,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAnG,KAAA,oBAAA,WAAA,IAAA,WAAA;AAzGMZ,SAAKmM,cAAchE,eAExBnH,uBAAAhB,MAAIwL,IAAcxL,KAAKiD,YAAY,EAAE,WAAW,aAAA,CAAA,GAAA,GAAA,GAChDjC,uBAAAhB,MAAIyL,GAAa,IAAIlI,EACnB,MAAA;AAAM,UAAA/C;AAAA,aAAmB,UAAnBA,IAAAL,uBAAAH,MAAIwL,IAAA,GAAA,EAAYhI,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAA;IAAa,GACtD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAEjBX,GAAAA,uBAAAH,MAAIwL,IAAA,GAAA,EAAY5H,aAAazD,uBAAAH,MAAIuL,IAAA,KAAAM,CAAuBjF,EAAAA,KAAK5G,IAC7DG,GAAAA,uBAAAH,MAAIuL,IAAA,KAAAM,CAAJvL,EAAAA,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIyL,GAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAAA;AAGCtL,2BAAAH,MAAewL,IAAA,GAAA,EAACtI,WACd1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKmM,cAAchE,YAC3B3G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAcyL,GAAA,GAAChI,EAAAA,UAAU,MACvBtD;AAAAA,6BAAAH,MAAIwL,IAAA,GAAA,EAAY9H,MAChB1D,GAAAA,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAA,IAAA,WAAA;AAGM4D,SAAKmM,cAAc/D,iBAExBpH,uBAAAhB,MAAI0L,IAAgB1L,KAAKiD,YAAY,EAAE,WAAW,eAAA,CAAA,GAAA,GAClDjC,GAAAA,uBAAAhB,MAAI2L,IAAe,IAAIpI,EACrB,MAAA;AAAM,UAAA/C;AAAA,aAAqB,UAArBA,IAAAL,uBAAAH,MAAI0L,IAAA,GAAclI,EAAAA,QAAAA,WAAGhD,IAAAA,SAAAA,EAAEtG,cAAc,YAAa;IAAA,GACxD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAEjBX,GAAAA,uBAAAH,MAAI0L,IAAA,GAAA,EAAc9H,aAAazD,uBAAAH,MAAIuL,IAAA,KAAAQ,CAAyBnF,EAAAA,KAAK5G,IAAAA,GACjEG,uBAAAH,MAAIuL,IAAA,KAAAQ,CAAAA,EAAJzL,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAI2L,IAAA,GACxB,CAAA;EAAA,GAAA,IAAA,WAGCxL;AAAAA,2BAAAH,MAAiB0L,IAAA,GAAA,EAACxI,WAChB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAKmM,cAAc/D,cAC3B5G,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAgB2L,IAAA,GAAClI,EAAAA,UAAU,MAAA;AACzBtD,6BAAAH,MAAI0L,IAAA,GAAA,EAAchI,MAAAA,GAClB1D,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAAiM,KAAA,WAAA;AAGCrI,SAAKmM,gBAAgB,IAAI7D,EACvB,MAAA;AAAA,UAAA;AACE,aAAA,UAAA9H,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,yCAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAKmM,cAAc5D,YAAY,MAAA;AAAA,UAAA;AACZ,gBAAjB/H,IAAAL,uBAAAH,MAAIwL,IAAA,GAAa,MAAA,WAAAhL,KAAAA,EAAAsD,KAAAA;IAAM,CAGzB9D,GAAAA,KAAKmM,cAAc3D,cAAc,MAAA;AAAA,UAAA;AACZ,gBAAnBhI,IAAAL,uBAAAH,MAAI0L,IAAA,GAAA,MAAA,WAAelL,KAAAA,EAAAsD,KAAM;IAAA,CAAA;EAE5B,GA6BFlE;AAAA,CAAA;AVjIE,IWEMyM,KAA8BlN,EACJC,OACnC;AAAA,MAAAkN,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAhN;AAAA,SAAAA,IAAA,cAA2CN,EACzCuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAAAA,EACAlD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAUE0M,GAAoBxM,IAAAC,MAAA,MAAA,GAEpBwM,EAAkBzM,IAAAC,MAAAA,MA+ClB4M,GAAAA,EAAA7M,IAAAC,MAAqBwG,EAClBqG,OACC7M;AAAAA,aAAK8M,mBAAmB1R,YAAYyR;MAAO,CAchD,CAAA;IAAA;IAVO,oBAAAvH;AAAAA,YAAAA,IAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AAAAA,cACyB,UAAvB9E,IAAAC,EAAM6E,sBAAAA,WAAiB9E,IAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAE7BG,uBAAAH,MAAIsM,IAAA,KAAAK,CAAAA,EAAJrM,KAAAN,IAAAA,GACAG,uBAAAH,MAAIsM,IAAA,KAAAG,EAAAA,EAAJnM,KAAAN,IAAAA,GAEAG,uBAAAH,MAAI4M,GAAA,GAAJtM,EAAAA,KAAAN,MAAwBuE,GAAWvE,KAAK9E,KAExC8E,CAAAA,GAAAA,KAAKiC,UAAU9B,uBAAAH,MAAuB4M,GAAA,GAAChG,EAAAA,KAAK5G,IAAAA,GAAOuE,EAAAA;MAAAA,CAAAA;IACpD;EAAA,GAAA5D,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAC,KAAA,oBAAA,WAAAiG,KAAA,WAAA;AA3DM7G,SAAK8M,mBAAmB3J,WAE7BnC,uBAAAhB,MAAIuM,IAAUvM,KAAKiD,YAAY,EAAE,WAAW,OAAA,CAAA,GAAA,GAAA,GAC5CjC,uBAAAhB,MAAIwM,GAAS,IAAIjJ,EACf,MAAA;AAAM,UAAA/C;AAAA,aAAe,UAAfA,IAAAL,uBAAAH,MAAIuM,IAAA,GAAQ/I,EAAAA,QAAAA,WAAGhD,IAAA,SAAAA,EAAEtG,cAAc,YAAA;IAAa,GAClD,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAAAA,GAEjBX,GAAAA,uBAAAH,MAAIuM,IAAA,GAAA,EAAQ3I,aAAazD,uBAAAH,MAAIsM,IAAA,KAAAI,EAAmB9F,EAAAA,KAAK5G,IACrDG,GAAAA,uBAAAH,MAAIsM,IAAA,KAAAI,EAAJpM,EAAAA,KAAAN,IAAAA,GACAA,KAAK8G,cAAc3G,uBAAAH,MAAIwM,GAAA,GAAA,CAAA;EACxB,GAAAzF,KAAA,WAGC5G;AAAAA,2BAAAH,MAAWuM,IAAA,GAAA,EAACrJ,WACV1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAQnD,KAAK8M,mBAAmB3J,QAChC3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGhBnD,uBAAAH,MAAUwM,GAAA,GAAC/I,EAAAA,UAAU,MAAA;AACnBtD,6BAAAH,MAAIuM,IAAA,GAAQ7I,EAAAA,MAAAA,GACZ1D,KAAK2D,QAAQvH,MAAAA;IAAO,CAEvB;EAAA,GAAA,IAAA,WAAA;AAGC4D,SAAK8M,qBAAqB,IAAInC,EAC5B,MAAA;AAAA,UAAA;AACE,aAAA,UAAAnK,IAAAR,KAAKiH,eAAAA,WAAAA,IAAAA,SAAAA,EAAY/M,cACf,0CAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAGjBd,KAAK8M,mBAAmBlC,yBAAyB,MAAA;AAAA,UAAA;AAClC,gBAAbpK,IAAAL,uBAAAH,MAAIuM,IAAA,GAAS,MAAA,WAAA/L,KAAAA,EAAAsD,KAAAA;IAAM,CAEtB;EAAA,GAkBFlE;AAAA,CC7EQmN;AZFN,IYEMA,KAAiC5N,EACPC,OAAAA;AACnC,MAAA4N,GAAAC,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAA7N;AAAA,SAAAA,KAAA,cAA8CN,EAC5CuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAN4ChD,EAO5CF,CAPF,EAAA;IAAA,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,EAAAA,IAAAA,IAAAA,GASEoN,GAAAlN,IAAAC,MAA2C,CAAA,CAAA,GAE3CkN,GAAAnN,IAAAC,MAAyC,CAAA,CAAA,GAEzCmN,EAAApN,IAAAC,MAA6C,CAAA,CAAA,GAE7CoN,GAAArN,IAAAC,MAA2C,CAAA,CAAA,GAuC3CuN,EAAAxN,IAAAC,MAA+BwG,EAC5BkH,OAAAA;AAAAA,YAAAA;AACC,cAAMC,KACW,UAAfnN,KAAAR,KAAKiH,eAAAA,WAAUzG,KAAAA,SAAAA,GAAEoN,iBACf,6CAGJC;AAAAA,cAAMC,KAAKH,EAAgC7T,EAAAA,QAASiU,CAAAA,OAClD;AAAA,gBAAMC,KAAQD,GACX7N,aAAa,SACb+N,EAAAA,QAAQ,YAAY,EACjBC,GAAAA,KAAMR,EAAsBM,EAAAA,GAE5BG,IAAe,IAAI7F,EAAoByF,IAAS,EACpDjN,QAAQd,KAAKc,OAAAA,CAAAA;AAGfqN,YAAanU,SAASkU,MAAO,IAAInL,SAAAA,GAEjC5C,uBAAAH,MAAkBgN,GAAA,KAAAQ,CAAAA,EAAAlN,KAAlBN,MAAmB+N,IAASC,IAAOG,CACnChO,GAAAA,uBAAAH,MAAoBgN,GAAA,KAAAS,CAAAnN,EAAAA,KAApBN,MAAqB+N,IAASC,IAAOG,CAAa;QAAA,CAAA;MAClD,CAwEP,CAAA;IAAA;IAVO,oBAAA7I;AAAAA,YAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AACyB,cAAA,UAAvB9E,IAAAC,GAAM6E,sBAAAA,WAAiB9E,IAAA,SAAAA,EAAAF,KAAAN,IAAAA,GAE7BG,uBAAAH,MAAIuN,GAAA,GAAA,EAAJjN,KAAAN,MAAkCyE,GAAoBzE,KAAK9E,KAAAA,CAAAA,GAE3D8E,KAAKiC,UACH9B,uBAAAH,MAAiCuN,GAAA,GAAA,EAAC3G,KAAK5G,IAAAA,GACvCyE,EAAAA;MAAAA,CAAAA;IAEH;EAAA,GAAA7D,KAAA,oBAAA,WAAAD,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAE,KAAA,SAjIqB5D,GAAAA;AAAAA,QAAAA,IAAAA;AACM,cAA1B3C,KAAAL,uBAAAH,MAAIiN,IAAA,GAAA,EAAa9J,CAAAA,MAAAA,WAAS3C,MAAAA,GAAA0C,WACxB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAAA,GACA3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGS,UAAzB8K,KAAAjO,uBAAAH,MAAIkN,IAAA,GAAA,EAAY/J,CAAS,MAAA,WAAAiL,MAAAA,GAAA3K,UAAU,MAAA;AAAA,UAAA4K;AACT,gBAAxB7N,KAAAL,uBAAAH,MAAgBiN,IAAA,GAAA,EAAC9J,CAAAA,MAAAA,WAAO3C,MAAAA,GAAEkD,MAAAA,GAC1B1D,KAAK2D,QAAQvH,MAAAA;IAAO,CAEvB;EAAA,GAAA,IAAA,SAGuB+G,GAAAA;AAAAA,QAAAA,IAAAA;AACM,cAA5B3C,KAAAL,uBAAAH,MAAImN,GAAA,GAAA,EAAehK,CAAS,MAAA,WAAA3C,MAAAA,GAAA0C,WAC1B1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QACA3B,GAAAA,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAGW,CAAA,CAAA,GAAA,UAA3B8K,KAAAjO,uBAAAH,MAAIoN,IAAA,GAAA,EAAcjK,CAAS,MAAA,WAAAiL,MAAAA,GAAA3K,UAAU,MAAA;AAAA,UAAA4K;AACT,gBAA1B7N,KAAAL,uBAAAH,MAAkBmN,GAAA,GAAA,EAAChK,CAAO,MAAA,WAAA3C,MAAAA,GAAEkD,MAAAA,GAC5B1D,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAA,IAAA,SA4BC2R,GACAC,IACAG,GAAAA;AAEA,UAAMhG,KAAa4F,EAAQ7N,aAAa,cAAA;AACpCiI,IAAAA,OACFhI,uBAAAH,MAAAA,IAAAA,GAAAA,EAAiBmI,EAAcnI,IAAAA,KAAKiD,YAAY,EAC9C,WAAW,QAAQ+K,EAAAA,GAAAA,CAAAA,GAGrB7N,uBAAAH,MAAekN,IAAA,GAAA,EAAC/E,EAAc,IAAA,IAAI5E,EAChC,MAAA;AACE,UAAA/C,IAAA4N;AAAA,aAAiC,UAAAC,KAAA,UAAjC7N,KAAAL,uBAAAH,MAAgBiN,IAAA,GAAC9E,EAAAA,EAAAA,MAAAA,WAAAA,KAAAA,SAAAA,GAAa3E,QAAAA,WAAG4K,KAAAA,SAAAA,GAAElU,cAAc,YAAa;IAAA,GAChE,EAAE4G,QAAQd,KAAKc,OAEjBX,CAAAA,GAAAA,uBAAAH,MAAgBiN,IAAA,GAAA,EAAC9E,EAAAA,EAAYvE,aAC3BzD,uBAAAH,MAAAA,GAAAA,KAAAA,EAA2B4G,EAAAA,KAAK5G,MAAMmI,EAExCgG,GAAAA,EAAa5F,YAAY,MAAA;AAAA,UAAA+F,IAAAD;AACO,gBAA9BD,KAAgB,UAAhB5N,KAAAL,uBAAAH,MAAgBiN,IAAA,GAAA,MAAA,WAAAzM,KAAAA,SAAAA,GAAG2H,EAAAA,MAAAA,WAAWiG,MAAAA,GAAEtK,KAAAA;IAAM,CAAA,GAGxC3D,uBAAAH,MAA0BgN,GAAA,KAAAK,EAAAA,EAAA/M,KAA1BN,MAA2BmI,EAAAA,GAC3BnI,KAAK8G,cAAc3G,uBAAAH,MAAAA,IAAAA,GAAgBmI,EAAAA,EAAAA,CAAAA;EAEtC,GAAA,IAAA,SAGC4F,GACAC,IACAG,IAAAA;AAEA,UAAM/F,KAAe2F,EAAQ7N,aAAa,gBAAA;AACtCkI,IAAAA,OACFjI,uBAAAH,MAAAA,GAAAA,GAAAA,EAAmBoI,EAAgBpI,IAAAA,KAAKiD,YAAY,EAClD,WAAW,UAAU+K,EAAAA,GAAAA,CAAAA,GAGvB7N,uBAAAH,MAAiBoN,IAAA,GAAChF,EAAAA,EAAAA,IAAgB,IAAI7E,EACpC,MAAA;AAAA,UAAA+K,IAAAD;AACE,aAAuC,UAAvCD,KAAgC,UAAhC5N,KAAAL,uBAAAH,MAAAA,GAAAA,GAAmBoI,EAAAA,EAAAA,MAAAA,WAAa5H,KAAAA,SAAAA,GAAEgD,QAAAA,WAAK4K,KAAAA,SAAAA,GAAAlU,cACrC,YACD;IAAA,GACH,EAAE4G,QAAQd,KAAKc,OAEjBX,CAAAA,GAAAA,uBAAAH,MAAkBmN,GAAA,GAAA,EAAC/E,EAAcxE,EAAAA,aAC/BzD,uBAAAH,MAAAA,GAAAA,KAAAA,CAAAA,EAA6B4G,KAAK5G,MAAMoI,EAAAA,GAE1C+F,GAAa3F,cAAc,MAAA;AAAA,UAAA8F,IAAAD;AACS,gBAAlCD,KAAkB,UAAlB5N,KAAAL,uBAAAH,MAAkBmN,GAAA,GAAA,MAAA,WAAA3M,KAAAA,SAAAA,GAAG4H,EAAAA,MAAAA,WAAagG,MAAAA,GAAEtK,KAAAA;IAAM,CAAA,GAG5C3D,uBAAAH,MAA4BgN,GAAA,KAAAM,CAAAA,EAAAhN,KAA5BN,MAA6BoI,EAC7BpI,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAAA,IAAAA,GAAAA,EAAkBoI,EAAAA,CAAAA;EAExC,GAYFxI;AAAA,CAAA;ACjEL,IAAY2O;AAAAA,CAAZ,SAAYA,GACVA;AAAAA,IAAA,OAAA,QACAA,EAAA,SAAA,UACAA,EAAA,UAAA,WACAA,EAAA,gBAAA,gBACAA,EAAA,QAAA,SACAA,EAAA,OAAA;AACD,EAPWA,OAAAA,KAOX,CAAA,EAAA;AC1FM,IAAMC,KAAgCrP,EACNC,OAAAA;AACnC,MAAAqP,GAAA7O,IAAA8O,IAAAC,GAAAC,IAAAC,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AAAA,SAAAtP,KAAA,cAA6CN,EAC3CuG,IACAnE,GACAjC,aACAwF,IACAtF,mBACA2C,UAAAA,EACAlD,CAAAA,EAAAA;IAPF,cAAAS;AAAAA,YAAAA,GAAAA,SAAAA,GAAAA,EAAAA,IAAAA,IAAAA,GASE6O,GAAA3O,IAAAC,MAA2C,CAAA,CAAA,GAE3C2O,EAAA5O,IAAAC,MAAyC,CAAA,CAAA,GAEzC4O,GAAA7O,IAAAC,MAA6C,CAAA,CAAA,GAE7C6O,GAAA9O,IAAAC,MAA2C,CAAA,CAkD3CgP,GAAAA,EAAAjP,IAAAC,MAA8BwG,EAC3B2I,OAAAA;AAAAA,YAAAA;AACC,cAAMC,KACW,UAAf5O,KAAAR,KAAKiH,eAAU,WAAAzG,KAAA,SAAAA,GAAEoN,iBACf,sDAAA;AAGJC,cAAMC,KAAKsB,EAAAA,EAA+BtV,QAASiU,CAAAA,OAAAA;AACjD,gBACMsB,KADWtB,GAAQ7N,aAAa,SAAA,EACN+N,QAAQ,qBAAqB,EAAA,GACvDqB,IACJvB,GAAQ7N,aAAa,WAAA,KAAgBqO,GAAkBgB,MACnDrB,KAAMiB,EAAqBE,EAAAA,GAE3BlB,KAAe,IAAI7F,EAAoByF,IAAS,EACpDjN,QAAQd,KAAKc,OAAAA,CAAAA;AAGfqN,UAAAA,GAAanU,QACX4F,GAA+B4P,kBAAkBF,GAAMpB,EAEzD/N,GAAAA,uBAAAH,MAAkByO,GAAA,KAAAQ,CAAA3O,EAAAA,KAAlBN,MAAmB+N,IAASsB,IAAgBlB,EAC5ChO,GAAAA,uBAAAH,MAAoByO,GAAA,KAAAS,EAAA5O,EAAAA,KAApBN,MAAqB+N,IAASsB,IAAgBlB,EAAa;QAAA,CAAA;MAC3D,CAAA,CAAA;IAwEP;IA/IC,OAAA,kBAAyBmB,GAAcpB,GAAAA;AACrC,aAAIoB,MAASf,GAAkBkB,QAAQvB,IAE9B,IAAI1Q,KAAK0Q,CAAAA,EAAKwB,eAEnBJ,IAAAA,MAASf,GAAkBoB,WAAmBC,WAAR1B,IAChCA,IAAgB,SAAV,WAERA,KAAO,IAAInL,SAAAA;IACpB;IA4HK,oBAAAuC;AAAAA,YAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,mBAAAA,EAAAA,KAAAA,MAAAA,MAAAA,kBAAAA,EAAAA,CAAAA;AAAAA,aAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,YAAAA;AACyB,cAAA,UAAvB9E,IAAAC,GAAM6E,sBAAAA,WAAiB9E,IAAAA,SAAAA,EAAAF,KAAAN,IAE7BG,GAAAA,uBAAAH,MAAIgP,GAAA,GAAA,EAAJ1O,KAAAN,MAAiCwE,GAAmBxE,KAAK9E,KAAAA,CAAAA,GAEzD8E,KAAKiC,UACH9B,uBAAAH,MAAgCgP,GAAA,GAACpI,EAAAA,KAAK5G,IACtCwE,GAAAA,EAAAA;MAAAA,CAAAA;IAEH;EAAA,GAAA7D,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAAkG,KAAA,oBAAA,WAAAE,KAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,oBAAA,WAAA,IAAA,SAnIqB5D,GAAAA;AAAAA,QAAAA,IAAAA;AACM,cAA1B3C,KAAAL,uBAAAH,MAAI0O,IAAA,GAAA,EAAavL,CAAS,MAAA,WAAA3C,MAAAA,GAAA0C,WACxB1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QACA3B,GAAAA,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGS,UAAzB8K,KAAAjO,uBAAAH,MAAI2O,GAAA,GAAYxL,EAAAA,CAAAA,MAAAA,WAASiL,MAAAA,GAAA3K,UAAU,MAAA;AAAA,UAAA4K;AACT,gBAAxB7N,KAAAL,uBAAAH,MAAgB0O,IAAA,GAAA,EAACvL,CAAO,MAAA,WAAA3C,MAAAA,GAAEkD,MAAAA,GAC1B1D,KAAK2D,QAAQvH,MAAO;IAAA,CAAA;EAEvB,GAAA,IAAA,SAGuB+G,GAAAA;AAAAA,QAAAA,IAAAA;AACM,cAA5B3C,KAAAL,uBAAAH,MAAI4O,IAAA,GAAezL,EAAAA,CAAAA,MAAAA,WAAS3C,MAAAA,GAAA0C,WAC1B1J,EAAmB,EACjB+H,WAAWvB,KAAKuB,WAChB4B,QAAAA,GACA3B,SAASxB,KAAKwB,SACd4B,eAAepD,KAAKoD,eACpBC,YAAYrD,KAAKqD,YACjB5B,mBAAmBzB,KAAKyB,mBACxB6B,OAAOtD,KAAKsD,MAAAA,CAAAA,CAAAA,GAGW,UAA3B8K,KAAAjO,uBAAAH,MAAI6O,IAAA,GAAA,EAAc1L,CAAS,MAAA,WAAAiL,MAAAA,GAAA3K,UAAU,MAAA;AAAA,UAAA4K;AACT,gBAA1B7N,KAAAL,uBAAAH,MAAkB4O,IAAA,GAACzL,EAAAA,CAAAA,MAAAA,WAAO3C,MAAAA,GAAEkD,MAC5B1D,GAAAA,KAAK2D,QAAQvH,MAAAA;IAAO,CAAA;EAEvB,GAAA,IAAA,SA8BC2R,GACAsB,IACAlB,IAEA;AAAA,UAAMhG,IAAa4F,EAAQ7N,aAAa,cACpCiI;AAAAA,UACFhI,uBAAAH,MAAAA,IAAAA,GAAiBmI,EAAAA,CAAAA,IAAcnI,KAAKiD,YAAY,EAC9C,WAAW,QAAQoM,EAAAA,GAAAA,CAAAA,GAGrBlP,uBAAAH,MAAe2O,GAAA,GAACxG,EAAAA,CAAAA,IAAc,IAAI5E,EAChC,MAAA;AACE,UAAA/C,IAAA4N;AAAA,aAAiC,UAAAC,KAAA,UAAjC7N,KAAAL,uBAAAH,MAAgB0O,IAAA,GAAA,EAACvG,CAAAA,MAAAA,WAAAA,KAAAA,SAAAA,GAAa3E,QAAG,WAAA4K,KAAAA,SAAAA,GAAElU,cAAc,YAAA;IAAa,GAChE,EAAE4G,QAAQd,KAAKc,OAEjBX,CAAAA,GAAAA,uBAAAH,MAAgB0O,IAAA,GAAA,EAACvG,CAAYvE,EAAAA,aAC3BzD,uBAAAH,MAAAA,GAAAA,KAAAA,CAAAA,EAA2B4G,KAAK5G,MAAMmI,CAAAA,GAExCgG,GAAa5F,YAAY,MAAA;AAAA,UAAA+F,IAAAD;AACO,gBAA9BD,KAAgB,UAAhB5N,KAAAL,uBAAAH,MAAgB0O,IAAA,GAAA,MAAA,WAAAlO,KAAA,SAAAA,GAAG2H,CAAW,MAAA,WAAAiG,MAAAA,GAAEtK,KAAAA;IAAM,CAGxC3D,GAAAA,uBAAAH,MAA0ByO,GAAA,KAAAK,CAAAA,EAAAxO,KAA1BN,MAA2BmI,CAC3BnI,GAAAA,KAAK8G,cAAc3G,uBAAAH,MAAAA,GAAAA,GAAAA,EAAgBmI,CAAAA,CAAAA;EAEtC,GAAAE,KAAA,SAGC0F,GACAsB,IACAlB,IAEA;AAAA,UAAM/F,KAAe2F,EAAQ7N,aAAa,gBACtCkI;AAAAA,IAAAA,OACFjI,uBAAAH,MAAAA,IAAAA,GAAmBoI,EAAAA,EAAAA,IAAgBpI,KAAKiD,YAAY,EAClD,WAAW,UAAUoM,EAGvBlP,GAAAA,CAAAA,GAAAA,uBAAAH,MAAiB6O,IAAA,GAAA,EAACzG,EAAAA,IAAgB,IAAI7E,EACpC,MAAA;AAAA,UAAA+K,IAAAD;AACE,aAAuC,UAAvCD,KAAgC,UAAhC5N,KAAAL,uBAAAH,MAAAA,IAAAA,GAAAA,EAAmBoI,EAAa,MAAA,WAAA5H,KAAAA,SAAAA,GAAEgD,QAAK,WAAA4K,KAAAA,SAAAA,GAAAlU,cACrC,YAAA;IACD,GACH,EAAE4G,QAAQd,KAAKc,OAAAA,CAAAA,GAEjBX,uBAAAH,MAAkB4O,IAAA,GAACxG,EAAAA,EAAAA,EAAcxE,aAC/BzD,uBAAAH,MAAAA,GAAAA,KAAAA,CAAAA,EAA6B4G,KAAK5G,MAAMoI,EAAAA,GAE1C+F,GAAa3F,cAAc,MAAA;AAAA,UAAA8F,IAAAD;AACS,gBAAlCD,KAAkB,UAAlB5N,KAAAL,uBAAAH,MAAkB4O,IAAA,GAAA,MAAA,WAAApO,KAAA,SAAAA,GAAG4H,EAAa,MAAA,WAAAgG,MAAAA,GAAEtK,KAAAA;IAAM,CAG5C3D,GAAAA,uBAAAH,MAA4ByO,GAAA,KAAAM,CAAAzO,EAAAA,KAA5BN,MAA6BoI,EAAAA,GAC7BpI,KAAK8G,cAAc3G,uBAAAH,MAAAA,IAAAA,GAAAA,EAAkBoI,EAAAA,CAAAA;EAExC,GAYFxI;AAAA,CC1KQiQ;ADQN,ICRMA,KAAY1Q,EACcC,OAEnC,cAA6BE,EAC3BwQ,eACAvN,YACAJ,GACAqM,IACArH,IACApB,IACAgD,IACAuC,IACA1B,IACAkB,IACAuB,IACAU,IACAtE,EAb2BnJ,EAc3BF,CACM,EAAA;EAAA,OAAAmB;AAAAA,UAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,MAAAA,EAAAA,KAAAA,MAAAA,MAAAA,KAAAA,EAAAA,CAAAA;AAAAA,WAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,UAAAA;AAAAA,YACY,UAAVX,IAAAa,GAAMF,SAAI,WAAAX,IAAAA,SAAAA,EAAAU,KAAAN,IAAAA;IAAAA,CAAAA;EACjB;ACRM+P,CAAAA;AFJN,IEIMA,KAAoBzQ,EArBdF,OACjB,cAA6ByQ,GAAUzQ,CAAAA,EAAAA;EAC/B,OAAAmB;AAAAA,UAAAA,KAAAA,OAAAA,OAAAA,MAAAA,EAAAA,MAAAA,EAAAA,KAAAA,MAAAA,MAAAA,KAAAA,EAAAA,CAAAA;AAAAA,WAAAA,UAAAA,MAAAA,QAAAA,QAAAA,aAAAA;AAAAA,UAAAA;AACY,YAAA,UAAVX,IAAAa,GAAMF,SAAAA,WAAIX,IAAAA,SAAAA,EAAAU,KAAAN,IAGdgQ;AAAAA,OAAAA,eAAerV,IAAI,YACZsV,MAAAA,MAAAA,OAAO,0BAA0BC,EAAAA,KACrCC,CAAAA,OAAWA,GAAOC,OAAAA,IAGVC,qBAAqB,EAChC/O,aAAa,EACX,yBAAyB,uBACzB,uBAAuBtB,KAAKE,aAAa,WAAA,GACzC,4BAA4B,SAAA,EAAA;IAAA,CAAA;EAGjC;AAG4BZ,CAAAA,EAAmBgR,WAAAA;ACRpDN,eAAeO,OAAO,+BAA+BR,EAAAA;",
  "names": ["createFlowTemplate", "flowConfig", "template", "createTemplate", "Object", "entries", "forEach", "key", "value", "content", "querySelector", "setAttribute", "kebabCase", "getUrlParam", "paramName", "URLSearchParams", "window", "location", "search", "get", "buildAsyncReducer", "action", "args", "builder", "addCase", "pending", "state", "onPending", "fulfilled", "onFulfilled", "rejected", "onRejected", "createAsyncThunk", "arg", "extra", "api", "user", "me", "reducer", "data", "payload", "getStateSection", "loading", "error", "getMe", "logout", "initialState", "apiPaths", "__awaiter", "Promise", "resolve", "loginIds", "externalIds", "userId", "name", "email", "roleNames", "phone", "verifiedEmail", "verifiedPhone", "userTenants", "status", "editable", "createdTime", "Date", "getTime", "customAttributes", "familyName", "givenName", "middleName", "picture", "password", "SAML", "test", "TOTP", "webauthn", "createUserSdk", "httpClient", "mock", "res", "text", "json", "JSON", "parse", "ok", "descopeErrorMsg", "errorDescription", "errorMessage", "Error", "statusText", "apiMixin", "createSingletonMixin", "superclass", "BaseClass", "compose", "projectIdMixin", "observeAttributesMixin", "loggerMixin", "baseUrlMixin", "cookieConfigMixin", "_a", "constructor", "_ApiMixinClass_api", "set", "this", "widgetId", "getAttribute", "__classPrivateFieldGet", "_ApiMixinClass_instances", "_ApiMixinClass_createSdk", "call", "init", "_b", "_super", "observeAttributes", "r", "o", "h", "logger", "debug", "__classPrivateFieldSet", "config", "webSdk", "createWebSdk", "assign", "persistTokens", "baseHeaders", "projectId", "baseUrl", "refreshCookieName", "stateManagementMixin", "createStateManagementMixin", "reducers", "extraReducers", "asyncActions", "initLifecycleMixin", "super", "subscribe", "REDIRECT_FLOW_NAME_QUERY_PARAM", "flowRedirectUrlMixin", "_FlowRedirectUrlMixinClass_instances", "_FlowRedirectUrlMixinClass_createFlowRedirectModal", "modalMixin", "themeMixin", "widgetFlow", "history", "replaceState", "newUrl", "URL", "href", "delete", "toString", "modal", "createModal", "setContent", "flowId", "baseStaticUrl", "baseCdnUrl", "theme", "FlowDriver", "ele", "onSuccess", "close", "actions", "afterClose", "remove", "open", "getPicture", "createSelector", "getEmail", "getIsEmailVerified", "getName", "getPhone", "getIsPhoneVerified", "getHasPasskey", "getHasTotp", "getUserCustomAttrs", "getUserBuiltinAttrs", "fetchWidgetPagesMixin", "staticResourcesMixin", "createValidateAttributesMixin", "missingAttrValidator", "filename", "fetchStaticResource", "body", "initWidgetRootMixin", "_InitWidgetRootMixinClass_instances", "_InitWidgetRootMixinClass_initWidgetRoot", "descopeUiMixin", "initElementMixin", "onWidgetRootReady", "all", "fetchWidgetPage", "loadDescopeUiComponents", "contentRootElement", "append", "cloneNode", "flowSyncThemeMixin", "flowDriver", "initAvatarMixin", "_AvatarMixinClass_instances", "_AvatarMixinClass_modal", "_AvatarMixinClass_flow", "_AvatarMixinClass_initModal", "_AvatarMixinClass_initModalContent", "_AvatarMixinClass_initAvatar", "_AvatarMixinClass_onPictureUpdate", "_AvatarMixinClass_onNameUpdate", "withMemCache", "avatar", "image", "displayName", "bind", "n", "syncFlowTheme", "c", "AvatarDriver", "shadowRoot", "onClick", "initEmailUserAttrMixin", "_EmailUserAttrMixinClass_instances", "_EmailUserAttrMixinClass_editModal", "_EmailUserAttrMixinClass_editFlow", "_EmailUserAttrMixinClass_deleteModal", "_EmailUserAttrMixinClass_deleteFlow", "_EmailUserAttrMixinClass_initEditModal", "_EmailUserAttrMixinClass_initEditModalContent", "_EmailUserAttrMixinClass_initDeleteModal", "_EmailUserAttrMixinClass_initDeleteModalContent", "_EmailUserAttrMixinClass_initEmailUserAttr", "_EmailUserAttrMixinClass_onValueUpdate", "_EmailUserAttrMixinClass_onValueBadgeLabelUpdate", "emailUserAttr", "isEmailVerified", "badgeLabel", "editFlowId", "deleteFlowId", "w", "UserAttributeDriver", "onEditClick", "onDeleteClick", "initLogoutMixin", "_LogoutMixinClass_instances", "_LogoutMixinClass_initLogout", "ButtonDriver", "dispatchEvent", "CustomEvent", "initNameUserAttrMixin", "_NameUserAttrMixinClass_instances", "_NameUserAttrMixinClass_editModal", "_NameUserAttrMixinClass_editFlow", "_NameUserAttrMixinClass_deleteModal", "_NameUserAttrMixinClass_deleteFlow", "_NameUserAttrMixinClass_initEditModal", "_NameUserAttrMixinClass_initEditModalContent", "_NameUserAttrMixinClass_initDeleteModal", "_NameUserAttrMixinClass_initDeleteModalContent", "_NameUserAttrMixinClass_initNameUserAttr", "_NameUserAttrMixinClass_onValueUpdate", "nameUserAttr", "initPasskeyUserAuthMethodMixin", "_PasskeyUserAuthMethodMixinClass_instances", "_PasskeyUserAuthMethodMixinClass_addModal", "_PasskeyUserAuthMethodMixinClass_addFlow", "_PasskeyUserAuthMethodMixinClass_removeModal", "_PasskeyUserAuthMethodMixinClass_removeFlow", "_PasskeyUserAuthMethodMixinClass_initAddModal", "_PasskeyUserAuthMethodMixinClass_initAddModalContent", "_PasskeyUserAuthMethodMixinClass_initRemoveModal", "_PasskeyUserAuthMethodMixinClass_initRemoveModalContent", "_PasskeyUserAuthMethodMixinClass_initPasskeyAuthMethod", "_PasskeyUserAuthMethodMixinClass_onFulfilledUpdate", "hasPasskey", "passkeyUserAuthMethod", "fulfilledFlowId", "UserAuthMethodDriver", "onUnfulfilledButtonClick", "onFulfilledButtonClick", "initPasswordUserAuthMethodMixin", "_PasswordUserAuthMethodMixinClass_instances", "_PasswordUserAuthMethodMixinClass_modal", "_PasswordUserAuthMethodMixinClass_flow", "_PasswordUserAuthMethodMixinClass_initModal", "_PasswordUserAuthMethodMixinClass_initModalContent", "initPasswordAuthMethod", "passwordUserAuthMethod", "initPhoneUserAttrMixin", "_PhoneUserAttrMixinClass_instances", "_PhoneUserAttrMixinClass_editModal", "_PhoneUserAttrMixinClass_editFlow", "_PhoneUserAttrMixinClass_deleteModal", "_PhoneUserAttrMixinClass_deleteFlow", "_PhoneUserAttrMixinClass_initEditModal", "_PhoneUserAttrMixinClass_initEditModalContent", "_PhoneUserAttrMixinClass_initDeleteModal", "_PhoneUserAttrMixinClass_initDeleteModalContent", "_PhoneUserAttrMixinClass_initPhoneUserAttr", "_PhoneUserAttrMixinClass_onValueUpdate", "_PhoneUserAttrMixinClass_onValueBadgeLabelUpdate", "phoneUserAttr", "isPhoneVerified", "initTotpUserAuthMethodMixin", "_TotpUserAuthMethodMixinClass_instances", "_TotpUserAuthMethodMixinClass_modal", "_TotpUserAuthMethodMixinClass_flow", "_TotpUserAuthMethodMixinClass_initModal", "_TotpUserAuthMethodMixinClass_initModalContent", "_TotpUserAuthMethodMixinClass_initTotpAuthMethod", "_TotpUserAuthMethodMixinClass_onFulfilledUpdate", "hasTotp", "totpUserAuthMethod", "initUserBuiltinAttributesMixin", "_UserBuiltinAttributesMixinClass_instances", "_UserBuiltinAttributesMixinClass_editModals", "_UserBuiltinAttributesMixinClass_editFlows", "_UserBuiltinAttributesMixinClass_deleteModals", "_UserBuiltinAttributesMixinClass_deleteFlows", "_UserBuiltinAttributesMixinClass_initEditModalContent", "_UserBuiltinAttributesMixinClass_initDeleteModalContent", "_UserBuiltinAttributesMixinClass_updateBuiltinValueUserAttrs", "_UserBuiltinAttributesMixinClass_initEditFlow", "_UserBuiltinAttributesMixinClass_initDeleteFlow", "userBuiltinAttributes", "allBuiltinAttributesComponents", "querySelectorAll", "Array", "from", "nodeEle", "field", "replace", "val", "compInstance", "_c", "i", "e", "AttributeTypeName", "initUserCustomAttributesMixin", "_UserCustomAttributesMixinClass_instances", "_UserCustomAttributesMixinClass_editModals", "_UserCustomAttributesMixinClass_editFlows", "_UserCustomAttributesMixinClass_deleteModals", "_UserCustomAttributesMixinClass_deleteFlows", "_UserCustomAttributesMixinClass_initEditModalContent", "_UserCustomAttributesMixinClass_initDeleteModalContent", "_UserCustomAttributesMixinClass_updateCustomValueUserAttrs", "_UserCustomAttributesMixinClass_initEditFlow", "_UserCustomAttributesMixinClass_initDeleteFlow", "userCustomAttributes", "allCustomAttributesComponents", "customAttrName", "type", "TEXT", "getFormattedValue", "DATE", "toLocaleString", "BOOLEAN", "undefined", "initMixin", "debuggerMixin", "UserProfileWidget", "customElements", "import", "then", "module", "default", "sdkConfigOverrides", "HTMLElement", "define"]
}
