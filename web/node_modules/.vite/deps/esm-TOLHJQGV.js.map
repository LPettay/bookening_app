{
  "version": 3,
  "sources": ["../../@descope/access-key-management-widget/src/lib/widget/state/selectors.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/helpers.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/createAccessKey.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/deleteAccessKey.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/searchAccessKeys.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/activateAccessKey.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/deactivateAccessKey.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/asyncActions/getTenantRoles.ts", "../../@descope/access-key-management-widget/src/lib/widget/state/initialState.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/apiPaths.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/sdk/helpers.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/sdk/mocks.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/sdk/createAccessKeySdk.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/sdk/createTenantSdk.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/apiMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/api/sdk/index.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/stateManagementMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initAccessKeysTableMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initActivateAccessKeysModalMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initActivateAccessKeysButtonMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initCreatedAccessKeyModalMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initCreateAccessKeyModalMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initCreateAccessKeyButtonMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeactivateAccessKeysModalMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeactivateAccessKeysButtonMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeleteAccessKeysModalMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeleteAccessKeysButtonMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initFilterAccessKeysInputMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initNotificationsMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/mixins/initMixin/initMixin.ts", "../../@descope/access-key-management-widget/src/lib/widget/index.ts", "../../@descope/access-key-management-widget/src/lib/index.ts"],
  "sourcesContent": ["import { createSelector } from 'reselect';\nimport { State } from './types';\n\nexport const getRawAccessKeysList = (state: State) => state.accessKeysList.data;\nexport const getSelectedAccessKeysIds = (state: State) =>\n  state.selectedAccessKeysIds;\nexport const getNotifications = (state: State) => state.notifications;\nexport const getSearchParams = (state: State) => state.searchParams;\nexport const getTenantRoles = (state: State) => state.tenantRoles.data || [];\n\nexport const getAccessKeysList = createSelector(\n  getRawAccessKeysList,\n  (accessKeys) =>\n    accessKeys.map((accessKey) => ({\n      ...accessKey,\n      expireTimeFormatted: !accessKey?.expireTime\n        ? 'Never'\n        : new Date((accessKey?.expireTime || 0) * 1000).toLocaleString(),\n      createdTimeFormatted: new Date(\n        (accessKey?.createdTime || 0) * 1000,\n      ).toLocaleString(),\n      status:\n        accessKey?.expireTime &&\n        new Date((accessKey?.expireTime || 0) * 1000) < new Date()\n          ? 'expired'\n          : accessKey?.status,\n    })),\n);\n\nexport const getSelectedAccessKeys = createSelector(\n  getSelectedAccessKeysIds,\n  getAccessKeysList,\n  (selected, accessKeys) =>\n    accessKeys.filter((accessKey) => selected.includes(accessKey.id)),\n);\n\nexport const getIsAccessKeysSelected = createSelector(\n  getSelectedAccessKeysIds,\n  (selected) => !!selected.length,\n);\n\nexport const getIsAccessKeysEditable = createSelector(\n  getSelectedAccessKeys,\n  (selectedAccessKeys) =>\n    selectedAccessKeys.every((accessKey) => accessKey.editable),\n);\n\nexport const getCanModifyAccessKeys = createSelector(\n  getIsAccessKeysEditable,\n  getIsAccessKeysSelected,\n  (isEditable, isSelected) => isEditable && isSelected,\n);\n\nexport const getIsSingleAccessKeysSelected = createSelector(\n  getSelectedAccessKeysIds,\n  (selected) => selected.length === 1,\n);\n\nexport const getSelectedAccessKeysDetailsForDisplay = createSelector(\n  getSelectedAccessKeys,\n  (selectedAccessKeys) => {\n    if (selectedAccessKeys.length === 1) {\n      return selectedAccessKeys[0].name;\n    }\n    return `${selectedAccessKeys.length} access keys`;\n  },\n);\n", "/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n\nexport const withNotifications = ({\n  getErrorMsg,\n  getSuccessMsg,\n}: {\n  getErrorMsg?: (action?: RejectedAction<AsyncThunk<any, any, any>>) => string;\n  getSuccessMsg?: (\n    action?: FulfilledAction<AsyncThunk<any, any, any>>,\n  ) => string;\n}): AsyncReducerConfig<any> => ({\n  onFulfilled: (state, action) => {\n    if (getSuccessMsg)\n      state.notifications.push({ type: 'success', msg: getSuccessMsg(action) });\n  },\n  onRejected: (state, action) => {\n    if (getErrorMsg)\n      state.notifications.push({ type: 'error', msg: getErrorMsg(action) });\n  },\n});\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['accesskey']['create']>,\n  ThunkConfigExtraApi\n>('accessKeys/create', (arg, { extra: { api } }) => api.accesskey.create(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.accessKeysList.data.unshift(action.payload.key);\n    },\n  },\n  withRequestStatus((state: State) => state.createAccessKey),\n  withNotifications({\n    getSuccessMsg: () => 'Access Key created successfully',\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to create access key</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const createAccessKey = { action, reducer };\n", "/* eslint-disable no-param-reassign */\nimport { pluralize } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['accesskey']['deleteBatch']>,\n  ThunkConfigExtraApi\n>('accessKeys/delete', (arg, { extra: { api } }) =>\n  api.accesskey.deleteBatch(arg),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.accessKeysList.data = state.accessKeysList.data.filter(\n        (accessKey) => !action.meta.arg.includes(accessKey.id),\n      );\n      state.selectedAccessKeysIds = [];\n    },\n  },\n  withRequestStatus((state: State) => state.deleteAccessKey),\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  withNotifications({\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getSuccessMsg: (action) =>\n      pluralize(action.meta.arg.length)`${['', action.meta.arg.length]} ${[\n        'A',\n        'a',\n      ]}ccess key${['', 's']} deleted successfully`,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getErrorMsg: (action) =>\n      pluralize(action.meta.arg.length)`Failed to delete access key${[\n        '',\n        's',\n      ]}`,\n  }),\n);\n\nexport const deleteAccessKeys = { action, reducer };\n", "/* eslint-disable no-param-reassign */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\nimport { getSearchParams } from '../selectors';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['accesskey']['search']> | void,\n  ThunkConfigExtraApi\n>('accessKeys/search', (arg, { extra: { api }, getState }) => {\n  // we get the existing search params from state, and adding the new search params from the action\n  const searchParams = getSearchParams(getState() as State);\n  return api.accesskey.search({ ...searchParams, ...arg });\n});\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onPending: (state, action) => {\n      state.searchParams = { ...state.searchParams, ...action.meta.arg };\n    },\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.accessKeysList.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.accessKeysList),\n);\n\nexport const searchAccessKeys = { action, reducer };\n", "/* eslint-disable no-param-reassign */\nimport { pluralize } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['accesskey']['activate']>,\n  ThunkConfigExtraApi\n>('accessKeys/activate', (arg, { extra: { api } }) =>\n  api.accesskey.activate(arg),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.accessKeysList.data.forEach((accessKey) => {\n        if (action.meta.arg.includes(accessKey.id)) {\n          accessKey.status = 'active';\n        }\n      });\n    },\n  },\n  withRequestStatus((state: State) => state.activateAccessKey),\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  withNotifications({\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getSuccessMsg: (action) =>\n      pluralize(action.meta.arg.length)`${['', action.meta.arg.length]} ${[\n        'A',\n        'a',\n      ]}ccess key${['', 's']} activated successfully`,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getErrorMsg: (action) =>\n      pluralize(action.meta.arg.length)`Failed to activate access key${[\n        '',\n        's',\n      ]}`,\n  }),\n);\n\nexport const activateAccessKeys = { action, reducer };\n", "/* eslint-disable no-param-reassign */\nimport { pluralize } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['accesskey']['deactivate']>,\n  ThunkConfigExtraApi\n>('accessKeys/deactivate', (arg, { extra: { api } }) =>\n  api.accesskey.deactivate(arg),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.accessKeysList.data.forEach((accessKey) => {\n        if (action.meta.arg.includes(accessKey.id)) {\n          accessKey.status = 'inactive';\n        }\n      });\n    },\n  },\n  withRequestStatus((state: State) => state.deactivateAccessKey),\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  withNotifications({\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getSuccessMsg: (action) =>\n      pluralize(action.meta.arg.length)`${['', action.meta.arg.length]} ${[\n        'A',\n        'a',\n      ]}ccess key${['', 's']} deactivated successfully`,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getErrorMsg: (action) =>\n      pluralize(action.meta.arg.length)`Failed to deactivate access key${[\n        '',\n        's',\n      ]}`,\n  }),\n);\n\nexport const deactivateAccessKeys = { action, reducer };\n", "import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['tenant']['getTenantRoles']>,\n  ThunkConfigExtraApi\n>('tenant/getTenantRoles', (_, { extra: { api } }) =>\n  api.tenant.getTenantRoles(),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      // eslint-disable-next-line no-param-reassign\n      state.tenantRoles.data = action.payload.roles;\n    },\n  },\n  withRequestStatus((state: State) => state.tenantRoles),\n);\n\nexport const getTenantRoles = { action, reducer };\n", "import { State } from './types';\n\nexport const initialState: State = {\n  accessKeysList: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n  createAccessKey: {\n    loading: false,\n    error: null,\n  },\n  activateAccessKey: {\n    loading: false,\n    error: null,\n  },\n  deactivateAccessKey: {\n    loading: false,\n    error: null,\n  },\n  deleteAccessKey: {\n    loading: false,\n    error: null,\n  },\n  tenantRoles: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  searchParams: { text: '', sort: [] },\n  selectedAccessKeysIds: [],\n  notifications: [],\n};\n", "export const apiPaths = {\n  accesskey: {\n    search: '/v1/mgmt/accesskey/search',\n    deleteBatch: '/v1/mgmt/accesskey/delete/batch',\n    create: '/v1/mgmt/accesskey/create',\n    deactivate: '/v1/mgmt/accesskey/deactivate/batch',\n    activate: '/v1/mgmt/accesskey/activate/batch',\n  },\n  tenant: {\n    roles: '/v1/mgmt/role/all',\n  },\n};\n", "export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n", "import {\n  AccessKey,\n  CreateAccessKeyConfig,\n  Role,\n  SearchAccessKeyConfig,\n} from '../types';\n\nconst search: (config: SearchAccessKeyConfig) => Promise<AccessKey[]> = async ({\n  text,\n  sort,\n} = {}) =>\n  new Promise((resolve) => {\n    const keys: AccessKey[] = [];\n    const timeMock = new Date().getTime() / 1000 + 60 * 60 * 24 * 30;\n    const timeMockFormatted = new Date(timeMock).toLocaleString();\n    for (let i = 1; i < 10; i += 1) {\n      keys.push({\n        id: `access-key-id-${i}`,\n        name: `Access Key ${i}`,\n        createdBy: `User ${i}`,\n        editable: true,\n        expireTime: timeMock,\n        expireTimeFormatted: timeMockFormatted,\n        createdTime: timeMock,\n        createdTimeFormatted: timeMockFormatted,\n        roleNames: [`Role ${i}`],\n        permittedIps: ['127.1.2.3'],\n        status: 'active',\n        clientId: `Client ID ${i}`,\n        boundUserId: `User ${i}`,\n      });\n    }\n    sort.forEach((s) => {\n      keys.sort((a, b) =>\n        !s.desc\n          ? (a[s.field] as string)?.localeCompare(b[s.field] as string)\n          : (b[s.field] as string)?.localeCompare(a[s.field] as string),\n      );\n    });\n    resolve(\n      keys.filter(\n        (key) =>\n          key.name.toLowerCase().includes(text.toLowerCase()) ||\n          key.createdBy.toLowerCase().includes(text.toLowerCase()),\n      ),\n    );\n  });\n\nconst create: (\n  config: CreateAccessKeyConfig,\n  expireTime: number,\n) => Promise<{ cleartext: string; key: AccessKey }> = async (\n  { name, roleNames, userId, permittedIps },\n  expireTime,\n) => {\n  const i = Math.random().toString(10).substring(15);\n  return new Promise((resolve) => {\n    resolve({\n      cleartext: Math.random().toString(20).substring(2),\n      key: {\n        id: `access-key-id-${i}`,\n        name: name || `Access Key ${i}`,\n        createdBy: userId || `User ${i}`,\n        editable: true,\n        expireTime,\n        createdTime: new Date().getTime() / 1000,\n        roleNames,\n        permittedIps,\n        status: 'active',\n        clientId: `Client ID ${i}`,\n        boundUserId: userId || `User ${i}`,\n      },\n    });\n  });\n};\n\nconst activate = async () => {};\n\nconst deactivate = async () => {};\n\nconst deleteBatch = async () => {};\n\nconst getTenantRoles = (\n  tenant: string,\n): Promise<{\n  roles: Role[];\n}> =>\n  new Promise((resolve) => {\n    const roles: Role[] = [];\n    for (let i = 1; i < 5; i += 1) {\n      roles.push({\n        name: `Role ${i}`,\n        description: `Role description ${i}`,\n        createdTime: new Date(),\n        permissionNames: [`Permission ${i}`],\n        tenantId: tenant,\n      });\n    }\n    resolve({ roles });\n  });\n\nconst accessKey = {\n  search,\n  create,\n  activate,\n  deactivate,\n  deleteBatch,\n};\nconst tenants = {\n  getTenantRoles,\n};\nexport { accessKey, tenants };\n", "import {\n  HttpClient,\n  CreateAccessKeyConfig,\n  SearchAccessKeyConfig,\n  AccessKey,\n} from '../types';\nimport { apiPaths } from '../apiPaths';\nimport { withErrorHandler } from './helpers';\nimport { accessKey } from './mocks';\n\nexport const createAccessKeySdk = ({\n  httpClient,\n  tenant,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenant: string;\n  mock: boolean;\n}) => {\n  const search: (\n    config: SearchAccessKeyConfig,\n  ) => Promise<AccessKey[]> = async ({\n    page,\n    limit = 10000,\n    text,\n    sort,\n  } = {}) => {\n    if (mock) {\n      return accessKey.search({ page, limit, text, sort });\n    }\n\n    const res = await httpClient.post(\n      apiPaths.accesskey.search,\n      {\n        limit,\n        page,\n        text,\n        sort,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.keys;\n  };\n\n  const deleteBatch = async (ids: string[]) => {\n    if (mock) {\n      return accessKey.deleteBatch();\n    }\n    const res = await httpClient.post(\n      apiPaths.accesskey.deleteBatch,\n      { ids },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const create: (\n    config: CreateAccessKeyConfig,\n  ) => Promise<{ cleartext: string; key: AccessKey }> = async ({\n    name,\n    expiration,\n    roleNames,\n    userId,\n    permittedIps,\n  }) => {\n    const expirationTime = new Date();\n    expirationTime.setDate(expirationTime.getDate() + +expiration);\n    const expireTime =\n      expiration[0] === '0' ? 0 : Math.floor(expirationTime.getTime() / 1000);\n    if (mock) {\n      return accessKey.create(\n        { name, expiration, roleNames, userId, permittedIps },\n        expireTime,\n      );\n    }\n\n    const res = await httpClient.post(\n      apiPaths.accesskey.create,\n      {\n        name,\n        expireTime,\n        roleNames,\n        userId,\n        permittedIps,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json;\n  };\n\n  const activate = async (ids: string[]) => {\n    if (mock) {\n      return accessKey.activate();\n    }\n    const res = await httpClient.post(\n      apiPaths.accesskey.activate,\n      {\n        ids,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n    return json;\n  };\n\n  const deactivate = async (ids: string[]) => {\n    if (mock) {\n      return accessKey.deactivate();\n    }\n    const res = await httpClient.post(\n      apiPaths.accesskey.deactivate,\n      {\n        ids,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n    return json;\n  };\n\n  return {\n    search,\n    deleteBatch,\n    create,\n    activate,\n    deactivate,\n  };\n};\n", "import { HttpClient, Role } from '../types';\nimport { apiPaths } from '../apiPaths';\nimport { withErrorHandler } from './helpers';\nimport { tenants } from './mocks';\n\nexport const createTenantSdk = ({\n  httpClient,\n  tenant,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenant: string;\n  mock: boolean;\n}) => {\n  const getTenantRoles = async (): Promise<{\n    roles: Role[];\n  }> => {\n    if (mock) {\n      return tenants.getTenantRoles(tenant);\n    }\n\n    const res = await httpClient.get(apiPaths.tenant.roles, {\n      queryParams: { tenant },\n    });\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  return {\n    getTenantRoles,\n  };\n};\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  baseUrlMixin,\n  cookieConfigMixin,\n  createValidateAttributesMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      baseUrlMixin,\n      cookieConfigMixin,\n      createValidateAttributesMixin({\n        tenant: createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          {\n            projectId: this.projectId,\n            baseUrl: this.baseUrl,\n            refreshCookieName: this.refreshCookieName,\n          },\n          this.tenantId,\n          this.mock === 'true',\n          this.widgetId,\n        );\n      }\n\n      get tenantId() {\n        return this.getAttribute('tenant');\n      }\n\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(['project-id', 'base-url', 'tenant'], () => {\n          if (this.#api) {\n            this.#createSdk();\n          }\n        });\n      }\n    };\n  },\n);\n", "import createWebSdk from '@descope/web-js-sdk';\nimport { createAccessKeySdk } from './createAccessKeySdk';\nimport { createTenantSdk } from './createTenantSdk';\n\ndeclare const BUILD_VERSION: string;\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  tenant: string,\n  mock: boolean,\n  widgetId?: string,\n) => {\n  const webSdk = createWebSdk({\n    ...config,\n    persistTokens: true,\n    baseHeaders: {\n      'x-descope-widget-type': 'access-key-management-widget',\n      'x-descope-widget-id': widgetId,\n      'x-descope-widget-version': BUILD_VERSION,\n    },\n  });\n\n  return {\n    accesskey: createAccessKeySdk({\n      httpClient: webSdk.httpClient,\n      tenant,\n      mock,\n    }),\n    tenant: createTenantSdk({ httpClient: webSdk.httpClient, tenant, mock }),\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n", "/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport {\n  activateAccessKeys,\n  createAccessKey,\n  deactivateAccessKeys,\n  deleteAccessKeys,\n  getTenantRoles,\n  searchAccessKeys,\n} from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {\n          setSelectedAccessKeysIds: (state, { payload }) => {\n            state.selectedAccessKeysIds = payload;\n          },\n          clearNotifications: (state) => {\n            state.notifications = [];\n          },\n        },\n        extraReducers: (builder) => {\n          createAccessKey.reducer(builder);\n          deleteAccessKeys.reducer(builder);\n          searchAccessKeys.reducer(builder);\n          activateAccessKeys.reducer(builder);\n          deactivateAccessKeys.reducer(builder);\n          getTenantRoles.reducer(builder);\n        },\n        asyncActions: {\n          searchAccessKeys: searchAccessKeys.action,\n          createAccessKey: createAccessKey.action,\n          activateAccessKeys: activateAccessKeys.action,\n          deactivateAccessKeys: deactivateAccessKeys.action,\n          deleteAccessKeys: deleteAccessKeys.action,\n          getTenantRoles: getTenantRoles.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'access-key-management-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res?.body;\n      }\n    };\n  },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        const template = createTemplate(\n          // await import('../../../../../../test/mocks/rootMock').then(module => module.default)\n          await this.fetchWidgetPage('root.html'),\n        );\n        await this.loadDescopeUiComponents(template);\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        await Promise.all([\n          this.#initWidgetRoot(),\n          this.actions.searchAccessKeys(),\n          this.actions.getTenantRoles(),\n        ]);\n\n        this.onWidgetRootReady();\n      }\n    },\n);\n", "import { GridDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  debounce,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { AccessKey } from '../../../api/types';\nimport { getAccessKeysList } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initAccessKeysTableMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitAccessKeysTableMixinClass extends compose(\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      accessKeysTable: GridDriver<AccessKey>;\n\n      #initAccessKeysTable() {\n        this.accessKeysTable = new GridDriver(\n          this.shadowRoot?.querySelector('[data-id=\"access-keys-table\"]'),\n          { logger: this.logger },\n        );\n        this.accessKeysTable.onSelectedItemsChange((e) => {\n          this.actions.setSelectedAccessKeysIds(\n            e.detail.value.map(({ id }) => id),\n          );\n        });\n      }\n\n      #onAccessKeysListUpdate = withMemCache(\n        (accessKeysList: ReturnType<typeof getAccessKeysList>) => {\n          this.accessKeysTable.data = accessKeysList;\n        },\n      );\n\n      #onColumnSortChange = debounce(\n        (\n          ele: HTMLElement & { path: string },\n          detail: { value: 'asc' | 'desc' | null },\n        ) => {\n          const sort = [];\n          const { value } = detail;\n          if (value) {\n            const field = ele.path;\n            sort.push({ field, desc: value === 'desc' });\n          }\n          this.actions.searchAccessKeys({ sort });\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initAccessKeysTable();\n        this.accessKeysTable.columns.forEach((column) => {\n          column.onSortDirectionChange((e: MouseEvent) => {\n            this.#onColumnSortChange(e.target, e.detail);\n          });\n        });\n\n        // because we are not waiting for the rest calls,\n        // we need to make sure the table is updated with the received access keys\n        this.#onAccessKeysListUpdate(getAccessKeysList(this.state));\n        this.subscribe(\n          this.#onAccessKeysListUpdate.bind(this),\n          getAccessKeysList,\n        );\n      }\n    },\n);\n", "import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedAccessKeys,\n  getSelectedAccessKeysDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initActivateAccessKeysModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitActivateAccessKeysModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      activateAccessKeysModal: ModalDriver;\n\n      async #initActivateAccessKeyModal() {\n        this.activateAccessKeysModal = this.createModal();\n        this.activateAccessKeysModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/activateAccessKeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('activate-access-keys-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.activateAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.activateAccessKeysModal.close());\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.activateAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n        submitButton.onClick(() => {\n          const selectedAccessKeys = getSelectedAccessKeys(this.state);\n          this.actions.activateAccessKeys(\n            selectedAccessKeys?.map((accessKey) => accessKey.id),\n          );\n          this.activateAccessKeysModal.close();\n        });\n\n        const description = new TextDriver(\n          this.activateAccessKeysModal.ele?.querySelector(\n            '[data-id=\"body-text\"]',\n          ),\n          { logger: this.logger },\n        );\n\n        this.activateAccessKeysModal.beforeOpen = () => {\n          const accessKeyDetails = getSelectedAccessKeysDetailsForDisplay(\n            this.state,\n          );\n          description.text = `Activate ${accessKeyDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initActivateAccessKeyModal();\n      }\n    },\n);\n", "import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { getCanModifyAccessKeys } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initActivateAccessKeysModalMixin } from './initActivateAccessKeysModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initActivateAccessKeysButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitActivateAccessKeysButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initActivateAccessKeysModalMixin,\n    )(superclass) {\n      activateButton: ButtonDriver;\n\n      #initActivateButton() {\n        this.activateButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"activate-access-keys\"]'),\n          { logger: this.logger },\n        );\n        this.activateButton.disable();\n        this.activateButton.onClick(() => {\n          this.activateAccessKeysModal.open();\n        });\n      }\n\n      #onIsAccessKeySelectedUpdate = withMemCache(\n        (canModify: ReturnType<typeof getCanModifyAccessKeys>) => {\n          if (canModify) {\n            this.activateButton.enable();\n          } else {\n            this.activateButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initActivateButton();\n\n        this.subscribe(\n          this.#onIsAccessKeySelectedUpdate.bind(this),\n          getCanModifyAccessKeys,\n        );\n      }\n    },\n);\n", "import { ButtonDriver, ModalDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initCreatedAccessKeyModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitCreatedAccessKeyModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      formMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      createdAccessKeyModal: ModalDriver;\n\n      async #initCreatedAccessKeyModal() {\n        this.createdAccessKeyModal = this.createModal();\n        this.createdAccessKeyModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/createdAccessKeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('created-access-key-modal.html'),\n          ),\n        );\n\n        const closeButton = new ButtonDriver(\n          () =>\n            this.createdAccessKeyModal.ele?.querySelector(\n              '[data-id=\"modal-close\"]',\n            ),\n          { logger: this.logger },\n        );\n        closeButton.onClick(() => {\n          navigator.clipboard.writeText(\n            this.getFormData(this.createdAccessKeyModal.ele)['generated-key'],\n          );\n          this.resetFormData(this.createdAccessKeyModal.ele);\n          this.createdAccessKeyModal.close();\n        });\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initCreatedAccessKeyModal();\n      }\n    },\n);\n", "import {\n  ButtonDriver,\n  ModalDriver,\n  MultiSelectDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport { getTenantRoles } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { initCreatedAccessKeyModalMixin } from './initCreatedAccessKeyModalMixin';\n\nexport const initCreateAccessKeyModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitCreateAccessKeyModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      formMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n      initCreatedAccessKeyModalMixin,\n    )(superclass) {\n      createAccessKeyModal: ModalDriver;\n\n      #rolesMultiSelect: MultiSelectDriver;\n\n      async #initCreateAccessKeyModal() {\n        this.createAccessKeyModal = this.createModal();\n        this.createAccessKeyModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/createAccessKeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('create-access-key-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.createAccessKeyModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => {\n          this.createAccessKeyModal.close();\n          this.resetFormData(this.createAccessKeyModal.ele);\n        });\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.createAccessKeyModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n        submitButton.onClick(async () => {\n          if (this.validateForm(this.createAccessKeyModal.ele)) {\n            const res: Record<string, any> = await this.actions.createAccessKey(\n              {\n                ...this.getFormData(this.createAccessKeyModal.ele),\n              },\n            );\n            this.createAccessKeyModal.close();\n\n            if (res?.payload?.cleartext) {\n              this.setFormData(this.createdAccessKeyModal.ele, {\n                'generated-key': res?.payload?.cleartext,\n              });\n              this.createdAccessKeyModal.open();\n            }\n          }\n        });\n\n        this.#rolesMultiSelect = new MultiSelectDriver(\n          () =>\n            this.createAccessKeyModal.ele?.querySelector(\n              '[data-id=\"roles-multiselect\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.#updateRolesMultiSelect();\n\n        this.createAccessKeyModal.afterClose = () => {\n          this.#initCreateAccessKeyModal();\n        };\n      }\n\n      #updateRolesMultiSelect = async () => {\n        await this.#rolesMultiSelect.setData(\n          getTenantRoles(this.state)?.map(({ name }) => ({\n            value: name,\n            label: name,\n          })),\n        );\n      };\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initCreateAccessKeyModal();\n      }\n    },\n);\n", "import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { initCreateAccessKeyModalMixin } from './initCreateAccessKeyModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initCreateAccessKeyButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitCreateAccessKeyButtonMixinClass extends compose(\n      loggerMixin,\n      initCreateAccessKeyModalMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      createButton: ButtonDriver;\n\n      #initCreateButton() {\n        this.createButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"create-access-key\"]'),\n          { logger: this.logger },\n        );\n        this.createButton.onClick(() => this.createAccessKeyModal.open());\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initCreateButton();\n      }\n    },\n);\n", "import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedAccessKeys,\n  getSelectedAccessKeysDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeactivateAccessKeysModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeactivateAccessKeysModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      deactivateAccessKeysModal: ModalDriver;\n\n      async #initDeactivateAccessKeyModal() {\n        this.deactivateAccessKeysModal = this.createModal();\n        this.deactivateAccessKeysModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/deactivateAccessKeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('deactivate-access-keys-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.deactivateAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.deactivateAccessKeysModal.close());\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.deactivateAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n        submitButton.onClick(() => {\n          const selectedAccessKeys = getSelectedAccessKeys(this.state);\n          this.actions.deactivateAccessKeys(\n            selectedAccessKeys?.map((accessKey) => accessKey.id),\n          );\n          this.deactivateAccessKeysModal.close();\n        });\n\n        const description = new TextDriver(\n          this.deactivateAccessKeysModal.ele?.querySelector(\n            '[data-id=\"body-text\"]',\n          ),\n          { logger: this.logger },\n        );\n\n        this.deactivateAccessKeysModal.beforeOpen = () => {\n          const accessKeyDetails = getSelectedAccessKeysDetailsForDisplay(\n            this.state,\n          );\n          description.text = `Deactivate ${accessKeyDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initDeactivateAccessKeyModal();\n      }\n    },\n);\n", "import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { getCanModifyAccessKeys } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initDeactivateAccessKeysModalMixin } from './initDeactivateAccessKeysModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeactivateAccessKeysButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeactivateAccessKeysButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initDeactivateAccessKeysModalMixin,\n    )(superclass) {\n      deactivateButton: ButtonDriver;\n\n      #initDeactivateButton() {\n        this.deactivateButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"deactivate-access-keys\"]'),\n          { logger: this.logger },\n        );\n        this.deactivateButton.disable();\n        this.deactivateButton.onClick(() => {\n          this.deactivateAccessKeysModal.open();\n        });\n      }\n\n      #onIsAccessKeySelectedUpdate = withMemCache(\n        (canModify: ReturnType<typeof getCanModifyAccessKeys>) => {\n          if (canModify) {\n            this.deactivateButton.enable();\n          } else {\n            this.deactivateButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initDeactivateButton();\n\n        this.subscribe(\n          this.#onIsAccessKeySelectedUpdate.bind(this),\n          getCanModifyAccessKeys,\n        );\n      }\n    },\n);\n", "import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedAccessKeys,\n  getSelectedAccessKeysDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeleteAccessKeysModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeleteAccessKeysModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      deleteAccessKeysModal: ModalDriver;\n\n      async #initDeleteAccessKeyModal() {\n        this.deleteAccessKeysModal = this.createModal();\n        this.deleteAccessKeysModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/deleteAccessKeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('delete-access-keys-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.deleteAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.deleteAccessKeysModal.close());\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.deleteAccessKeysModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n        submitButton.onClick(() => {\n          const selectedAccessKeys = getSelectedAccessKeys(this.state);\n          this.actions.deleteAccessKeys(\n            selectedAccessKeys?.map((accessKey) => accessKey.id),\n          );\n          this.deleteAccessKeysModal.close();\n        });\n\n        const description = new TextDriver(\n          this.deleteAccessKeysModal.ele?.querySelector(\n            '[data-id=\"body-text\"]',\n          ),\n          { logger: this.logger },\n        );\n\n        this.deleteAccessKeysModal.beforeOpen = () => {\n          const accessKeyDetails = getSelectedAccessKeysDetailsForDisplay(\n            this.state,\n          );\n          description.text = `Delete ${accessKeyDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initDeleteAccessKeyModal();\n      }\n    },\n);\n", "import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { getCanModifyAccessKeys } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initDeleteAccessKeysModalMixin } from './initDeleteAccessKeysModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeleteAccessKeysButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeleteAccessKeysButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initDeleteAccessKeysModalMixin,\n    )(superclass) {\n      deleteButton: ButtonDriver;\n\n      #initDeleteButton() {\n        this.deleteButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"delete-access-keys\"]'),\n          { logger: this.logger },\n        );\n        this.deleteButton.disable();\n        this.deleteButton.onClick(() => {\n          this.deleteAccessKeysModal.open();\n        });\n      }\n\n      #onIsAccessKeySelectedUpdate = withMemCache(\n        (canModify: ReturnType<typeof getCanModifyAccessKeys>) => {\n          if (canModify) {\n            this.deleteButton.enable();\n          } else {\n            this.deleteButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initDeleteButton();\n\n        this.subscribe(\n          this.#onIsAccessKeySelectedUpdate.bind(this),\n          getCanModifyAccessKeys,\n        );\n      }\n    },\n);\n", "import { TextFieldDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin, debounce } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initFilterAccessKeysInputMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitFilterAccessKeysInputMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n    )(superclass) {\n      searchInput: TextFieldDriver;\n\n      #onInput = debounce(() => {\n        this.actions.searchAccessKeys({ text: this.searchInput.value });\n      });\n\n      #initSearchInput() {\n        // currently we are doing it on client side because we assume there will not be more than 10000 access keys per tenant\n        this.searchInput = new TextFieldDriver(\n          this.shadowRoot?.querySelector('[data-id=\"search-input\"]'),\n          { logger: this.logger },\n        );\n        this.searchInput.onInput(this.#onInput);\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initSearchInput();\n      }\n    },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  initLifecycleMixin,\n  loggerMixin,\n  notificationsMixin,\n} from '@descope/sdk-mixins';\nimport checkmark from '../../../../assets/checkmark.svg';\nimport close from '../../../../assets/close.svg';\nimport warning from '../../../../assets/warning.svg';\nimport { getNotifications } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\ntype Notifications = ReturnType<typeof getNotifications>;\ntype Notification = Notifications[0];\n\nconst SUCCESS_NOTIFICATION_DURATION = 3000;\nconst ERROR_NOTIFICATION_DURATION = 0;\n\nconst notificationTypesIcons = {\n  success: checkmark(),\n  error: warning(),\n};\n\nexport const initNotificationsMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitNotificationsMixinClass extends compose(\n      loggerMixin,\n      stateManagementMixin,\n      notificationsMixin,\n      initLifecycleMixin,\n    )(superclass) {\n      // eslint-disable-next-line class-methods-use-this\n      #createNotificationContent({ type, msg }: Notification) {\n        const icon = notificationTypesIcons[type];\n\n        const closeIcon = Object.assign(close(), { slot: 'close' });\n\n        return `${icon?.outerHTML || ''}${msg}${closeIcon.outerHTML}`;\n      }\n\n      #createNotification(type: Notification['type']) {\n        return this.createNotification({\n          mode: type,\n          duration:\n            type === 'error'\n              ? ERROR_NOTIFICATION_DURATION\n              : SUCCESS_NOTIFICATION_DURATION,\n          position: 'bottom-start',\n          size: 'sm',\n        });\n      }\n\n      #onNotificationsUpdate = withMemCache((notifications: Notifications) => {\n        if (notifications.length) {\n          notifications.forEach(({ type, msg }) => {\n            const notification = this.#createNotification(type);\n\n            notification.setContent(\n              this.#createNotificationContent({ type, msg }),\n            );\n\n            notification.show();\n          });\n\n          // when there is a selection update from the table we get a double notification\n          // this is why we are wrapping the clearNotifications action with timeout;\n          setTimeout(() => this.actions.clearNotifications());\n        }\n      });\n\n      async init() {\n        await super.init?.();\n\n        this.subscribe(\n          this.#onNotificationsUpdate.bind(this),\n          getNotifications,\n        );\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { initAccessKeysTableMixin } from './initComponentsMixins/initAccessKeysTableMixin';\nimport { initActivateAccessKeysButtonMixin } from './initComponentsMixins/initActivateAccessKeysButtonMixin';\nimport { initCreateAccessKeyButtonMixin } from './initComponentsMixins/initCreateAccessKeyButtonMixin';\nimport { initDeactivateAccessKeysButtonMixin } from './initComponentsMixins/initDeactivateAccessKeysButtonMixin';\nimport { initDeleteAccessKeysButtonMixin } from './initComponentsMixins/initDeleteAccessKeysButtonMixin';\nimport { initFilterAccessKeysInputMixin } from './initComponentsMixins/initFilterAccessKeysInputMixin';\nimport { initNotificationsMixin } from './initComponentsMixins/initNotificationsMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    // @ts-ignore\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      initAccessKeysTableMixin,\n      initCreateAccessKeyButtonMixin,\n      initDeleteAccessKeysButtonMixin,\n      initFilterAccessKeysInputMixin,\n      initActivateAccessKeysButtonMixin,\n      initDeactivateAccessKeysButtonMixin,\n      initNotificationsMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n", "import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {};\n\nexport const AccessKeyManagementWidget = compose(rootMixin)(HTMLElement);\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { AccessKeyManagementWidget } from './widget';\n\ndeclare global {\n  interface HTMLElement {\n    attributeChangedCallback(\n      attrName: string,\n      oldValue: string | null,\n      newValue: string | null,\n    ): void;\n    connectedCallback(): void;\n  }\n}\n\nexport default AccessKeyManagementWidget;\n\ncustomElements.define(\n  'descope-access-key-management-widget',\n  AccessKeyManagementWidget,\n);\n"],
  "mappings": "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",
  "names": ["getSelectedAccessKeysIds", "state", "selectedAccessKeysIds", "getNotifications", "notifications", "getAccessKeysList", "createSelector", "accessKeysList", "data", "accessKeys", "map", "accessKey", "Object", "assign", "expireTimeFormatted", "expireTime", "Date", "e", "toLocaleString", "createdTimeFormatted", "createdTime", "status", "getSelectedAccessKeys", "selected", "filter", "includes", "id", "getIsAccessKeysSelected", "length", "getIsAccessKeysEditable", "selectedAccessKeys", "every", "editable", "getCanModifyAccessKeys", "isEditable", "isSelected", "getSelectedAccessKeysDetailsForDisplay", "name", "buildAsyncReducer", "action", "args", "builder", "addCase", "pending", "forEach", "onPending", "fulfilled", "onFulfilled", "rejected", "onRejected", "withRequestStatus", "getStateSection", "loading", "error", "withNotifications", "getErrorMsg", "getSuccessMsg", "push", "type", "msg", "createAsyncThunk", "arg", "extra", "api", "accesskey", "create", "reducer", "unshift", "payload", "key", "createAccessKey", "_a", "message", "deleteBatch", "meta", "deleteAccessKey", "pluralize", "deleteAccessKeys", "getState", "searchParams", "search", "searchAccessKeys", "activate", "activateAccessKey", "activateAccessKeys", "deactivate", "deactivateAccessKey", "deactivateAccessKeys", "_", "tenant", "getTenantRoles", "tenantRoles", "roles", "initialState", "text", "sort", "apiPaths", "withErrorHandler", "res", "__awaiter", "json", "JSON", "parse", "ok", "descopeErrorMsg", "errorDescription", "errorMessage", "Error", "statusText", "Promise", "resolve", "args_1", "keys", "timeMock", "getTime", "timeMockFormatted", "i", "createdBy", "roleNames", "permittedIps", "clientId", "boundUserId", "s", "a", "b", "desc", "_b", "field", "localeCompare", "toLowerCase", "expireTime_1", "userId", "Math", "random", "toString", "substring", "cleartext", "tenants", "description", "permissionNames", "tenantId", "createAccessKeySdk", "httpClient", "mock", "page", "limit", "post", "queryParams", "ids", "expiration", "expirationTime", "setDate", "getDate", "floor", "n", "createTenantSdk", "get", "apiMixin", "createSingletonMixin", "superclass", "BaseClass", "compose", "projectIdMixin", "observeAttributesMixin", "loggerMixin", "baseUrlMixin", "cookieConfigMixin", "createValidateAttributesMixin", "missingAttrValidator", "constructor", "_ApiMixinClass_api", "set", "this", "getAttribute", "__classPrivateFieldGet", "_ApiMixinClass_instances", "_ApiMixinClass_createSdk", "call", "init", "_super", "observeAttributes", "logger", "debug", "__classPrivateFieldSet", "config", "widgetId", "webSdk", "createWebSdk", "persistTokens", "baseHeaders", "projectId", "baseUrl", "refreshCookieName", "stateManagementMixin", "createStateManagementMixin", "reducers", "setSelectedAccessKeysIds", "clearNotifications", "extraReducers", "asyncActions", "initLifecycleMixin", "super", "subscribe", "fetchWidgetPagesMixin", "staticResourcesMixin", "filename", "fetchStaticResource", "body", "initWidgetRootMixin", "_InitWidgetRootMixinClass_instances", "_InitWidgetRootMixinClass_initWidgetRoot", "descopeUiMixin", "initElementMixin", "onWidgetRootReady", "all", "actions", "template", "createTemplate", "fetchWidgetPage", "loadDescopeUiComponents", "contentRootElement", "append", "content", "cloneNode", "initAccessKeysTableMixin", "_InitAccessKeysTableMixinClass_instances", "_InitAccessKeysTableMixinClass_initAccessKeysTable", "_InitAccessKeysTableMixinClass_onAccessKeysListUpdate", "_InitAccessKeysTableMixinClass_onColumnSortChange", "withMemCache", "accessKeysTable", "debounce", "ele", "detail", "value", "path", "columns", "column", "onSortDirectionChange", "target", "bind", "d", "r", "GridDriver", "shadowRoot", "querySelector", "onSelectedItemsChange", "initActivateAccessKeysModalMixin", "_InitActivateAccessKeysModalMixinClass_instances", "_InitActivateAccessKeysModalMixinClass_initActivateAccessKeyModal", "modalMixin", "activateAccessKeysModal", "createModal", "setContent", "cancelButton", "ButtonDriver", "onClick", "close", "submitButton", "TextDriver", "beforeOpen", "accessKeyDetails", "initActivateAccessKeysButtonMixin", "_InitActivateAccessKeysButtonMixinClass_instances", "_InitActivateAccessKeysButtonMixinClass_initActivateButton", "_InitActivateAccessKeysButtonMixinClass_onIsAccessKeySelectedUpdate", "canModify", "activateButton", "enable", "disable", "o", "open", "initCreatedAccessKeyModalMixin", "_InitCreatedAccessKeyModalMixinClass_instances", "_InitCreatedAccessKeyModalMixinClass_initCreatedAccessKeyModal", "formMixin", "createdAccessKeyModal", "navigator", "clipboard", "writeText", "getFormData", "resetFormData", "initCreateAccessKeyModalMixin", "_InitCreateAccessKeyModalMixinClass_instances", "_InitCreateAccessKeyModalMixinClass_rolesMultiSelect", "_InitCreateAccessKeyModalMixinClass_initCreateAccessKeyModal", "_InitCreateAccessKeyModalMixinClass_updateRolesMultiSelect", "setData", "label", "createAccessKeyModal", "t", "validateForm", "setFormData", "_c", "MultiSelectDriver", "afterClose", "initCreateAccessKeyButtonMixin", "_InitCreateAccessKeyButtonMixinClass_instances", "_InitCreateAccessKeyButtonMixinClass_initCreateButton", "createButton", "initDeactivateAccessKeysModalMixin", "_InitDeactivateAccessKeysModalMixinClass_instances", "_InitDeactivateAccessKeysModalMixinClass_initDeactivateAccessKeyModal", "deactivateAccessKeysModal", "initDeactivateAccessKeysButtonMixin", "_InitDeactivateAccessKeysButtonMixinClass_instances", "_InitDeactivateAccessKeysButtonMixinClass_initDeactivateButton", "_InitDeactivateAccessKeysButtonMixinClass_onIsAccessKeySelectedUpdate", "deactivateButton", "initDeleteAccessKeysModalMixin", "_InitDeleteAccessKeysModalMixinClass_instances", "_InitDeleteAccessKeysModalMixinClass_initDeleteAccessKeyModal", "deleteAccessKeysModal", "initDeleteAccessKeysButtonMixin", "_InitDeleteAccessKeysButtonMixinClass_instances", "_InitDeleteAccessKeysButtonMixinClass_initDeleteButton", "_InitDeleteAccessKeysButtonMixinClass_onIsAccessKeySelectedUpdate", "deleteButton", "initFilterAccessKeysInputMixin", "_InitFilterAccessKeysInputMixinClass_instances", "_InitFilterAccessKeysInputMixinClass_onInput", "_InitFilterAccessKeysInputMixinClass_initSearchInput", "searchInput", "TextFieldDriver", "onInput", "notificationTypesIcons", "success", "initNotificationsMixin", "_InitNotificationsMixinClass_instances", "_InitNotificationsMixinClass_createNotificationContent", "_InitNotificationsMixinClass_createNotification", "_InitNotificationsMixinClass_onNotificationsUpdate", "notificationsMixin", "notification", "show", "setTimeout", "icon", "closeIcon", "slot", "outerHTML", "createNotification", "mode", "duration", "position", "size", "initMixin", "debuggerMixin", "themeMixin", "AccessKeyManagementWidget", "HTMLElement", "customElements", "define"]
}
