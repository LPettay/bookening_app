{
  "version": 3,
  "sources": ["../../@descope/web-component/src/lib/constants/general.ts", "../../@descope/web-component/src/lib/constants/content.ts", "../../@descope/web-component/src/lib/constants/uiComponents.ts", "../../@descope/web-component/src/lib/types.ts", "../../@descope/web-component/src/lib/constants/index.ts", "../../@descope/web-component/src/lib/constants/customScreens.ts", "../../@descope/web-component/src/lib/helpers/helpers.ts", "../../@descope/web-component/src/lib/helpers/state.ts", "../../@descope/escape-markdown/src/escapeMarkdown.ts", "../../@descope/web-component/src/lib/helpers/webauthn.ts"],
  "sourcesContent": ["/* eslint-disable import/prefer-default-export */\nexport const IS_LOCAL_STORAGE = typeof localStorage !== 'undefined';\n\nexport const FETCH_EXCEPTION_ERROR_CODE = 'J151000';\nexport const FETCH_ERROR_RESPONSE_ERROR_CODE = 'J151001';\nexport const FLOW_TIMED_OUT_ERROR_CODE = 'E103205';\nexport const FLOW_REQUESTED_IS_IN_OLD_VERSION_ERROR_CODE = 'E102004';\nexport const POLLING_STATUS_NOT_FOUND_ERROR_CODE = 'E103202';\n", "import { IS_LOCAL_STORAGE } from './general';\n\nconst BASE_CONTENT_URL_KEY = 'base.content.url';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const OVERRIDE_CONTENT_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(BASE_CONTENT_URL_KEY)) || '';\nexport const BASE_CONTENT_URL = 'https://static.descope.com/pages';\n\nexport const ASSETS_FOLDER = 'v2-beta';\nexport const PREV_VER_ASSETS_FOLDER = 'v2-alpha';\n\nexport const CONFIG_FILENAME = 'config.json';\n", "import { IS_LOCAL_STORAGE } from './general';\n\nexport const UI_COMPONENTS_URL_KEY = 'base.ui.components.url';\n\nexport const UI_COMPONENTS_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(UI_COMPONENTS_URL_KEY)) ||\n  'https://descopecdn.com/npm/@descope/web-components-ui@<version>/dist/umd/index.js';\n\nexport const UI_COMPONENTS_FALLBACK_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(UI_COMPONENTS_URL_KEY)) ||\n  'https://static.descope.com/npm/@descope/web-components-ui@<version>/dist/umd/index.js';\n\nexport const UI_COMPONENTS_URL_VERSION_PLACEHOLDER = '<version>';\n", "/* istanbul ignore file */\n\nimport createSdk from '@descope/web-js-sdk';\n\nexport type SdkConfig = Parameters<typeof createSdk>[0];\nexport type Sdk = ReturnType<typeof createSdk>;\n\nexport type SdkFlowNext = Sdk['flow']['next'];\n\nexport type ComponentsDynamicAttrs = {\n  attributes: Record<string, any>;\n};\n\nexport type ComponentsConfig = Record<string, any> & {\n  componentsDynamicAttrs?: Record<string, ComponentsDynamicAttrs>;\n};\nexport type CssVars = Record<string, any>;\n\ntype KeepArgsByIndex<F, Indices extends readonly number[]> = F extends (\n  ...args: infer A\n) => infer R\n  ? (...args: PickArgsByIndex<A, Indices>) => R\n  : never;\n\ntype PickArgsByIndex<\n  All extends readonly any[],\n  Indices extends readonly number[],\n> = {\n  [K in keyof Indices]: Indices[K] extends keyof All ? All[Indices[K]] : never;\n};\n\ntype Project = {\n  name: string;\n};\n\nexport enum Direction {\n  backward = 'backward',\n  forward = 'forward',\n}\n\nexport interface LastAuthState {\n  loginId?: string;\n  name?: string;\n}\n\nexport interface ScreenState {\n  errorText?: string;\n  errorType?: string;\n  componentsConfig?: ComponentsConfig;\n  cssVars?: CssVars;\n  form?: Record<string, string>;\n  inputs?: Record<string, string>; // Backward compatibility\n  lastAuth?: LastAuthState;\n  project?: Project;\n  totp?: { image?: string; provisionUrl?: string };\n  notp?: { image?: string; redirectUrl?: string };\n  selfProvisionDomains?: unknown;\n  user?: unknown;\n  sso?: unknown;\n  dynamicSelects?: unknown;\n  keysInUse?: unknown;\n  genericForm?: unknown;\n  linkId?: unknown;\n  sentTo?: unknown;\n  clientScripts?: ClientScript[];\n}\n\nexport type SSOQueryParams = {\n  oidcIdpStateId?: string;\n  samlIdpStateId?: string;\n  samlIdpUsername?: string;\n  descopeIdpInitiated?: boolean;\n  ssoAppId?: string;\n  thirdPartyAppId: string;\n  thirdPartyAppStateId?: string;\n  applicationScopes?: string;\n} & OIDCOptions;\n\nexport type OIDCOptions = {\n  oidcLoginHint?: string;\n  oidcPrompt?: string;\n  oidcErrorRedirectUri?: string;\n  oidcResource?: string;\n};\n\nexport type Locale = {\n  locale: string;\n  fallback: string;\n};\n\nexport type FlowState = {\n  flowId: string;\n  projectId: string;\n  baseUrl: string;\n  tenant: string;\n  stepId: string;\n  stepName: string;\n  executionId: string;\n  action: string;\n  redirectTo: string;\n  redirectIsPopup: boolean;\n  openInNewTabUrl?: string;\n  redirectUrl: string;\n  screenId: string;\n  screenState: ScreenState;\n  token: string;\n  code: string;\n  isPopup: boolean;\n  exchangeError: string;\n  webauthnTransactionId: string;\n  webauthnOptions: string;\n  redirectAuthCodeChallenge: string;\n  redirectAuthCallbackUrl: string;\n  redirectAuthBackupCallbackUri: string;\n  redirectAuthInitiator: string;\n  deferredRedirect: boolean;\n  locale: string;\n  samlIdpResponseUrl: string;\n  samlIdpResponseSamlResponse: string;\n  samlIdpResponseRelayState: string;\n  nativeResponseType: string;\n  nativePayload: Record<string, any>;\n  reqTimestamp: number;\n} & SSOQueryParams;\n\nexport type StepState = {\n  screenState: ScreenState;\n  screenId: string;\n  stepName: string;\n  htmlFilename: string;\n  htmlLocaleFilename: string;\n  next: NextFn;\n  direction: Direction | undefined;\n  samlIdpUsername: string;\n  action?: string;\n} & OIDCOptions;\n\nexport type CustomScreenState = Omit<\n  ScreenState,\n  'cssVars' | 'componentsConfig' | 'inputs'\n> & {\n  error?: {\n    text: ScreenState['errorText'];\n    type: ScreenState['errorType'];\n  };\n  action?: string;\n  inboundAppApproveScopes?: {\n    desc: string;\n    id: string;\n    required: boolean;\n  }[];\n};\n\nexport type DebugState = {\n  isDebug: boolean;\n};\n\nexport interface ScriptElement extends HTMLDivElement {\n  moduleRes?: ScriptModule;\n}\n\nexport type ScriptModule = {\n  stop: () => void;\n  start: () => void;\n  /**\n   * Refreshes any tokens or state that might be needed before form submission\n   * Currently implemented for reCAPTCHA to ensure we have a fresh token\n   */\n  refresh?: () => Promise<void>;\n};\n\nexport type ClientScript = {\n  id: string;\n  initArgs: Record<string, any>;\n  resultKey?: string;\n};\n\nexport type NextFn = KeepArgsByIndex<SdkFlowNext, [2, 5]>;\nexport type NextFnReturnPromiseValue = Awaited<ReturnType<NextFn>>;\n\nexport type DebuggerMessage = {\n  title: string;\n  description?: string;\n};\n\nexport type FlowStateUpdateFn = (state: FlowState) => void;\n\ntype Operator =\n  | 'equal'\n  | 'not-equal'\n  | 'contains'\n  | 'greater-than'\n  | 'greater-than-or-equal'\n  | 'less-than'\n  | 'less-than-or-equal'\n  | 'empty'\n  | 'not-empty'\n  | 'is-true'\n  | 'is-false'\n  | 'in'\n  | 'not-in'\n  | 'in-range'\n  | 'not-in-range'\n  | 'devised-by';\n\nexport interface ClientConditionResult {\n  screenId: string;\n  screenName: string;\n  clientScripts?: ClientScript[];\n  componentsConfig?: ComponentsConfig;\n  interactionId: string;\n}\n\nexport interface ClientCondition {\n  operator: Operator;\n  key: string;\n  predicate?: string | number;\n  met: ClientConditionResult;\n  unmet?: ClientConditionResult;\n}\n\nexport type AutoFocusOptions = true | false | 'skipFirstScreen';\n\nexport type ThemeOptions = 'light' | 'dark' | 'os';\n\nexport type Key =\n  | 'lastAuth.loginId'\n  | 'idpInitiated'\n  | 'externalToken'\n  | 'abTestingKey';\n\ntype CheckFunction = (ctx: Context, predicate?: string | number) => boolean;\n\nexport type ConditionsMap = {\n  [key in Key]: {\n    [operator in Operator]?: CheckFunction;\n  };\n};\n\nexport interface Context {\n  loginId?: string;\n  code?: string;\n  token?: string;\n  abTestingKey?: number;\n  lastAuth?: LastAuthState;\n}\n\nexport type DescopeUI = Record<string, () => Promise<void>> & {\n  componentsThemeManager: Record<string, any>;\n};\n\ntype Font = {\n  family: string[];\n  label: string;\n  url?: string;\n};\n\ntype ThemeTemplate = {\n  fonts: {\n    font1: Font;\n    font2: Font;\n  };\n};\n\nexport type FlowConfig = {\n  startScreenId?: string;\n  startScreenName?: string;\n  version: number;\n  targetLocales?: string[];\n  conditions?: ClientCondition[];\n  condition?: ClientCondition;\n  fingerprintEnabled?: boolean;\n  fingerprintKey?: string;\n  sdkScripts?: [\n    {\n      id: string;\n      initArgs: Record<string, any>;\n      resultKey?: string;\n    },\n  ];\n  clientScripts?: ClientScript[];\n  componentsConfig?: ComponentsConfig;\n};\n\nexport interface ProjectConfiguration {\n  componentsVersion: string;\n  cssTemplate: {\n    dark: ThemeTemplate;\n    light: ThemeTemplate;\n  };\n  flows: {\n    [key: string]: FlowConfig; // dynamic key names for flows\n  };\n}\n\nexport type FlowStatus = 'loading' | 'error' | 'success' | 'ready' | 'initial';\n", "export * from './general';\nexport * from './content';\nexport * from './uiComponents';\n\nexport const URL_RUN_IDS_PARAM_NAME = 'descope-login-flow';\nexport const URL_TOKEN_PARAM_NAME = 't';\nexport const URL_CODE_PARAM_NAME = 'code';\nexport const URL_REDIRECT_MODE_PARAM_NAME = 'redirect_mode';\nexport const URL_ERR_PARAM_NAME = 'err';\nexport const URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME = 'ra-challenge';\nexport const URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME = 'ra-callback';\nexport const URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME =\n  'ra-backup-callback';\nexport const URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME = 'ra-initiator';\nexport const DESCOPE_ATTRIBUTE_PREFIX = 'data-descope-';\nexport const DESCOPE_ATTRIBUTE_EXCLUDE_FIELD = 'data-exclude-field';\nexport const DESCOPE_ATTRIBUTE_EXCLUDE_NEXT_BUTTON = 'data-exclude-next';\nexport const DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY = 'dls_last_auth';\n\n// SSO query params\nexport const OIDC_IDP_STATE_ID_PARAM_NAME = 'state_id';\nexport const SAML_IDP_STATE_ID_PARAM_NAME = 'saml_idp_state_id';\nexport const SAML_IDP_USERNAME_PARAM_NAME = 'saml_idp_username';\nexport const DESCOPE_IDP_INITIATED_PARAM_NAME = 'descope_idp_initiated';\nexport const SSO_APP_ID_PARAM_NAME = 'sso_app_id';\nexport const THIRD_PARTY_APP_ID_PARAM_NAME = 'third_party_app_id';\nexport const THIRD_PARTY_APP_STATE_ID_PARAM_NAME = 'third_party_app_state_id';\nexport const OIDC_LOGIN_HINT_PARAM_NAME = 'oidc_login_hint';\nexport const OIDC_PROMPT_PARAM_NAME = 'oidc_prompt';\nexport const OIDC_RESOURCE_PARAM_NAME = 'oidc_resource';\nexport const OIDC_ERROR_REDIRECT_URI_PARAM_NAME = 'oidc_error_redirect_uri';\nexport const APPLICATION_SCOPES_PARAM_NAME = 'application_scopes';\n\nexport const ELEMENT_TYPE_ATTRIBUTE = 'data-type';\n\nexport const SDK_SCRIPT_RESULTS_KEY = 'sdkScriptsResults';\n\nexport const RESPONSE_ACTIONS = {\n  redirect: 'redirect',\n  poll: 'poll',\n  webauthnCreate: 'webauthnCreate',\n  webauthnGet: 'webauthnGet',\n  nativeBridge: 'nativeBridge',\n  loadForm: 'loadForm',\n};\n\nexport const CUSTOM_INTERACTIONS = {\n  submit: 'submit',\n  polling: 'polling',\n};\n\nexport const HAS_DYNAMIC_VALUES_ATTR_NAME = 'data-has-dynamic-attr-values';\n\nexport const ELEMENTS_TO_IGNORE_ENTER_KEY_ON = [\n  'descope-multi-select-combo-box',\n  'descope-text-area',\n];\n\nexport const SDK_SCRIPTS_LOAD_TIMEOUT = 5000;\n", "export const EXCLUDED_STATE_KEYS = [\n  'cssVars',\n  'componentsConfig',\n  'inputs',\n  'errorText',\n  'errorType',\n  'clientScripts',\n];\n", "import {\n  ASSETS_FOLDER,\n  BASE_CONTENT_URL,\n  DESCOPE_ATTRIBUTE_PREFIX,\n  URL_CODE_PARAM_NAME,\n  URL_ERR_PARAM_NAME,\n  URL_RUN_IDS_PARAM_NAME,\n  URL_TOKEN_PARAM_NAME,\n  URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  OIDC_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_USERNAME_PARAM_NAME,\n  SSO_APP_ID_PARAM_NAME,\n  OIDC_LOGIN_HINT_PARAM_NAME,\n  DESCOPE_IDP_INITIATED_PARAM_NAME,\n  OVERRIDE_CONTENT_URL,\n  OIDC_PROMPT_PARAM_NAME,\n  OIDC_RESOURCE_PARAM_NAME,\n  OIDC_ERROR_REDIRECT_URI_PARAM_NAME,\n  THIRD_PARTY_APP_ID_PARAM_NAME,\n  THIRD_PARTY_APP_STATE_ID_PARAM_NAME,\n  APPLICATION_SCOPES_PARAM_NAME,\n  SDK_SCRIPT_RESULTS_KEY,\n  URL_REDIRECT_MODE_PARAM_NAME,\n} from '../constants';\nimport { EXCLUDED_STATE_KEYS } from '../constants/customScreens';\nimport {\n  AutoFocusOptions,\n  CustomScreenState,\n  Direction,\n  Locale,\n  SSOQueryParams,\n  StepState,\n} from '../types';\n\nconst MD_COMPONENTS = ['descope-enriched-text'];\n\nfunction getUrlParam(paramName: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(paramName);\n}\n\nfunction getFlowUrlParam() {\n  return getUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nfunction setFlowUrlParam(id: string) {\n  if (window.history.pushState && id !== getFlowUrlParam()) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.set(URL_RUN_IDS_PARAM_NAME, id);\n    newUrl.search = search.toString();\n    window.history.pushState({}, '', newUrl.toString());\n  }\n}\n\nfunction resetUrlParam(paramName: string) {\n  if (window.history.replaceState && getUrlParam(paramName)) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.delete(paramName);\n    newUrl.search = search.toString();\n    window.history.replaceState({}, '', newUrl.toString());\n  }\n}\n\nconst getFlowIdFromExecId = (executionId: string) => {\n  const regex = /(.*)\\|#\\|.*/;\n  return regex.exec(executionId)?.[1] || '';\n};\n\nexport async function fetchContent<T extends 'text' | 'json'>(\n  url: string,\n  returnType: T,\n): Promise<{\n  body: T extends 'json' ? Record<string, any> : string;\n  headers: Record<string, string>;\n}> {\n  const res = await fetch(url, { cache: 'default' });\n  if (!res.ok) {\n    throw Error(`Error fetching URL ${url} [${res.status}]`);\n  }\n\n  return {\n    body: await res[returnType || 'text'](),\n    headers: Object.fromEntries(res.headers.entries()),\n  };\n}\n\nconst pathJoin = (...paths: string[]) => paths.join('/').replace(/\\/+/g, '/'); // preventing duplicate separators\n\nexport function getContentUrl({\n  projectId,\n  filename,\n  assetsFolder = ASSETS_FOLDER,\n  baseUrl,\n}: {\n  projectId: string;\n  filename: string;\n  assetsFolder?: string;\n  baseUrl?: string;\n}) {\n  const url = new URL(OVERRIDE_CONTENT_URL || baseUrl || BASE_CONTENT_URL);\n  url.pathname = pathJoin(url.pathname, projectId, assetsFolder, filename);\n\n  return url.toString();\n}\n\nexport function getAnimationDirection(\n  currentIdxStr: string,\n  prevIdxStr: string,\n) {\n  if (!prevIdxStr) return undefined;\n\n  const currentIdx = +currentIdxStr;\n  const prevIdx = +prevIdxStr;\n\n  if (Number.isNaN(currentIdx) || Number.isNaN(prevIdx)) return undefined;\n  if (currentIdx > prevIdx) return Direction.forward;\n  if (currentIdx < prevIdx) return Direction.backward;\n  return undefined;\n}\n\nexport const getRunIdsFromUrl = (flowId: string) => {\n  let [executionId = '', stepId = ''] = (getFlowUrlParam() || '').split('_');\n  const executionFlowId = getFlowIdFromExecId(executionId);\n\n  // if the flow id does not match, this execution id is not for this flow\n  if (!flowId || (executionFlowId && executionFlowId !== flowId)) {\n    executionId = '';\n    stepId = '';\n  }\n\n  return { executionId, stepId, executionFlowId };\n};\n\nexport const setRunIdsOnUrl = (executionId: string, stepId: string) => {\n  setFlowUrlParam([executionId, stepId].join('_'));\n};\n\nexport function isChromium() {\n  return (\n    /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)\n  );\n}\n\nexport function clearRunIdsFromUrl() {\n  resetUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nexport function getTokenFromUrl() {\n  return getUrlParam(URL_TOKEN_PARAM_NAME) || undefined;\n}\n\nexport function clearTokenFromUrl() {\n  resetUrlParam(URL_TOKEN_PARAM_NAME);\n}\n\nexport function getCodeFromUrl() {\n  return getUrlParam(URL_CODE_PARAM_NAME) || undefined;\n}\n\nexport function getIsPopupFromUrl() {\n  return getUrlParam(URL_REDIRECT_MODE_PARAM_NAME) === 'popup';\n}\n\nexport function getExchangeErrorFromUrl() {\n  return getUrlParam(URL_ERR_PARAM_NAME) || undefined;\n}\n\nexport function clearCodeFromUrl() {\n  resetUrlParam(URL_CODE_PARAM_NAME);\n}\n\nexport function clearIsPopupFromUrl() {\n  resetUrlParam(URL_REDIRECT_MODE_PARAM_NAME);\n}\n\nexport function clearExchangeErrorFromUrl() {\n  resetUrlParam(URL_ERR_PARAM_NAME);\n}\n\nexport function getRedirectAuthFromUrl() {\n  const redirectAuthCodeChallenge = getUrlParam(\n    URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  );\n  const redirectAuthCallbackUrl = getUrlParam(\n    URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthBackupCallbackUri = getUrlParam(\n    URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthInitiator = getUrlParam(\n    URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  );\n  return {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  };\n}\n\nexport function getOIDCIDPParamFromUrl() {\n  return getUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearOIDCIDPParamFromUrl() {\n  resetUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPParamFromUrl() {\n  return getUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearSAMLIDPParamFromUrl() {\n  resetUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPUsernameParamFromUrl() {\n  return getUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function clearSAMLIDPUsernameParamFromUrl() {\n  resetUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function getDescopeIDPInitiatedParamFromUrl() {\n  return getUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function clearDescopeIDPInitiatedParamFromUrl() {\n  resetUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function getSSOAppIdParamFromUrl() {\n  return getUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function clearSSOAppIdParamFromUrl() {\n  resetUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppStateIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppStateIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function getApplicationScopesParamFromUrl() {\n  return getUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function clearApplicationScopesParamFromUrl() {\n  resetUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function getOIDCLoginHintParamFromUrl() {\n  return getUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function clearOIDCLoginHintParamFromUrl() {\n  resetUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function getOIDCPromptParamFromUrl() {\n  return getUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function clearOIDCPromptParamFromUrl() {\n  resetUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function getOIDCErrorRedirectUriParamFromUrl() {\n  return getUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function clearOIDCErrorRedirectUriParamFromUrl() {\n  resetUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function getOIDCResourceParamFromUrl() {\n  return getUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport function clearOIDCResourceParamFromUrl() {\n  resetUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport const camelCase = (s: string) =>\n  s.replace(/-./g, (x) => x[1].toUpperCase());\n\nexport const createIsChanged =\n  <T extends Record<string, any>>(state: T, prevState: T) =>\n  (attrName: keyof T) =>\n    state[attrName] !== prevState[attrName];\n\nexport const getElementDescopeAttributes = (ele: HTMLElement) =>\n  Array.from(ele?.attributes || []).reduce((acc, attr) => {\n    const descopeAttrName = new RegExp(\n      `^${DESCOPE_ATTRIBUTE_PREFIX}(\\\\S+)$`,\n    ).exec(attr.name)?.[1];\n\n    return !descopeAttrName\n      ? acc\n      : Object.assign(acc, { [descopeAttrName]: attr.value });\n  }, {});\n\nexport const getFlowConfig = (config: Record<string, any>, flowId: string) =>\n  config?.flows?.[flowId] || {};\n\nexport const handleUrlParams = (\n  flowId: string,\n  logger: { debug: (...data: any[]) => void },\n) => {\n  const { executionId, stepId, executionFlowId } = getRunIdsFromUrl(flowId);\n\n  // if the flow id does not match, we do not want to read & remove any query params\n  // because it's probably belongs to another flow\n  if (executionFlowId && flowId !== executionFlowId) {\n    logger.debug(\n      'Flow id does not match the execution flow id, skipping url params handling',\n    );\n    return { ssoQueryParams: {} };\n  }\n\n  if (executionId || stepId) {\n    clearRunIdsFromUrl();\n  }\n\n  const token = getTokenFromUrl();\n  if (token) {\n    clearTokenFromUrl();\n  }\n\n  const code = getCodeFromUrl();\n  if (code) {\n    clearCodeFromUrl();\n  }\n\n  // this is used for oauth when we want to open the provider login page in a new tab\n  const isPopup = getIsPopupFromUrl();\n  if (isPopup) {\n    clearIsPopupFromUrl();\n  }\n\n  const exchangeError = getExchangeErrorFromUrl();\n  if (exchangeError) {\n    clearExchangeErrorFromUrl();\n  }\n\n  // these query params are retained to allow the flow to be refreshed\n  // without losing the redirect auth state\n  const {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  } = getRedirectAuthFromUrl();\n\n  const oidcIdpStateId = getOIDCIDPParamFromUrl();\n  if (oidcIdpStateId) {\n    clearOIDCIDPParamFromUrl();\n  }\n\n  const samlIdpStateId = getSAMLIDPParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPParamFromUrl();\n  }\n\n  const samlIdpUsername = getSAMLIDPUsernameParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPUsernameParamFromUrl();\n  }\n\n  const descopeIdpInitiated = getDescopeIDPInitiatedParamFromUrl();\n  if (descopeIdpInitiated) {\n    clearDescopeIDPInitiatedParamFromUrl();\n  }\n\n  const ssoAppId = getSSOAppIdParamFromUrl();\n  if (ssoAppId) {\n    clearSSOAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppId = getThirdPartyAppIdParamFromUrl();\n  if (thirdPartyAppId) {\n    clearThirdPartyAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppStateId = getThirdPartyAppStateIdParamFromUrl();\n  if (thirdPartyAppStateId) {\n    clearThirdPartyAppStateIdParamFromUrl();\n  }\n\n  const applicationScopes = getApplicationScopesParamFromUrl();\n  if (applicationScopes) {\n    clearApplicationScopesParamFromUrl();\n  }\n\n  const oidcLoginHint = getOIDCLoginHintParamFromUrl();\n  if (oidcLoginHint) {\n    clearOIDCLoginHintParamFromUrl();\n  }\n\n  const oidcPrompt = getOIDCPromptParamFromUrl();\n  if (oidcPrompt) {\n    clearOIDCPromptParamFromUrl();\n  }\n\n  const oidcErrorRedirectUri = getOIDCErrorRedirectUriParamFromUrl();\n  if (oidcErrorRedirectUri) {\n    clearOIDCErrorRedirectUriParamFromUrl();\n  }\n\n  const oidcResource = getOIDCResourceParamFromUrl();\n  if (oidcResource) {\n    clearOIDCResourceParamFromUrl();\n  }\n\n  const idpInitiatedVal = descopeIdpInitiated === 'true';\n\n  return {\n    executionId,\n    stepId,\n    token,\n    code,\n    isPopup,\n    exchangeError,\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n    ssoQueryParams: {\n      oidcIdpStateId,\n      samlIdpStateId,\n      samlIdpUsername,\n      descopeIdpInitiated: idpInitiatedVal,\n      ssoAppId,\n      oidcLoginHint,\n      oidcPrompt,\n      oidcErrorRedirectUri,\n      oidcResource,\n      thirdPartyAppId,\n      thirdPartyAppStateId,\n      applicationScopes,\n    },\n  };\n};\n\nexport const loadFont = (url: string) => {\n  if (!url) return;\n\n  const font = document.createElement('link');\n  font.href = url;\n  font.rel = 'stylesheet';\n  document.head.appendChild(font);\n};\n\nconst compareArrays = (array1: any[], array2: any[]) =>\n  array1.length === array2.length &&\n  array1.every((value: any, index: number) => value === array2[index]);\n\nexport const withMemCache = <I extends any[], O>(fn: (...args: I) => O) => {\n  let prevArgs: any[];\n  let cache: any;\n  return Object.assign(\n    (...args: I) => {\n      if (prevArgs && compareArrays(prevArgs, args)) return cache as O;\n\n      prevArgs = args;\n      cache = fn(...args);\n\n      return cache as O;\n    },\n    {\n      reset: () => {\n        prevArgs = undefined;\n        cache = undefined;\n      },\n    },\n  );\n};\n\nexport const handleAutoFocus = (\n  ele: HTMLElement,\n  autoFocus: AutoFocusOptions,\n  isFirstScreen: boolean,\n) => {\n  if (\n    autoFocus === true ||\n    (autoFocus === 'skipFirstScreen' && !isFirstScreen)\n  ) {\n    // focus the first visible input\n    const firstVisibleInput: HTMLInputElement = ele.querySelector('*[name]');\n    setTimeout(() => {\n      firstVisibleInput?.focus();\n    });\n  }\n};\n\nexport const handleReportValidityOnBlur = (rootEle: HTMLElement) => {\n  rootEle.querySelectorAll('*[name]').forEach((ele: HTMLInputElement) => {\n    ele.addEventListener('blur', () => {\n      const onBlur = () => {\n        // reportValidity also focus the element if it's invalid\n        // in order to prevent this we need to override the focus method\n        const origFocus = ele.focus;\n        // eslint-disable-next-line no-param-reassign\n        ele.focus = () => {};\n        ele.reportValidity?.();\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          ele.focus = origFocus;\n        });\n      };\n\n      const isInputAlreadyInErrorState = ele.getAttribute('invalid') === 'true';\n\n      if (isInputAlreadyInErrorState || ele.value?.length) {\n        onBlur();\n        return;\n      }\n\n      // If the input is not in an error state, has no value, and a `formnovalidate` button was clicked,\n      // we want to prevent triggering validation.\n      // This handles a case where a required input was focused, and the user then clicked a social login button —\n      // in that case, we don't want the required error message to flash for a split second.\n      const ref = { timer: undefined };\n\n      const onClick = (e: MouseEvent) => {\n        const target = e.target as HTMLElement;\n\n        if (target.getAttribute('formnovalidate') === 'true') {\n          clearTimeout(ref.timer);\n          ref.timer = undefined;\n        }\n      };\n\n      ref.timer = setTimeout(() => {\n        rootEle.removeEventListener('click', onClick);\n        onBlur();\n        ref.timer = undefined;\n      }, 150);\n\n      rootEle.addEventListener('click', onClick, { once: true });\n    });\n  });\n};\n\n/**\n * To return a fallback value in case the timeout expires and the promise\n * isn't fulfilled:\n *\n *   const promise = loadUserCount();\n *   const count = await timeoutPromise(2000, promise, 0);\n *\n * Or without a fallback value to just throw an error if the timeout expires:\n *\n *   try {\n *     count = await timeoutPromise(2000, promise);\n *   }\n *\n * Fallback is returned only in case of timeout, so if the passed promise rejects\n * the fallback value is not used, and the returned promise will throw as well.\n */\nexport function timeoutPromise<T>(\n  timeout: number,\n  promise: Promise<T>,\n  fallback?: T,\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let expired = false;\n    const timer = setTimeout(() => {\n      expired = true;\n      if (fallback !== undefined) {\n        resolve(fallback);\n      } else {\n        reject(new Error(`Promise timed out after ${timeout} ms`));\n      }\n    }, timeout);\n\n    promise\n      .then((value) => {\n        if (!expired) {\n          clearTimeout(timer);\n          resolve(value);\n        }\n      })\n      .catch((error) => {\n        if (!expired) {\n          clearTimeout(timer);\n          reject(error);\n        }\n      });\n  });\n}\n\nexport const getChromiumVersion = (): number => {\n  const brands = (navigator as any)?.userAgentData?.brands;\n  const found = brands?.find(\n    ({ brand, version }) => brand === 'Chromium' && parseFloat(version),\n  );\n  return found ? found.version : 0;\n};\n\n// As an optimization - We can show first screen if we have startScreenId and we don't have any other of the ssoAppId/oidcIdpStateId/samlIdp params\n// - If there startScreenId it means that the sdk can show the first screen and we don't need to wait for the sdk to return the first screen\n// - If there is any one else of the other params (like oidcIdpStateId, ..) - we can't skip this call because descope may decide not to show the first screen (in cases like a user is already logged in)\nexport const showFirstScreenOnExecutionInit = (\n  startScreenId: string,\n  {\n    oidcIdpStateId,\n    samlIdpStateId,\n    samlIdpUsername,\n    ssoAppId,\n    oidcLoginHint,\n    oidcPrompt,\n    oidcErrorRedirectUri,\n    oidcResource,\n    thirdPartyAppId,\n    thirdPartyAppStateId,\n    applicationScopes,\n  }: SSOQueryParams,\n): boolean =>\n  !!startScreenId &&\n  !oidcIdpStateId &&\n  !samlIdpStateId &&\n  !samlIdpUsername &&\n  !ssoAppId &&\n  !oidcLoginHint &&\n  !oidcPrompt &&\n  !oidcErrorRedirectUri &&\n  !oidcResource &&\n  !thirdPartyAppId &&\n  !thirdPartyAppStateId &&\n  !applicationScopes;\n\nexport const injectSamlIdpForm = (\n  url: string,\n  samlResponse: string,\n  relayState: string,\n  submitCallback: (form: HTMLFormElement) => void,\n) => {\n  const formEle = document.createElement('form');\n  formEle.method = 'POST';\n  formEle.action = url;\n  formEle.innerHTML = `\n  <input type=\"hidden\" role=\"saml-response\" name=\"SAMLResponse\" value=\"${samlResponse}\" />\n  <input type=\"hidden\" role=\"saml-relay-state\" name=\"RelayState\" value=\"${relayState}\" />\n  <input style=\"display: none;\" id=\"SAMLSubmitButton\" type=\"submit\" value=\"Continue\" />\n  `;\n\n  document.body.appendChild(formEle);\n\n  submitCallback(formEle);\n};\n\nexport const submitForm = (formEle: HTMLFormElement) => formEle?.submit();\n\nexport const getFirstNonEmptyValue = (obj: object, keys: string[]) => {\n  const firstNonEmptyKey = keys.find((key) => obj[key]);\n  return firstNonEmptyKey ? obj[firstNonEmptyKey] : null;\n};\n\nexport const leadingDebounce = <T extends (...args: any[]) => void>(\n  func: T,\n  wait = 100,\n) => {\n  let timeout: NodeJS.Timeout;\n  return function executedFunction(...args) {\n    if (!timeout) func.apply(this, args);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n    }, wait);\n  } as T;\n};\n\nexport function getUserLocale(locale: string): Locale {\n  if (locale) {\n    return { locale: locale.toLowerCase(), fallback: locale.toLowerCase() };\n  }\n  const nl = navigator.language;\n  if (!nl) {\n    return { locale: '', fallback: '' };\n  }\n\n  if (nl.includes('-')) {\n    return {\n      locale: nl.toLowerCase(),\n      fallback: nl.split('-')[0].toLowerCase(),\n    };\n  }\n\n  return { locale: nl.toLowerCase(), fallback: nl.toLowerCase() };\n}\n\nexport const clearPreviousExternalInputs = () => {\n  document\n    .querySelectorAll('[data-hidden-input=\"true\"]')\n    .forEach((ele) => ele.remove());\n};\n\nexport const shouldHandleMarkdown = (compName: string) =>\n  MD_COMPONENTS.includes(compName);\n\nconst omitBy = <T extends Record<string, any>>(\n  obj: T,\n  predicate: (value: any, key: keyof T) => boolean,\n): T =>\n  Object.fromEntries(\n    Object.entries(obj).filter(\n      ([key, value]) => !predicate(value, key as keyof T),\n    ),\n  ) as T;\n\nexport const transformStepStateForCustomScreen = (\n  state: Partial<StepState>,\n) => {\n  const sanitizedState: CustomScreenState = omitBy(\n    state.screenState,\n    (_, key) => EXCLUDED_STATE_KEYS.includes(key) || key.startsWith('_'),\n  );\n\n  const {\n    screenState: { errorText, errorType },\n  } = state;\n\n  if (errorText || errorType) {\n    sanitizedState.error = { text: errorText, type: errorType };\n  }\n\n  if (state.action) {\n    sanitizedState.action = state.action;\n  }\n\n  if (state.screenState?.componentsConfig?.thirdPartyAppApproveScopes?.data) {\n    sanitizedState.inboundAppApproveScopes =\n      state.screenState.componentsConfig.thirdPartyAppApproveScopes.data;\n  }\n\n  return sanitizedState;\n};\n\nexport const transformScreenInputs = (inputs: Record<string, any>) => {\n  const res = { ...inputs };\n\n  if (inputs.inboundAppApproveScopes) {\n    res.thirdPartyAppApproveScopes = inputs.inboundAppApproveScopes;\n  }\n\n  return res;\n};\n\nexport function getScriptResultPath(scriptId: string, resultKey?: string) {\n  const path = resultKey ? `${scriptId}_${resultKey}` : scriptId;\n  return `${SDK_SCRIPT_RESULTS_KEY}.${path}`;\n}\n\nexport const openCenteredPopup = (\n  url: string,\n  title: string,\n  w: number,\n  h: number,\n) => {\n  const dualScreenLeft =\n    window.screenLeft !== undefined\n      ? window.screenLeft\n      : (window.screen as any).left;\n  const dualScreenTop =\n    window.screenTop !== undefined\n      ? window.screenTop\n      : (window.screen as any).top;\n\n  const width =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    window.screen.width;\n  const height =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    window.screen.height;\n\n  const left = (width - w) / 2 + dualScreenLeft;\n  const top = (height - h) / 2 + dualScreenTop;\n\n  const popup = window.open(\n    url,\n    title,\n    `width=${w},height=${h},top=${top},left=${left},scrollbars=yes,resizable=yes`,\n  );\n\n  popup.focus();\n\n  return popup;\n};\n", "import { createIsChanged } from './helpers';\n\ntype StateObject = Record<string, any>;\n\n// eslint-disable-next-line import/exports-last\nexport type SubscribeCb<T> = (\n  state: T,\n  prevState: T,\n  isChanged: ReturnType<typeof createIsChanged>,\n) => void | Promise<void>;\n\ntype UpdateStateCb<T> = (state: T) => Partial<T>;\n\ntype Subscribers<T> = Record<\n  string,\n  {\n    cb: SubscribeCb<ReturnType<SelectorCb<T>>>;\n    selector: SelectorCb<T>;\n    forceUpdate: boolean;\n  }\n>;\n\nexport type SelectorCb<T> = (state: T) => any;\n\nexport type IsChanged<T> = Parameters<SubscribeCb<T>>[2];\n\nfunction isPlainObject(maybeObj: any) {\n  if (typeof maybeObj !== 'object' || maybeObj === null) return false;\n  const proto = Object.getPrototypeOf(maybeObj);\n  return proto === Object.prototype || proto === null;\n}\n\nfunction compareObjects(\n  objectA: Record<string, any>,\n  objectB: Record<string, any>,\n) {\n  const aProperties = Object.getOwnPropertyNames(objectA);\n  const bProperties = Object.getOwnPropertyNames(objectB);\n\n  if (aProperties.length !== bProperties.length) {\n    return false;\n  }\n\n  for (let i = 0; i < aProperties.length; i += 1) {\n    const propName = aProperties[i];\n\n    const valA = objectA[propName];\n    const valB = objectB[propName];\n    if (valA === null || valB === null) {\n      if (valA !== valB) {\n        return false;\n      }\n    } else if (typeof valA === 'object' && typeof valB === 'object') {\n      // compare nested objects\n      if (!compareObjects(valA, valB)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass State<T extends StateObject> {\n  #state: T;\n\n  #subscribers: Subscribers<T> = {};\n\n  #token = 0;\n\n  #forceUpdateAll = true;\n\n  constructor(init: T = {} as T, { forceUpdate = false } = {}) {\n    this.#state = init;\n    this.#forceUpdateAll = forceUpdate;\n  }\n\n  get current() {\n    return { ...this.#state };\n  }\n\n  set forceUpdate(forceUpdate: boolean) {\n    this.#forceUpdateAll = forceUpdate;\n  }\n\n  update = (newState: Partial<T> | UpdateStateCb<T>) => {\n    const internalNewState =\n      typeof newState === 'function' ? newState(this.#state) : newState;\n\n    const nextState = { ...this.#state, ...internalNewState };\n    const prevState = this.#state;\n    this.#state = nextState;\n    Object.freeze(this.#state);\n\n    setTimeout(() => {\n      Object.values(this.#subscribers).forEach(\n        ({ cb, selector, forceUpdate }) => {\n          const partialPrevState = selector(prevState);\n          const partialNextState = selector(nextState);\n\n          if (\n            this.#forceUpdateAll ||\n            forceUpdate ||\n            (isPlainObject(partialNextState)\n              ? !compareObjects(partialPrevState, partialNextState)\n              : partialPrevState !== partialNextState)\n          ) {\n            cb(\n              partialNextState,\n              partialPrevState,\n              createIsChanged(partialNextState, partialPrevState),\n            );\n          }\n        },\n      );\n    }, 0);\n  };\n\n  subscribe<R extends any | Partial<T>>(\n    cb: SubscribeCb<R>,\n    selector: (state: T) => R = (state: T) => state as unknown as R,\n    { forceUpdate = false }: { forceUpdate?: boolean } = {},\n  ) {\n    this.#token += 1;\n    this.#subscribers[this.#token] = { cb, selector, forceUpdate };\n\n    return this.#token.toString();\n  }\n\n  unsubscribe(token: string) {\n    const isFound = !!this.#subscribers[token];\n\n    if (isFound) {\n      delete this.#subscribers[token];\n    }\n\n    return isFound;\n  }\n\n  unsubscribeAll() {\n    this.#subscribers = {};\n\n    return true;\n  }\n}\n\nexport default State;\n", "const mdChars = ['*', '#', '/', '(', ')', '[', ']', '_', '<', '>', '`'];\n\nconst createRegexp = (prefix: string) => {\n  const regex = mdChars.map((char) => `${prefix}${char}`).join('|');\n  return new RegExp(`(${regex})`, 'g');\n};\n\nexport const escapeMarkdown = (s: string) => {\n  if (typeof s !== 'string') return s;\n  return s.replace(createRegexp('\\\\'), '\\\\$1');\n};\n\nexport const unescapeMarkdown = (s: string) => {\n  if (typeof s !== 'string') return s;\n  return s.replace(createRegexp('\\\\\\\\'), (match) => match.slice(1));\n};\n", "/* eslint @typescript-eslint/no-use-before-define: 0 */\n\nimport { withMemCache, timeoutPromise, getChromiumVersion } from './helpers';\n\nconst CHROMIUM_VERSION_THAT_SUPPORTS_PASSKEYS = 108;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isConditionalLoginSupported = withMemCache(async () => {\n  if (\n    !window.PublicKeyCredential ||\n    !(<any>PublicKeyCredential).isConditionalMediationAvailable ||\n    !PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable\n  ) {\n    return false;\n  }\n  try {\n    const isSupported = Promise.all([\n      (<any>window.PublicKeyCredential)?.isConditionalMediationAvailable(),\n      window.PublicKeyCredential?.isUserVerifyingPlatformAuthenticatorAvailable(),\n    ]).then((arr) => arr.every((value) => !!value));\n\n    // when using Dashlane Chrome extension, \"isConditionalMediationAvailable\" never resolved and the app hangs\n    // if timeout exceeded, we are deciding if passkeys are supported based on the Chromium version\n    const isChromiumSupported =\n      getChromiumVersion() >= CHROMIUM_VERSION_THAT_SUPPORTS_PASSKEYS;\n\n    return await timeoutPromise(100, isSupported, isChromiumSupported);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('Conditional login check failed', err);\n    return false;\n  }\n});\n"],
  "mappings": "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",
  "names": ["IS_LOCAL_STORAGE", "localStorage", "FETCH_EXCEPTION_ERROR_CODE", "FETCH_ERROR_RESPONSE_ERROR_CODE", "FLOW_TIMED_OUT_ERROR_CODE", "FLOW_REQUESTED_IS_IN_OLD_VERSION_ERROR_CODE", "POLLING_STATUS_NOT_FOUND_ERROR_CODE", "OVERRIDE_CONTENT_URL", "IS_LOCAL_STORAGE", "localStorage", "getItem", "BASE_CONTENT_URL", "ASSETS_FOLDER", "PREV_VER_ASSETS_FOLDER", "CONFIG_FILENAME", "UI_COMPONENTS_URL_KEY", "IS_LOCAL_STORAGE", "localStorage", "getItem", "Direction", "URL_RUN_IDS_PARAM_NAME", "URL_TOKEN_PARAM_NAME", "URL_CODE_PARAM_NAME", "URL_REDIRECT_MODE_PARAM_NAME", "URL_ERR_PARAM_NAME", "URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME", "URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME", "URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME", "URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME", "DESCOPE_ATTRIBUTE_PREFIX", "DESCOPE_ATTRIBUTE_EXCLUDE_FIELD", "DESCOPE_ATTRIBUTE_EXCLUDE_NEXT_BUTTON", "DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY", "OIDC_IDP_STATE_ID_PARAM_NAME", "SAML_IDP_STATE_ID_PARAM_NAME", "SAML_IDP_USERNAME_PARAM_NAME", "DESCOPE_IDP_INITIATED_PARAM_NAME", "SSO_APP_ID_PARAM_NAME", "THIRD_PARTY_APP_ID_PARAM_NAME", "THIRD_PARTY_APP_STATE_ID_PARAM_NAME", "OIDC_LOGIN_HINT_PARAM_NAME", "OIDC_PROMPT_PARAM_NAME", "OIDC_RESOURCE_PARAM_NAME", "OIDC_ERROR_REDIRECT_URI_PARAM_NAME", "APPLICATION_SCOPES_PARAM_NAME", "ELEMENT_TYPE_ATTRIBUTE", "SDK_SCRIPT_RESULTS_KEY", "RESPONSE_ACTIONS", "redirect", "poll", "webauthnCreate", "webauthnGet", "nativeBridge", "loadForm", "CUSTOM_INTERACTIONS", "submit", "polling", "HAS_DYNAMIC_VALUES_ATTR_NAME", "ELEMENTS_TO_IGNORE_ENTER_KEY_ON", "SDK_SCRIPTS_LOAD_TIMEOUT", "EXCLUDED_STATE_KEYS", "MD_COMPONENTS", "getUrlParam", "paramName", "URLSearchParams", "window", "location", "search", "get", "resetUrlParam", "history", "replaceState", "newUrl", "URL", "href", "delete", "toString", "fetchContent", "url", "returnType", "res", "fetch", "cache", "ok", "Error", "status", "body", "headers", "Object", "fromEntries", "entries", "getContentUrl", "projectId", "filename", "assetsFolder", "ASSETS_FOLDER", "baseUrl", "OVERRIDE_CONTENT_URL", "BASE_CONTENT_URL", "pathname", "paths", "join", "replace", "getAnimationDirection", "currentIdxStr", "prevIdxStr", "currentIdx", "prevIdx", "Number", "isNaN", "Direction", "forward", "backward", "getRunIdsFromUrl", "flowId", "executionId", "stepId", "URL_RUN_IDS_PARAM_NAME", "split", "executionFlowId", "_a", "exec", "isChromium", "test", "navigator", "userAgent", "vendor", "clearRunIdsFromUrl", "getTokenFromUrl", "URL_TOKEN_PARAM_NAME", "clearTokenFromUrl", "getCodeFromUrl", "URL_CODE_PARAM_NAME", "getIsPopupFromUrl", "URL_REDIRECT_MODE_PARAM_NAME", "getExchangeErrorFromUrl", "URL_ERR_PARAM_NAME", "clearCodeFromUrl", "clearIsPopupFromUrl", "clearExchangeErrorFromUrl", "getRedirectAuthFromUrl", "redirectAuthCodeChallenge", "URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME", "redirectAuthCallbackUrl", "URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME", "redirectAuthBackupCallbackUri", "URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME", "redirectAuthInitiator", "URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME", "getOIDCIDPParamFromUrl", "OIDC_IDP_STATE_ID_PARAM_NAME", "clearOIDCIDPParamFromUrl", "getSAMLIDPParamFromUrl", "SAML_IDP_STATE_ID_PARAM_NAME", "clearSAMLIDPParamFromUrl", "getSAMLIDPUsernameParamFromUrl", "SAML_IDP_USERNAME_PARAM_NAME", "clearSAMLIDPUsernameParamFromUrl", "getDescopeIDPInitiatedParamFromUrl", "DESCOPE_IDP_INITIATED_PARAM_NAME", "clearDescopeIDPInitiatedParamFromUrl", "getSSOAppIdParamFromUrl", "SSO_APP_ID_PARAM_NAME", "getThirdPartyAppIdParamFromUrl", "THIRD_PARTY_APP_ID_PARAM_NAME", "clearSSOAppIdParamFromUrl", "clearThirdPartyAppIdParamFromUrl", "getThirdPartyAppStateIdParamFromUrl", "THIRD_PARTY_APP_STATE_ID_PARAM_NAME", "clearThirdPartyAppStateIdParamFromUrl", "getApplicationScopesParamFromUrl", "APPLICATION_SCOPES_PARAM_NAME", "clearApplicationScopesParamFromUrl", "getOIDCLoginHintParamFromUrl", "OIDC_LOGIN_HINT_PARAM_NAME", "clearOIDCLoginHintParamFromUrl", "getOIDCPromptParamFromUrl", "OIDC_PROMPT_PARAM_NAME", "clearOIDCPromptParamFromUrl", "getOIDCErrorRedirectUriParamFromUrl", "OIDC_ERROR_REDIRECT_URI_PARAM_NAME", "clearOIDCErrorRedirectUriParamFromUrl", "getOIDCResourceParamFromUrl", "OIDC_RESOURCE_PARAM_NAME", "clearOIDCResourceParamFromUrl", "camelCase", "s", "x", "toUpperCase", "createIsChanged", "state", "prevState", "attrName", "getElementDescopeAttributes", "ele", "Array", "from", "attributes", "reduce", "acc", "attr", "descopeAttrName", "RegExp", "DESCOPE_ATTRIBUTE_PREFIX", "name", "assign", "value", "handleUrlParams", "logger", "debug", "ssoQueryParams", "token", "code", "isPopup", "exchangeError", "oidcIdpStateId", "samlIdpStateId", "samlIdpUsername", "descopeIdpInitiated", "ssoAppId", "thirdPartyAppId", "thirdPartyAppStateId", "applicationScopes", "oidcLoginHint", "oidcPrompt", "oidcErrorRedirectUri", "oidcResource", "withMemCache", "fn", "prevArgs", "args", "array2", "array1", "length", "every", "index", "reset", "handleAutoFocus", "autoFocus", "isFirstScreen", "firstVisibleInput", "querySelector", "setTimeout", "focus", "handleReportValidityOnBlur", "rootEle", "querySelectorAll", "forEach", "addEventListener", "n", "onBlur", "e", "origFocus", "reportValidity", "call", "getAttribute", "ref", "timer", "undefined", "onClick", "target", "clearTimeout", "removeEventListener", "once", "timeoutPromise", "timeout", "promise", "fallback", "Promise", "resolve", "reject", "expired", "then", "catch", "error", "getChromiumVersion", "brands", "userAgentData", "found", "find", "brand", "version", "parseFloat", "showFirstScreenOnExecutionInit", "startScreenId", "injectSamlIdpForm", "samlResponse", "relayState", "submitCallback", "formEle", "document", "createElement", "method", "action", "innerHTML", "appendChild", "submitForm", "submit", "getFirstNonEmptyValue", "obj", "keys", "firstNonEmptyKey", "key", "leadingDebounce", "func", "wait", "apply", "this", "getUserLocale", "locale", "toLowerCase", "nl", "language", "includes", "clearPreviousExternalInputs", "remove", "shouldHandleMarkdown", "compName", "transformStepStateForCustomScreen", "sanitizedState", "screenState", "predicate", "_", "EXCLUDED_STATE_KEYS", "startsWith", "filter", "errorText", "errorType", "text", "type", "_c", "_b", "componentsConfig", "thirdPartyAppApproveScopes", "data", "inboundAppApproveScopes", "transformScreenInputs", "inputs", "getScriptResultPath", "scriptId", "resultKey", "SDK_SCRIPT_RESULTS_KEY", "openCenteredPopup", "title", "w", "h", "dualScreenLeft", "screenLeft", "screen", "left", "dualScreenTop", "screenTop", "top", "innerWidth", "documentElement", "clientWidth", "width", "innerHeight", "clientHeight", "height", "popup", "open", "compareObjects", "objectA", "objectB", "aProperties", "Object", "getOwnPropertyNames", "bProperties", "length", "i", "propName", "valA", "valB", "State", "init", "forceUpdate", "_State_state", "set", "this", "_State_subscribers", "_State_token", "_State_forceUpdateAll", "update", "newState", "internalNewState", "__classPrivateFieldGet", "nextState", "prevState", "__classPrivateFieldSet", "freeze", "setTimeout", "values", "forEach", "cb", "selector", "partialPrevState", "partialNextState", "maybeObj", "proto", "getPrototypeOf", "prototype", "createIsChanged", "current", "assign", "state", "toString", "token", "isFound", "unsubscribeAll", "r", "f", "n", "mdChars", "createRegexp", "prefix", "regex", "map", "char", "join", "RegExp", "escapeMarkdown", "s", "replace", "isConditionalLoginSupported", "withMemCache", "__awaiter", "i", "e", "window", "PublicKeyCredential", "isConditionalMediationAvailable", "isUserVerifyingPlatformAuthenticatorAvailable", "isSupported", "Promise", "all", "_a", "_b", "then", "arr", "every", "value", "isChromiumSupported", "getChromiumVersion", "timeoutPromise", "err", "console", "error"]
}
