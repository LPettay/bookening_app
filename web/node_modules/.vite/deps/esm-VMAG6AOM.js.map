{
  "version": 3,
  "sources": ["../../@descope/audit-management-widget/src/lib/widget/state/asyncActions/helpers.ts", "../../@descope/audit-management-widget/src/lib/widget/state/helpers.ts", "../../@descope/audit-management-widget/src/lib/widget/state/selectors.ts", "../../@descope/audit-management-widget/src/lib/widget/state/asyncActions/searchAudit.ts", "../../@descope/audit-management-widget/src/lib/widget/state/initialState.ts", "../../@descope/audit-management-widget/src/lib/widget/api/apiPaths.ts", "../../@descope/audit-management-widget/src/lib/widget/api/sdk/mocks.ts", "../../@descope/audit-management-widget/src/lib/widget/api/sdk/createAuditSdk.ts", "../../@descope/audit-management-widget/src/lib/widget/api/sdk/helpers.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/apiMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/api/sdk/index.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/stateManagementMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initFilterAuditInputMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initAuditTableMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/mixins/initMixin/initMixin.ts", "../../@descope/audit-management-widget/src/lib/widget/index.ts", "../../@descope/audit-management-widget/src/lib/index.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n", "export const capitalize = (s: string) => s && s[0].toUpperCase() + s.slice(1);\n\nexport const conditionalObj = <T extends any>(key: string, val: T) =>\n  val ? { [key]: val } : {};\n\nexport const conditionalJsonParse = (str: string) => {\n  if (!str) return undefined;\n\n  const res = JSON.parse(str);\n\n  if (Array.isArray(res) && res.length === 0) return undefined;\n\n  return res;\n};\n", "import { createSelector } from 'reselect';\nimport { State } from './types';\nimport { capitalize, conditionalJsonParse, conditionalObj } from './helpers';\n\nexport const getRawAuditList = (state: State) => state.auditList.data;\nexport const getSelectedAuditId = (state: State) => state.selectedAuditId;\nexport const getSearchParams = (state: State) => state.searchParams;\n\nexport const getAuditList = createSelector(getRawAuditList, (audits) =>\n  audits.map((audit) => {\n    const {\n      occurred,\n      ID,\n      type,\n      data: {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        saml_request,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        saml_response,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        saml_generated_user,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        saml_generated_roles,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        oidc_response,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        oidc_generated_user,\n        ...data\n      } = {\n        saml_request: '',\n        saml_response: '',\n        saml_generated_user: '',\n        saml_generated_roles: '',\n        oidc_response: '',\n        oidc_generated_user: '',\n      },\n      ...auditRest\n    } = audit || {};\n\n    return {\n      ...auditRest,\n      data,\n      ...conditionalObj('type', capitalize(type)),\n      ...conditionalObj('saml_request', saml_request),\n      ...conditionalObj('saml_response', saml_response),\n      ...conditionalObj(\n        'saml_generated_user',\n        conditionalJsonParse(saml_generated_user),\n      ),\n      ...conditionalObj(\n        'saml_generated_roles',\n        conditionalJsonParse(saml_generated_roles),\n      ),\n      ...conditionalObj('oidc_response', conditionalJsonParse(oidc_response)),\n      ...conditionalObj(\n        'oidc_generated_user',\n        conditionalJsonParse(oidc_generated_user),\n      ),\n      occurredFormatted: !occurred\n        ? 'N/A'\n        : new Date(Number(occurred) || 0).toLocaleString(),\n    };\n  }),\n);\n\nexport const getSelectedAudit = createSelector(\n  getSelectedAuditId,\n  getAuditList,\n  (selected, audits) => audits.find((audit) => selected === audit.id),\n);\n\nexport const getIsAuditSelected = createSelector(\n  getSelectedAuditId,\n  (selected) => !!selected,\n);\n", "/* eslint-disable no-param-reassign */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\nimport { getSearchParams } from '../selectors';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['audit']['search']> | void,\n  ThunkConfigExtraApi\n>('audit/search', (arg, { extra: { api }, getState }) => {\n  // we get the existing search params from state, and adding the new search params from the action\n  const searchParams = getSearchParams(getState() as State);\n  return api.audit.search({ ...searchParams, ...arg });\n});\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onPending: (state, action) => {\n      state.searchParams = { ...state.searchParams, ...action.meta.arg };\n    },\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.auditList.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.auditList),\n);\n\nexport const searchAudit = { action, reducer };\n", "import { State } from './types';\n\nexport const initialState: State = {\n  auditList: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n  searchParams: { text: '', sort: [] },\n  selectedAuditId: '',\n};\n", "export const apiPaths = {\n  audit: {\n    search: '/v1/mgmt/audit/search',\n  },\n};\n", "import { Audit, SearchAuditConfig } from '../types';\n\nconst search: (\n  config: SearchAuditConfig,\n  tenantId: string,\n) => Promise<Audit[]> = async ({ text, sort }) =>\n  new Promise((resolve) => {\n    const audits: Audit[] = [];\n    const timeMock = new Date().getTime() / 1000 + 60 * 60 * 24 * 30;\n    const timeMockFormatted = new Date(timeMock).toLocaleString();\n    for (let i = 1; i < 9; i += 1) {\n      audits.push({\n        id: `Audit ${i}`,\n        action: `Action ${i}`,\n        actorId: `Actor ${i}`,\n        type: `info`,\n        method: `Method ${i}`,\n        userId: `User ${i}`,\n        device: `Device ${i}`,\n        geo: `Geo ${i}`,\n        remoteAddress: `127.0.0.${i}`,\n        externalIds: [`Login ID ${i}`],\n        occurred: timeMock,\n        occurredFormatted: timeMockFormatted,\n      });\n    }\n\n    sort.forEach((s) => {\n      audits.sort((a, b) =>\n        !s.desc\n          ? (a[s.field] as string)?.localeCompare(b[s.field] as string)\n          : (b[s.field] as string)?.localeCompare(a[s.field] as string),\n      );\n    });\n    resolve(\n      audits.filter(\n        (audit) =>\n          audit.id.toLowerCase().includes(text.toLowerCase()) ||\n          audit.action.toLowerCase().includes(text.toLowerCase()) ||\n          audit.type.toLowerCase().includes(text.toLowerCase()) ||\n          audit.device.toLowerCase().includes(text.toLowerCase()) ||\n          audit.method.toLowerCase().includes(text.toLowerCase()) ||\n          audit.geo.toLowerCase().includes(text.toLowerCase()) ||\n          audit.remoteAddress.toLowerCase().includes(text.toLowerCase()) ||\n          audit.externalIds.includes(text.toLowerCase()) ||\n          audit.userId.toLowerCase().includes(text.toLowerCase()),\n      ),\n    );\n  });\n\nconst audit = {\n  search,\n};\nexport { audit };\n", "import { HttpClient, SearchAuditConfig, Audit } from '../types';\nimport { apiPaths } from '../apiPaths';\nimport { withErrorHandler } from './helpers';\nimport { audit } from './mocks';\n\nexport const createAuditSdk = ({\n  httpClient,\n  tenant,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenant: string;\n  mock: boolean;\n}) => {\n  const search: (config: SearchAuditConfig) => Promise<Audit[]> = async ({\n    page,\n    limit = 10000,\n    text,\n    sort,\n    from,\n  } = {}) => {\n    if (mock) {\n      return audit.search({ page, limit, text, sort }, tenant);\n    }\n    const res = await httpClient.post(\n      apiPaths.audit.search,\n      {\n        limit,\n        page,\n        text,\n        sort,\n        from,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.audits;\n  };\n\n  return {\n    search,\n  };\n};\n", "export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  baseUrlMixin,\n  cookieConfigMixin,\n  createValidateAttributesMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      baseUrlMixin,\n      cookieConfigMixin,\n      createValidateAttributesMixin({\n        tenant: createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          {\n            projectId: this.projectId,\n            baseUrl: this.baseUrl,\n            refreshCookieName: this.refreshCookieName,\n          },\n          this.tenantId,\n          this.mock === 'true',\n          this.widgetId,\n        );\n      }\n\n      get tenantId() {\n        return this.getAttribute('tenant');\n      }\n\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(['project-id', 'base-url', 'tenant'], () => {\n          if (this.#api) {\n            this.#createSdk();\n          }\n        });\n      }\n    };\n  },\n);\n", "import createWebSdk from '@descope/web-js-sdk';\nimport { createAuditSdk } from './createAuditSdk';\n\ndeclare const BUILD_VERSION: string;\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  tenant: string,\n  mock: boolean,\n  widgetId?: string,\n) => {\n  const webSdk = createWebSdk({\n    ...config,\n    persistTokens: true,\n    baseHeaders: {\n      'x-descope-widget-type': 'audit-management-widget',\n      'x-descope-widget-id': widgetId,\n      'x-descope-widget-version': BUILD_VERSION,\n    },\n  });\n\n  return {\n    audit: createAuditSdk({ httpClient: webSdk.httpClient, tenant, mock }),\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n", "/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { searchAudit } from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {\n          setSelectedAuditId: (state, { payload }) => {\n            state.selectedAuditId = payload;\n          },\n        },\n        extraReducers: (builder) => {\n          searchAudit.reducer(builder);\n        },\n        asyncActions: {\n          searchAudit: searchAudit.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state: typeof initialState) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'audit-management-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res.body;\n      }\n    };\n  },\n);\n", "import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        const template = createTemplate(\n          // await import('../../../../../../test/mocks/rootMock').then(\n          //   (module) => module.default,\n          // ),\n          await this.fetchWidgetPage('root.html'),\n        );\n        await this.loadDescopeUiComponents(template);\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        await Promise.all([this.#initWidgetRoot()]);\n\n        this.onWidgetRootReady();\n      }\n    },\n);\n", "import {\n  TextFieldDriver,\n  SingleSelectDriver,\n} from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin, debounce } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initFilterAuditInputMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitFilterAuditInputMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n    )(superclass) {\n      searchInput: TextFieldDriver;\n\n      rangeInput: SingleSelectDriver;\n\n      #onInput = debounce(() => {\n        const timePeriod = this.rangeInput.value;\n        const now = new Date();\n        let from: number;\n        switch (timePeriod) {\n          case 'minuets15':\n            from = now.setMinutes(now.getMinutes() - 15);\n            break;\n          case 'hour':\n            from = now.setHours(now.getHours() - 1);\n            break;\n          case 'hour6':\n            from = now.setHours(now.getHours() - 6);\n            break;\n          case 'day':\n            from = now.setDate(now.getDate() - 1);\n            break;\n          case 'day3':\n            from = now.setDate(now.getDate() - 3);\n            break;\n          case 'week':\n            from = now.setDate(now.getDate() - 7);\n            break;\n          case 'week2':\n            from = now.setDate(now.getDate() - 14);\n            break;\n          case 'month':\n            from = now.setMonth(now.getMonth() - 1);\n            break;\n          default:\n            // default to one day\n            from = now.setDate(now.getDate() - 1);\n        }\n\n        this.actions.searchAudit({\n          text: this.searchInput.value,\n          from: Math.floor(new Date(from).getTime()),\n        });\n      });\n\n      #initSearchInput() {\n        // currently we are doing it on client side because we assume there will not be more than 10000 audit per tenant\n        this.searchInput = new TextFieldDriver(\n          this.shadowRoot?.querySelector('[data-id=\"search-input\"]'),\n          { logger: this.logger },\n        );\n        this.searchInput.onInput(this.#onInput);\n        // we need to call it once to in case there is a default value\n        this.#onInput();\n      }\n\n      #initRangeInput() {\n        this.rangeInput = new SingleSelectDriver(\n          this.shadowRoot?.querySelector('[data-id=\"range-input\"]'),\n          { logger: this.logger },\n        );\n        this.rangeInput.onInput(this.#onInput);\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initSearchInput();\n        this.#initRangeInput();\n      }\n    },\n);\n", "import { GridDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { Audit } from '../../../api/types';\nimport { getAuditList } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initAuditTableMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitAuditTableMixinClass extends compose(\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      auditTable: GridDriver<Partial<Audit>>;\n\n      #initAuditTable() {\n        this.auditTable = new GridDriver(\n          this.shadowRoot?.querySelector('[data-id=\"audit-table\"]'),\n          { logger: this.logger },\n        );\n        this.auditTable.onSelectedItemsChange((e) => {\n          this.actions.setSelectedAuditId(e.detail.value.map(({ id }) => id));\n        });\n      }\n\n      #onAuditListUpdate = withMemCache(\n        (auditList: ReturnType<typeof getAuditList>) => {\n          this.auditTable.data = auditList;\n        },\n      );\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initAuditTable();\n\n        // because we are not waiting for the rest calls,\n        // we need to make sure the table is updated with the received audit\n        this.#onAuditListUpdate(getAuditList(this.state));\n        this.subscribe(this.#onAuditListUpdate.bind(this), getAuditList);\n      }\n    },\n);\n", "import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { initFilterAuditInputMixin } from './initComponentsMixins/initFilterAuditInputMixin';\nimport { initAuditTableMixin } from './initComponentsMixins/initAuditTableMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    // @ts-ignore\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      initAuditTableMixin,\n      initFilterAuditInputMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n", "import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {};\n\nexport const AuditManagementWidget = compose(rootMixin)(HTMLElement);\n", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { AuditManagementWidget } from './widget';\n\nexport default AuditManagementWidget;\n\ncustomElements.define('descope-audit-management-widget', AuditManagementWidget);\n"],
  "mappings": "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",
  "names": ["conditionalObj", "key", "val", "conditionalJsonParse", "str", "res", "JSON", "parse", "Array", "isArray", "length", "getSelectedAuditId", "state", "selectedAuditId", "getAuditList", "createSelector", "auditList", "data", "audits", "map", "audit", "_a", "occurred", "ID", "type", "_b", "_c", "saml_request", "saml_response", "saml_generated_user", "saml_generated_roles", "oidc_response", "oidc_generated_user", "__rest", "auditRest", "Object", "assign", "s", "toUpperCase", "slice", "occurredFormatted", "Date", "Number", "toLocaleString", "selected", "find", "id", "action", "createAsyncThunk", "arg", "extra", "api", "getState", "searchParams", "search", "reducer", "args", "builder", "addCase", "pending", "forEach", "onPending", "fulfilled", "onFulfilled", "rejected", "onRejected", "meta", "payload", "getStateSection", "loading", "error", "searchAudit", "initialState", "text", "sort", "apiPaths", "Promise", "resolve", "timeMock", "getTime", "timeMockFormatted", "i", "push", "actorId", "method", "userId", "device", "geo", "remoteAddress", "externalIds", "a", "b", "desc", "field", "localeCompare", "filter", "toLowerCase", "includes", "createAuditSdk", "httpClient", "tenant", "mock", "args_1", "__awaiter", "page", "limit", "from", "post", "queryParams", "json", "ok", "descopeErrorMsg", "errorDescription", "errorMessage", "Error", "status", "statusText", "withErrorHandler", "apiMixin", "createSingletonMixin", "superclass", "BaseClass", "compose", "projectIdMixin", "observeAttributesMixin", "loggerMixin", "baseUrlMixin", "cookieConfigMixin", "createValidateAttributesMixin", "missingAttrValidator", "constructor", "_ApiMixinClass_api", "set", "this", "tenantId", "getAttribute", "__classPrivateFieldGet", "_ApiMixinClass_instances", "_ApiMixinClass_createSdk", "call", "init", "_super", "observeAttributes", "o", "logger", "debug", "__classPrivateFieldSet", "config", "widgetId", "webSdk", "createWebSdk", "persistTokens", "baseHeaders", "projectId", "baseUrl", "refreshCookieName", "stateManagementMixin", "createStateManagementMixin", "name", "reducers", "setSelectedAuditId", "extraReducers", "asyncActions", "initLifecycleMixin", "super", "subscribe", "fetchWidgetPagesMixin", "staticResourcesMixin", "filename", "fetchStaticResource", "body", "initWidgetRootMixin", "_InitWidgetRootMixinClass_instances", "_InitWidgetRootMixinClass_initWidgetRoot", "descopeUiMixin", "initElementMixin", "onWidgetRootReady", "all", "template", "createTemplate", "fetchWidgetPage", "loadDescopeUiComponents", "contentRootElement", "append", "content", "cloneNode", "initFilterAuditInputMixin", "_InitFilterAuditInputMixinClass_instances", "_InitFilterAuditInputMixinClass_onInput", "_InitFilterAuditInputMixinClass_initSearchInput", "_InitFilterAuditInputMixinClass_initRangeInput", "debounce", "timePeriod", "rangeInput", "value", "now", "setMinutes", "getMinutes", "setHours", "getHours", "setDate", "getDate", "setMonth", "getMonth", "actions", "searchInput", "Math", "floor", "r", "e", "TextFieldDriver", "shadowRoot", "querySelector", "onInput", "SingleSelectDriver", "initAuditTableMixin", "_InitAuditTableMixinClass_instances", "_InitAuditTableMixinClass_initAuditTable", "_InitAuditTableMixinClass_onAuditListUpdate", "withMemCache", "auditTable", "bind", "GridDriver", "onSelectedItemsChange", "detail", "initMixin", "debuggerMixin", "themeMixin", "AuditManagementWidget", "HTMLElement", "customElements", "define"]
}
