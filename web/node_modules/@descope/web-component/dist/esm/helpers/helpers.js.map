{"version":3,"file":"helpers.js","sources":["../../../src/lib/helpers/helpers.ts"],"sourcesContent":["import {\n  ASSETS_FOLDER,\n  BASE_CONTENT_URL,\n  DESCOPE_ATTRIBUTE_PREFIX,\n  URL_CODE_PARAM_NAME,\n  URL_ERR_PARAM_NAME,\n  URL_RUN_IDS_PARAM_NAME,\n  URL_TOKEN_PARAM_NAME,\n  URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  OIDC_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_USERNAME_PARAM_NAME,\n  SSO_APP_ID_PARAM_NAME,\n  OIDC_LOGIN_HINT_PARAM_NAME,\n  DESCOPE_IDP_INITIATED_PARAM_NAME,\n  OVERRIDE_CONTENT_URL,\n  OIDC_PROMPT_PARAM_NAME,\n  OIDC_RESOURCE_PARAM_NAME,\n  OIDC_ERROR_REDIRECT_URI_PARAM_NAME,\n  THIRD_PARTY_APP_ID_PARAM_NAME,\n  THIRD_PARTY_APP_STATE_ID_PARAM_NAME,\n  APPLICATION_SCOPES_PARAM_NAME,\n  SDK_SCRIPT_RESULTS_KEY,\n  URL_REDIRECT_MODE_PARAM_NAME,\n} from '../constants';\nimport { EXCLUDED_STATE_KEYS } from '../constants/customScreens';\nimport {\n  AutoFocusOptions,\n  CustomScreenState,\n  Direction,\n  Locale,\n  SSOQueryParams,\n  StepState,\n} from '../types';\n\nconst MD_COMPONENTS = ['descope-enriched-text'];\n\nfunction getUrlParam(paramName: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(paramName);\n}\n\nfunction getFlowUrlParam() {\n  return getUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nfunction setFlowUrlParam(id: string) {\n  if (window.history.pushState && id !== getFlowUrlParam()) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.set(URL_RUN_IDS_PARAM_NAME, id);\n    newUrl.search = search.toString();\n    window.history.pushState({}, '', newUrl.toString());\n  }\n}\n\nfunction resetUrlParam(paramName: string) {\n  if (window.history.replaceState && getUrlParam(paramName)) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.delete(paramName);\n    newUrl.search = search.toString();\n    window.history.replaceState({}, '', newUrl.toString());\n  }\n}\n\nconst getFlowIdFromExecId = (executionId: string) => {\n  const regex = /(.*)\\|#\\|.*/;\n  return regex.exec(executionId)?.[1] || '';\n};\n\nexport async function fetchContent<T extends 'text' | 'json'>(\n  url: string,\n  returnType: T,\n): Promise<{\n  body: T extends 'json' ? Record<string, any> : string;\n  headers: Record<string, string>;\n}> {\n  const res = await fetch(url, { cache: 'default' });\n  if (!res.ok) {\n    throw Error(`Error fetching URL ${url} [${res.status}]`);\n  }\n\n  return {\n    body: await res[returnType || 'text'](),\n    headers: Object.fromEntries(res.headers.entries()),\n  };\n}\n\nconst pathJoin = (...paths: string[]) => paths.join('/').replace(/\\/+/g, '/'); // preventing duplicate separators\n\nexport function getContentUrl({\n  projectId,\n  filename,\n  assetsFolder = ASSETS_FOLDER,\n  baseUrl,\n}: {\n  projectId: string;\n  filename: string;\n  assetsFolder?: string;\n  baseUrl?: string;\n}) {\n  const url = new URL(OVERRIDE_CONTENT_URL || baseUrl || BASE_CONTENT_URL);\n  url.pathname = pathJoin(url.pathname, projectId, assetsFolder, filename);\n\n  return url.toString();\n}\n\nexport function getAnimationDirection(\n  currentIdxStr: string,\n  prevIdxStr: string,\n) {\n  if (!prevIdxStr) return undefined;\n\n  const currentIdx = +currentIdxStr;\n  const prevIdx = +prevIdxStr;\n\n  if (Number.isNaN(currentIdx) || Number.isNaN(prevIdx)) return undefined;\n  if (currentIdx > prevIdx) return Direction.forward;\n  if (currentIdx < prevIdx) return Direction.backward;\n  return undefined;\n}\n\nexport const getRunIdsFromUrl = (flowId: string) => {\n  let [executionId = '', stepId = ''] = (getFlowUrlParam() || '').split('_');\n  const executionFlowId = getFlowIdFromExecId(executionId);\n\n  // if the flow id does not match, this execution id is not for this flow\n  if (!flowId || (executionFlowId && executionFlowId !== flowId)) {\n    executionId = '';\n    stepId = '';\n  }\n\n  return { executionId, stepId, executionFlowId };\n};\n\nexport const setRunIdsOnUrl = (executionId: string, stepId: string) => {\n  setFlowUrlParam([executionId, stepId].join('_'));\n};\n\nexport function isChromium() {\n  return (\n    /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)\n  );\n}\n\nexport function clearRunIdsFromUrl() {\n  resetUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nexport function getTokenFromUrl() {\n  return getUrlParam(URL_TOKEN_PARAM_NAME) || undefined;\n}\n\nexport function clearTokenFromUrl() {\n  resetUrlParam(URL_TOKEN_PARAM_NAME);\n}\n\nexport function getCodeFromUrl() {\n  return getUrlParam(URL_CODE_PARAM_NAME) || undefined;\n}\n\nexport function getIsPopupFromUrl() {\n  return getUrlParam(URL_REDIRECT_MODE_PARAM_NAME) === 'popup';\n}\n\nexport function getExchangeErrorFromUrl() {\n  return getUrlParam(URL_ERR_PARAM_NAME) || undefined;\n}\n\nexport function clearCodeFromUrl() {\n  resetUrlParam(URL_CODE_PARAM_NAME);\n}\n\nexport function clearIsPopupFromUrl() {\n  resetUrlParam(URL_REDIRECT_MODE_PARAM_NAME);\n}\n\nexport function clearExchangeErrorFromUrl() {\n  resetUrlParam(URL_ERR_PARAM_NAME);\n}\n\nexport function getRedirectAuthFromUrl() {\n  const redirectAuthCodeChallenge = getUrlParam(\n    URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  );\n  const redirectAuthCallbackUrl = getUrlParam(\n    URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthBackupCallbackUri = getUrlParam(\n    URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthInitiator = getUrlParam(\n    URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  );\n  return {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  };\n}\n\nexport function getOIDCIDPParamFromUrl() {\n  return getUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearOIDCIDPParamFromUrl() {\n  resetUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPParamFromUrl() {\n  return getUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearSAMLIDPParamFromUrl() {\n  resetUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPUsernameParamFromUrl() {\n  return getUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function clearSAMLIDPUsernameParamFromUrl() {\n  resetUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function getDescopeIDPInitiatedParamFromUrl() {\n  return getUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function clearDescopeIDPInitiatedParamFromUrl() {\n  resetUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function getSSOAppIdParamFromUrl() {\n  return getUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function clearSSOAppIdParamFromUrl() {\n  resetUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppStateIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppStateIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function getApplicationScopesParamFromUrl() {\n  return getUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function clearApplicationScopesParamFromUrl() {\n  resetUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function getOIDCLoginHintParamFromUrl() {\n  return getUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function clearOIDCLoginHintParamFromUrl() {\n  resetUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function getOIDCPromptParamFromUrl() {\n  return getUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function clearOIDCPromptParamFromUrl() {\n  resetUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function getOIDCErrorRedirectUriParamFromUrl() {\n  return getUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function clearOIDCErrorRedirectUriParamFromUrl() {\n  resetUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function getOIDCResourceParamFromUrl() {\n  return getUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport function clearOIDCResourceParamFromUrl() {\n  resetUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport const camelCase = (s: string) =>\n  s.replace(/-./g, (x) => x[1].toUpperCase());\n\nexport const createIsChanged =\n  <T extends Record<string, any>>(state: T, prevState: T) =>\n  (attrName: keyof T) =>\n    state[attrName] !== prevState[attrName];\n\nexport const getElementDescopeAttributes = (ele: HTMLElement) =>\n  Array.from(ele?.attributes || []).reduce((acc, attr) => {\n    const descopeAttrName = new RegExp(\n      `^${DESCOPE_ATTRIBUTE_PREFIX}(\\\\S+)$`,\n    ).exec(attr.name)?.[1];\n\n    return !descopeAttrName\n      ? acc\n      : Object.assign(acc, { [descopeAttrName]: attr.value });\n  }, {});\n\nexport const getFlowConfig = (config: Record<string, any>, flowId: string) =>\n  config?.flows?.[flowId] || {};\n\nexport const handleUrlParams = (\n  flowId: string,\n  logger: { debug: (...data: any[]) => void },\n) => {\n  const { executionId, stepId, executionFlowId } = getRunIdsFromUrl(flowId);\n\n  // if the flow id does not match, we do not want to read & remove any query params\n  // because it's probably belongs to another flow\n  if (executionFlowId && flowId !== executionFlowId) {\n    logger.debug(\n      'Flow id does not match the execution flow id, skipping url params handling',\n    );\n    return { ssoQueryParams: {} };\n  }\n\n  if (executionId || stepId) {\n    clearRunIdsFromUrl();\n  }\n\n  const token = getTokenFromUrl();\n  if (token) {\n    clearTokenFromUrl();\n  }\n\n  const code = getCodeFromUrl();\n  if (code) {\n    clearCodeFromUrl();\n  }\n\n  // this is used for oauth when we want to open the provider login page in a new tab\n  const isPopup = getIsPopupFromUrl();\n  if (isPopup) {\n    clearIsPopupFromUrl();\n  }\n\n  const exchangeError = getExchangeErrorFromUrl();\n  if (exchangeError) {\n    clearExchangeErrorFromUrl();\n  }\n\n  // these query params are retained to allow the flow to be refreshed\n  // without losing the redirect auth state\n  const {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  } = getRedirectAuthFromUrl();\n\n  const oidcIdpStateId = getOIDCIDPParamFromUrl();\n  if (oidcIdpStateId) {\n    clearOIDCIDPParamFromUrl();\n  }\n\n  const samlIdpStateId = getSAMLIDPParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPParamFromUrl();\n  }\n\n  const samlIdpUsername = getSAMLIDPUsernameParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPUsernameParamFromUrl();\n  }\n\n  const descopeIdpInitiated = getDescopeIDPInitiatedParamFromUrl();\n  if (descopeIdpInitiated) {\n    clearDescopeIDPInitiatedParamFromUrl();\n  }\n\n  const ssoAppId = getSSOAppIdParamFromUrl();\n  if (ssoAppId) {\n    clearSSOAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppId = getThirdPartyAppIdParamFromUrl();\n  if (thirdPartyAppId) {\n    clearThirdPartyAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppStateId = getThirdPartyAppStateIdParamFromUrl();\n  if (thirdPartyAppStateId) {\n    clearThirdPartyAppStateIdParamFromUrl();\n  }\n\n  const applicationScopes = getApplicationScopesParamFromUrl();\n  if (applicationScopes) {\n    clearApplicationScopesParamFromUrl();\n  }\n\n  const oidcLoginHint = getOIDCLoginHintParamFromUrl();\n  if (oidcLoginHint) {\n    clearOIDCLoginHintParamFromUrl();\n  }\n\n  const oidcPrompt = getOIDCPromptParamFromUrl();\n  if (oidcPrompt) {\n    clearOIDCPromptParamFromUrl();\n  }\n\n  const oidcErrorRedirectUri = getOIDCErrorRedirectUriParamFromUrl();\n  if (oidcErrorRedirectUri) {\n    clearOIDCErrorRedirectUriParamFromUrl();\n  }\n\n  const oidcResource = getOIDCResourceParamFromUrl();\n  if (oidcResource) {\n    clearOIDCResourceParamFromUrl();\n  }\n\n  const idpInitiatedVal = descopeIdpInitiated === 'true';\n\n  return {\n    executionId,\n    stepId,\n    token,\n    code,\n    isPopup,\n    exchangeError,\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n    ssoQueryParams: {\n      oidcIdpStateId,\n      samlIdpStateId,\n      samlIdpUsername,\n      descopeIdpInitiated: idpInitiatedVal,\n      ssoAppId,\n      oidcLoginHint,\n      oidcPrompt,\n      oidcErrorRedirectUri,\n      oidcResource,\n      thirdPartyAppId,\n      thirdPartyAppStateId,\n      applicationScopes,\n    },\n  };\n};\n\nexport const loadFont = (url: string) => {\n  if (!url) return;\n\n  const font = document.createElement('link');\n  font.href = url;\n  font.rel = 'stylesheet';\n  document.head.appendChild(font);\n};\n\nconst compareArrays = (array1: any[], array2: any[]) =>\n  array1.length === array2.length &&\n  array1.every((value: any, index: number) => value === array2[index]);\n\nexport const withMemCache = <I extends any[], O>(fn: (...args: I) => O) => {\n  let prevArgs: any[];\n  let cache: any;\n  return Object.assign(\n    (...args: I) => {\n      if (prevArgs && compareArrays(prevArgs, args)) return cache as O;\n\n      prevArgs = args;\n      cache = fn(...args);\n\n      return cache as O;\n    },\n    {\n      reset: () => {\n        prevArgs = undefined;\n        cache = undefined;\n      },\n    },\n  );\n};\n\nexport const handleAutoFocus = (\n  ele: HTMLElement,\n  autoFocus: AutoFocusOptions,\n  isFirstScreen: boolean,\n) => {\n  if (\n    autoFocus === true ||\n    (autoFocus === 'skipFirstScreen' && !isFirstScreen)\n  ) {\n    // focus the first visible input\n    const firstVisibleInput: HTMLInputElement = ele.querySelector('*[name]');\n    setTimeout(() => {\n      firstVisibleInput?.focus();\n    });\n  }\n};\n\nexport const handleReportValidityOnBlur = (rootEle: HTMLElement) => {\n  rootEle.querySelectorAll('*[name]').forEach((ele: HTMLInputElement) => {\n    ele.addEventListener('blur', () => {\n      const onBlur = () => {\n        // reportValidity also focus the element if it's invalid\n        // in order to prevent this we need to override the focus method\n        const origFocus = ele.focus;\n        // eslint-disable-next-line no-param-reassign\n        ele.focus = () => {};\n        ele.reportValidity?.();\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          ele.focus = origFocus;\n        });\n      };\n\n      const isInputAlreadyInErrorState = ele.getAttribute('invalid') === 'true';\n\n      if (isInputAlreadyInErrorState || ele.value?.length) {\n        onBlur();\n        return;\n      }\n\n      // If the input is not in an error state, has no value, and a `formnovalidate` button was clicked,\n      // we want to prevent triggering validation.\n      // This handles a case where a required input was focused, and the user then clicked a social login button —\n      // in that case, we don't want the required error message to flash for a split second.\n      const ref = { timer: undefined };\n\n      const onClick = (e: MouseEvent) => {\n        const target = e.target as HTMLElement;\n\n        if (target.getAttribute('formnovalidate') === 'true') {\n          clearTimeout(ref.timer);\n          ref.timer = undefined;\n        }\n      };\n\n      ref.timer = setTimeout(() => {\n        rootEle.removeEventListener('click', onClick);\n        onBlur();\n        ref.timer = undefined;\n      }, 150);\n\n      rootEle.addEventListener('click', onClick, { once: true });\n    });\n  });\n};\n\n/**\n * To return a fallback value in case the timeout expires and the promise\n * isn't fulfilled:\n *\n *   const promise = loadUserCount();\n *   const count = await timeoutPromise(2000, promise, 0);\n *\n * Or without a fallback value to just throw an error if the timeout expires:\n *\n *   try {\n *     count = await timeoutPromise(2000, promise);\n *   }\n *\n * Fallback is returned only in case of timeout, so if the passed promise rejects\n * the fallback value is not used, and the returned promise will throw as well.\n */\nexport function timeoutPromise<T>(\n  timeout: number,\n  promise: Promise<T>,\n  fallback?: T,\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let expired = false;\n    const timer = setTimeout(() => {\n      expired = true;\n      if (fallback !== undefined) {\n        resolve(fallback);\n      } else {\n        reject(new Error(`Promise timed out after ${timeout} ms`));\n      }\n    }, timeout);\n\n    promise\n      .then((value) => {\n        if (!expired) {\n          clearTimeout(timer);\n          resolve(value);\n        }\n      })\n      .catch((error) => {\n        if (!expired) {\n          clearTimeout(timer);\n          reject(error);\n        }\n      });\n  });\n}\n\nexport const getChromiumVersion = (): number => {\n  const brands = (navigator as any)?.userAgentData?.brands;\n  const found = brands?.find(\n    ({ brand, version }) => brand === 'Chromium' && parseFloat(version),\n  );\n  return found ? found.version : 0;\n};\n\n// As an optimization - We can show first screen if we have startScreenId and we don't have any other of the ssoAppId/oidcIdpStateId/samlIdp params\n// - If there startScreenId it means that the sdk can show the first screen and we don't need to wait for the sdk to return the first screen\n// - If there is any one else of the other params (like oidcIdpStateId, ..) - we can't skip this call because descope may decide not to show the first screen (in cases like a user is already logged in)\nexport const showFirstScreenOnExecutionInit = (\n  startScreenId: string,\n  {\n    oidcIdpStateId,\n    samlIdpStateId,\n    samlIdpUsername,\n    ssoAppId,\n    oidcLoginHint,\n    oidcPrompt,\n    oidcErrorRedirectUri,\n    oidcResource,\n    thirdPartyAppId,\n    thirdPartyAppStateId,\n    applicationScopes,\n  }: SSOQueryParams,\n): boolean =>\n  !!startScreenId &&\n  !oidcIdpStateId &&\n  !samlIdpStateId &&\n  !samlIdpUsername &&\n  !ssoAppId &&\n  !oidcLoginHint &&\n  !oidcPrompt &&\n  !oidcErrorRedirectUri &&\n  !oidcResource &&\n  !thirdPartyAppId &&\n  !thirdPartyAppStateId &&\n  !applicationScopes;\n\nexport const injectSamlIdpForm = (\n  url: string,\n  samlResponse: string,\n  relayState: string,\n  submitCallback: (form: HTMLFormElement) => void,\n) => {\n  const formEle = document.createElement('form');\n  formEle.method = 'POST';\n  formEle.action = url;\n  formEle.innerHTML = `\n  <input type=\"hidden\" role=\"saml-response\" name=\"SAMLResponse\" value=\"${samlResponse}\" />\n  <input type=\"hidden\" role=\"saml-relay-state\" name=\"RelayState\" value=\"${relayState}\" />\n  <input style=\"display: none;\" id=\"SAMLSubmitButton\" type=\"submit\" value=\"Continue\" />\n  `;\n\n  document.body.appendChild(formEle);\n\n  submitCallback(formEle);\n};\n\nexport const submitForm = (formEle: HTMLFormElement) => formEle?.submit();\n\nexport const getFirstNonEmptyValue = (obj: object, keys: string[]) => {\n  const firstNonEmptyKey = keys.find((key) => obj[key]);\n  return firstNonEmptyKey ? obj[firstNonEmptyKey] : null;\n};\n\nexport const leadingDebounce = <T extends (...args: any[]) => void>(\n  func: T,\n  wait = 100,\n) => {\n  let timeout: NodeJS.Timeout;\n  return function executedFunction(...args) {\n    if (!timeout) func.apply(this, args);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n    }, wait);\n  } as T;\n};\n\nexport function getUserLocale(locale: string): Locale {\n  if (locale) {\n    return { locale: locale.toLowerCase(), fallback: locale.toLowerCase() };\n  }\n  const nl = navigator.language;\n  if (!nl) {\n    return { locale: '', fallback: '' };\n  }\n\n  if (nl.includes('-')) {\n    return {\n      locale: nl.toLowerCase(),\n      fallback: nl.split('-')[0].toLowerCase(),\n    };\n  }\n\n  return { locale: nl.toLowerCase(), fallback: nl.toLowerCase() };\n}\n\nexport const clearPreviousExternalInputs = () => {\n  document\n    .querySelectorAll('[data-hidden-input=\"true\"]')\n    .forEach((ele) => ele.remove());\n};\n\nexport const shouldHandleMarkdown = (compName: string) =>\n  MD_COMPONENTS.includes(compName);\n\nconst omitBy = <T extends Record<string, any>>(\n  obj: T,\n  predicate: (value: any, key: keyof T) => boolean,\n): T =>\n  Object.fromEntries(\n    Object.entries(obj).filter(\n      ([key, value]) => !predicate(value, key as keyof T),\n    ),\n  ) as T;\n\nexport const transformStepStateForCustomScreen = (\n  state: Partial<StepState>,\n) => {\n  const sanitizedState: CustomScreenState = omitBy(\n    state.screenState,\n    (_, key) => EXCLUDED_STATE_KEYS.includes(key) || key.startsWith('_'),\n  );\n\n  const {\n    screenState: { errorText, errorType },\n  } = state;\n\n  if (errorText || errorType) {\n    sanitizedState.error = { text: errorText, type: errorType };\n  }\n\n  if (state.action) {\n    sanitizedState.action = state.action;\n  }\n\n  if (state.screenState?.componentsConfig?.thirdPartyAppApproveScopes?.data) {\n    sanitizedState.inboundAppApproveScopes =\n      state.screenState.componentsConfig.thirdPartyAppApproveScopes.data;\n  }\n\n  return sanitizedState;\n};\n\nexport const transformScreenInputs = (inputs: Record<string, any>) => {\n  const res = { ...inputs };\n\n  if (inputs.inboundAppApproveScopes) {\n    res.thirdPartyAppApproveScopes = inputs.inboundAppApproveScopes;\n  }\n\n  return res;\n};\n\nexport function getScriptResultPath(scriptId: string, resultKey?: string) {\n  const path = resultKey ? `${scriptId}_${resultKey}` : scriptId;\n  return `${SDK_SCRIPT_RESULTS_KEY}.${path}`;\n}\n\nexport const openCenteredPopup = (\n  url: string,\n  title: string,\n  w: number,\n  h: number,\n) => {\n  const dualScreenLeft =\n    window.screenLeft !== undefined\n      ? window.screenLeft\n      : (window.screen as any).left;\n  const dualScreenTop =\n    window.screenTop !== undefined\n      ? window.screenTop\n      : (window.screen as any).top;\n\n  const width =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    window.screen.width;\n  const height =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    window.screen.height;\n\n  const left = (width - w) / 2 + dualScreenLeft;\n  const top = (height - h) / 2 + dualScreenTop;\n\n  const popup = window.open(\n    url,\n    title,\n    `width=${w},height=${h},top=${top},left=${left},scrollbars=yes,resizable=yes`,\n  );\n\n  popup.focus();\n\n  return popup;\n};\n"],"names":["MD_COMPONENTS","getUrlParam","paramName","URLSearchParams","window","location","search","get","resetUrlParam","history","replaceState","newUrl","URL","href","delete","toString","fetchContent","url","returnType","res","fetch","cache","ok","Error","status","body","headers","Object","fromEntries","entries","getContentUrl","projectId","filename","assetsFolder","ASSETS_FOLDER","baseUrl","OVERRIDE_CONTENT_URL","BASE_CONTENT_URL","pathname","paths","join","replace","pathJoin","getAnimationDirection","currentIdxStr","prevIdxStr","currentIdx","prevIdx","Number","isNaN","Direction","forward","backward","getRunIdsFromUrl","flowId","executionId","stepId","URL_RUN_IDS_PARAM_NAME","split","executionFlowId","_a","exec","getFlowIdFromExecId","isChromium","test","navigator","userAgent","vendor","clearRunIdsFromUrl","getTokenFromUrl","URL_TOKEN_PARAM_NAME","undefined","clearTokenFromUrl","getCodeFromUrl","URL_CODE_PARAM_NAME","getIsPopupFromUrl","URL_REDIRECT_MODE_PARAM_NAME","getExchangeErrorFromUrl","URL_ERR_PARAM_NAME","clearCodeFromUrl","clearIsPopupFromUrl","clearExchangeErrorFromUrl","getRedirectAuthFromUrl","redirectAuthCodeChallenge","URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME","redirectAuthCallbackUrl","URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME","redirectAuthBackupCallbackUri","URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME","redirectAuthInitiator","URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME","getOIDCIDPParamFromUrl","OIDC_IDP_STATE_ID_PARAM_NAME","clearOIDCIDPParamFromUrl","getSAMLIDPParamFromUrl","SAML_IDP_STATE_ID_PARAM_NAME","clearSAMLIDPParamFromUrl","getSAMLIDPUsernameParamFromUrl","SAML_IDP_USERNAME_PARAM_NAME","clearSAMLIDPUsernameParamFromUrl","getDescopeIDPInitiatedParamFromUrl","DESCOPE_IDP_INITIATED_PARAM_NAME","clearDescopeIDPInitiatedParamFromUrl","getSSOAppIdParamFromUrl","SSO_APP_ID_PARAM_NAME","getThirdPartyAppIdParamFromUrl","THIRD_PARTY_APP_ID_PARAM_NAME","clearSSOAppIdParamFromUrl","clearThirdPartyAppIdParamFromUrl","getThirdPartyAppStateIdParamFromUrl","THIRD_PARTY_APP_STATE_ID_PARAM_NAME","clearThirdPartyAppStateIdParamFromUrl","getApplicationScopesParamFromUrl","APPLICATION_SCOPES_PARAM_NAME","clearApplicationScopesParamFromUrl","getOIDCLoginHintParamFromUrl","OIDC_LOGIN_HINT_PARAM_NAME","clearOIDCLoginHintParamFromUrl","getOIDCPromptParamFromUrl","OIDC_PROMPT_PARAM_NAME","clearOIDCPromptParamFromUrl","getOIDCErrorRedirectUriParamFromUrl","OIDC_ERROR_REDIRECT_URI_PARAM_NAME","clearOIDCErrorRedirectUriParamFromUrl","getOIDCResourceParamFromUrl","OIDC_RESOURCE_PARAM_NAME","clearOIDCResourceParamFromUrl","camelCase","s","x","toUpperCase","createIsChanged","state","prevState","attrName","getElementDescopeAttributes","ele","Array","from","attributes","reduce","acc","attr","descopeAttrName","RegExp","DESCOPE_ATTRIBUTE_PREFIX","name","assign","value","handleUrlParams","logger","debug","ssoQueryParams","token","code","isPopup","exchangeError","oidcIdpStateId","samlIdpStateId","samlIdpUsername","descopeIdpInitiated","ssoAppId","thirdPartyAppId","thirdPartyAppStateId","applicationScopes","oidcLoginHint","oidcPrompt","oidcErrorRedirectUri","oidcResource","withMemCache","fn","prevArgs","args","array2","array1","length","every","index","reset","handleAutoFocus","autoFocus","isFirstScreen","firstVisibleInput","querySelector","setTimeout","focus","handleReportValidityOnBlur","rootEle","querySelectorAll","forEach","addEventListener","onBlur","origFocus","reportValidity","call","getAttribute","ref","timer","onClick","e","target","clearTimeout","removeEventListener","once","timeoutPromise","timeout","promise","fallback","Promise","resolve","reject","expired","then","catch","error","getChromiumVersion","brands","userAgentData","found","find","brand","version","parseFloat","showFirstScreenOnExecutionInit","startScreenId","injectSamlIdpForm","samlResponse","relayState","submitCallback","formEle","document","createElement","method","action","innerHTML","appendChild","submitForm","submit","getFirstNonEmptyValue","obj","keys","firstNonEmptyKey","key","leadingDebounce","func","wait","apply","this","getUserLocale","locale","toLowerCase","nl","language","includes","clearPreviousExternalInputs","remove","shouldHandleMarkdown","compName","transformStepStateForCustomScreen","sanitizedState","screenState","predicate","_","EXCLUDED_STATE_KEYS","startsWith","filter","errorText","errorType","text","type","_c","_b","componentsConfig","thirdPartyAppApproveScopes","data","inboundAppApproveScopes","transformScreenInputs","inputs","getScriptResultPath","scriptId","resultKey","SDK_SCRIPT_RESULTS_KEY","openCenteredPopup","title","w","h","dualScreenLeft","screenLeft","screen","left","dualScreenTop","screenTop","top","innerWidth","documentElement","clientWidth","width","innerHeight","clientHeight","height","popup","open"],"mappings":"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"}