{"version":3,"file":"helpers.js","sources":["../../../src/lib/helpers/helpers.ts"],"sourcesContent":["import {\n  ASSETS_FOLDER,\n  BASE_CONTENT_URL,\n  DESCOPE_ATTRIBUTE_PREFIX,\n  URL_CODE_PARAM_NAME,\n  URL_ERR_PARAM_NAME,\n  URL_RUN_IDS_PARAM_NAME,\n  URL_TOKEN_PARAM_NAME,\n  URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  OIDC_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_STATE_ID_PARAM_NAME,\n  SAML_IDP_USERNAME_PARAM_NAME,\n  SSO_APP_ID_PARAM_NAME,\n  OIDC_LOGIN_HINT_PARAM_NAME,\n  DESCOPE_IDP_INITIATED_PARAM_NAME,\n  OVERRIDE_CONTENT_URL,\n  OIDC_PROMPT_PARAM_NAME,\n  OIDC_RESOURCE_PARAM_NAME,\n  OIDC_ERROR_REDIRECT_URI_PARAM_NAME,\n  THIRD_PARTY_APP_ID_PARAM_NAME,\n  THIRD_PARTY_APP_STATE_ID_PARAM_NAME,\n  APPLICATION_SCOPES_PARAM_NAME,\n  SDK_SCRIPT_RESULTS_KEY,\n  URL_REDIRECT_MODE_PARAM_NAME,\n} from '../constants';\nimport { EXCLUDED_STATE_KEYS } from '../constants/customScreens';\nimport {\n  AutoFocusOptions,\n  CustomScreenState,\n  Direction,\n  Locale,\n  SSOQueryParams,\n  StepState,\n} from '../types';\n\nconst MD_COMPONENTS = ['descope-enriched-text'];\n\nfunction getUrlParam(paramName: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  return urlParams.get(paramName);\n}\n\nfunction getFlowUrlParam() {\n  return getUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nfunction setFlowUrlParam(id: string) {\n  if (window.history.pushState && id !== getFlowUrlParam()) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.set(URL_RUN_IDS_PARAM_NAME, id);\n    newUrl.search = search.toString();\n    window.history.pushState({}, '', newUrl.toString());\n  }\n}\n\nfunction resetUrlParam(paramName: string) {\n  if (window.history.replaceState && getUrlParam(paramName)) {\n    const newUrl = new URL(window.location.href);\n    const search = new URLSearchParams(newUrl.search);\n    search.delete(paramName);\n    newUrl.search = search.toString();\n    window.history.replaceState({}, '', newUrl.toString());\n  }\n}\n\nconst getFlowIdFromExecId = (executionId: string) => {\n  const regex = /(.*)\\|#\\|.*/;\n  return regex.exec(executionId)?.[1] || '';\n};\n\nexport async function fetchContent<T extends 'text' | 'json'>(\n  url: string,\n  returnType: T,\n): Promise<{\n  body: T extends 'json' ? Record<string, any> : string;\n  headers: Record<string, string>;\n}> {\n  const res = await fetch(url, { cache: 'default' });\n  if (!res.ok) {\n    throw Error(`Error fetching URL ${url} [${res.status}]`);\n  }\n\n  return {\n    body: await res[returnType || 'text'](),\n    headers: Object.fromEntries(res.headers.entries()),\n  };\n}\n\nconst pathJoin = (...paths: string[]) => paths.join('/').replace(/\\/+/g, '/'); // preventing duplicate separators\n\nexport function getContentUrl({\n  projectId,\n  filename,\n  assetsFolder = ASSETS_FOLDER,\n  baseUrl,\n}: {\n  projectId: string;\n  filename: string;\n  assetsFolder?: string;\n  baseUrl?: string;\n}) {\n  const url = new URL(OVERRIDE_CONTENT_URL || baseUrl || BASE_CONTENT_URL);\n  url.pathname = pathJoin(url.pathname, projectId, assetsFolder, filename);\n\n  return url.toString();\n}\n\nexport function getAnimationDirection(\n  currentIdxStr: string,\n  prevIdxStr: string,\n) {\n  if (!prevIdxStr) return undefined;\n\n  const currentIdx = +currentIdxStr;\n  const prevIdx = +prevIdxStr;\n\n  if (Number.isNaN(currentIdx) || Number.isNaN(prevIdx)) return undefined;\n  if (currentIdx > prevIdx) return Direction.forward;\n  if (currentIdx < prevIdx) return Direction.backward;\n  return undefined;\n}\n\nexport const getRunIdsFromUrl = (flowId: string) => {\n  let [executionId = '', stepId = ''] = (getFlowUrlParam() || '').split('_');\n  const executionFlowId = getFlowIdFromExecId(executionId);\n\n  // if the flow id does not match, this execution id is not for this flow\n  if (!flowId || (executionFlowId && executionFlowId !== flowId)) {\n    executionId = '';\n    stepId = '';\n  }\n\n  return { executionId, stepId, executionFlowId };\n};\n\nexport const setRunIdsOnUrl = (executionId: string, stepId: string) => {\n  setFlowUrlParam([executionId, stepId].join('_'));\n};\n\nexport function isChromium() {\n  return (\n    /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)\n  );\n}\n\nexport function clearRunIdsFromUrl() {\n  resetUrlParam(URL_RUN_IDS_PARAM_NAME);\n}\n\nexport function getTokenFromUrl() {\n  return getUrlParam(URL_TOKEN_PARAM_NAME) || undefined;\n}\n\nexport function clearTokenFromUrl() {\n  resetUrlParam(URL_TOKEN_PARAM_NAME);\n}\n\nexport function getCodeFromUrl() {\n  return getUrlParam(URL_CODE_PARAM_NAME) || undefined;\n}\n\nexport function getIsPopupFromUrl() {\n  return getUrlParam(URL_REDIRECT_MODE_PARAM_NAME) === 'popup';\n}\n\nexport function getExchangeErrorFromUrl() {\n  return getUrlParam(URL_ERR_PARAM_NAME) || undefined;\n}\n\nexport function clearCodeFromUrl() {\n  resetUrlParam(URL_CODE_PARAM_NAME);\n}\n\nexport function clearIsPopupFromUrl() {\n  resetUrlParam(URL_REDIRECT_MODE_PARAM_NAME);\n}\n\nexport function clearExchangeErrorFromUrl() {\n  resetUrlParam(URL_ERR_PARAM_NAME);\n}\n\nexport function getRedirectAuthFromUrl() {\n  const redirectAuthCodeChallenge = getUrlParam(\n    URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME,\n  );\n  const redirectAuthCallbackUrl = getUrlParam(\n    URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthBackupCallbackUri = getUrlParam(\n    URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME,\n  );\n  const redirectAuthInitiator = getUrlParam(\n    URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME,\n  );\n  return {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  };\n}\n\nexport function getOIDCIDPParamFromUrl() {\n  return getUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearOIDCIDPParamFromUrl() {\n  resetUrlParam(OIDC_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPParamFromUrl() {\n  return getUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearSAMLIDPParamFromUrl() {\n  resetUrlParam(SAML_IDP_STATE_ID_PARAM_NAME);\n}\n\nexport function getSAMLIDPUsernameParamFromUrl() {\n  return getUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function clearSAMLIDPUsernameParamFromUrl() {\n  resetUrlParam(SAML_IDP_USERNAME_PARAM_NAME);\n}\n\nexport function getDescopeIDPInitiatedParamFromUrl() {\n  return getUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function clearDescopeIDPInitiatedParamFromUrl() {\n  resetUrlParam(DESCOPE_IDP_INITIATED_PARAM_NAME);\n}\n\nexport function getSSOAppIdParamFromUrl() {\n  return getUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function clearSSOAppIdParamFromUrl() {\n  resetUrlParam(SSO_APP_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_ID_PARAM_NAME);\n}\n\nexport function getThirdPartyAppStateIdParamFromUrl() {\n  return getUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function clearThirdPartyAppStateIdParamFromUrl() {\n  resetUrlParam(THIRD_PARTY_APP_STATE_ID_PARAM_NAME);\n}\n\nexport function getApplicationScopesParamFromUrl() {\n  return getUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function clearApplicationScopesParamFromUrl() {\n  resetUrlParam(APPLICATION_SCOPES_PARAM_NAME);\n}\n\nexport function getOIDCLoginHintParamFromUrl() {\n  return getUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function clearOIDCLoginHintParamFromUrl() {\n  resetUrlParam(OIDC_LOGIN_HINT_PARAM_NAME);\n}\n\nexport function getOIDCPromptParamFromUrl() {\n  return getUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function clearOIDCPromptParamFromUrl() {\n  resetUrlParam(OIDC_PROMPT_PARAM_NAME);\n}\n\nexport function getOIDCErrorRedirectUriParamFromUrl() {\n  return getUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function clearOIDCErrorRedirectUriParamFromUrl() {\n  resetUrlParam(OIDC_ERROR_REDIRECT_URI_PARAM_NAME);\n}\n\nexport function getOIDCResourceParamFromUrl() {\n  return getUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport function clearOIDCResourceParamFromUrl() {\n  resetUrlParam(OIDC_RESOURCE_PARAM_NAME);\n}\n\nexport const camelCase = (s: string) =>\n  s.replace(/-./g, (x) => x[1].toUpperCase());\n\nexport const createIsChanged =\n  <T extends Record<string, any>>(state: T, prevState: T) =>\n  (attrName: keyof T) =>\n    state[attrName] !== prevState[attrName];\n\nexport const getElementDescopeAttributes = (ele: HTMLElement) =>\n  Array.from(ele?.attributes || []).reduce((acc, attr) => {\n    const descopeAttrName = new RegExp(\n      `^${DESCOPE_ATTRIBUTE_PREFIX}(\\\\S+)$`,\n    ).exec(attr.name)?.[1];\n\n    return !descopeAttrName\n      ? acc\n      : Object.assign(acc, { [descopeAttrName]: attr.value });\n  }, {});\n\nexport const getFlowConfig = (config: Record<string, any>, flowId: string) =>\n  config?.flows?.[flowId] || {};\n\nexport const handleUrlParams = (\n  flowId: string,\n  logger: { debug: (...data: any[]) => void },\n) => {\n  const { executionId, stepId, executionFlowId } = getRunIdsFromUrl(flowId);\n\n  // if the flow id does not match, we do not want to read & remove any query params\n  // because it's probably belongs to another flow\n  if (executionFlowId && flowId !== executionFlowId) {\n    logger.debug(\n      'Flow id does not match the execution flow id, skipping url params handling',\n    );\n    return { ssoQueryParams: {} };\n  }\n\n  if (executionId || stepId) {\n    clearRunIdsFromUrl();\n  }\n\n  const token = getTokenFromUrl();\n  if (token) {\n    clearTokenFromUrl();\n  }\n\n  const code = getCodeFromUrl();\n  if (code) {\n    clearCodeFromUrl();\n  }\n\n  // this is used for oauth when we want to open the provider login page in a new tab\n  const isPopup = getIsPopupFromUrl();\n  if (isPopup) {\n    clearIsPopupFromUrl();\n  }\n\n  const exchangeError = getExchangeErrorFromUrl();\n  if (exchangeError) {\n    clearExchangeErrorFromUrl();\n  }\n\n  // these query params are retained to allow the flow to be refreshed\n  // without losing the redirect auth state\n  const {\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n  } = getRedirectAuthFromUrl();\n\n  const oidcIdpStateId = getOIDCIDPParamFromUrl();\n  if (oidcIdpStateId) {\n    clearOIDCIDPParamFromUrl();\n  }\n\n  const samlIdpStateId = getSAMLIDPParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPParamFromUrl();\n  }\n\n  const samlIdpUsername = getSAMLIDPUsernameParamFromUrl();\n  if (samlIdpStateId) {\n    clearSAMLIDPUsernameParamFromUrl();\n  }\n\n  const descopeIdpInitiated = getDescopeIDPInitiatedParamFromUrl();\n  if (descopeIdpInitiated) {\n    clearDescopeIDPInitiatedParamFromUrl();\n  }\n\n  const ssoAppId = getSSOAppIdParamFromUrl();\n  if (ssoAppId) {\n    clearSSOAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppId = getThirdPartyAppIdParamFromUrl();\n  if (thirdPartyAppId) {\n    clearThirdPartyAppIdParamFromUrl();\n  }\n\n  const thirdPartyAppStateId = getThirdPartyAppStateIdParamFromUrl();\n  if (thirdPartyAppStateId) {\n    clearThirdPartyAppStateIdParamFromUrl();\n  }\n\n  const applicationScopes = getApplicationScopesParamFromUrl();\n  if (applicationScopes) {\n    clearApplicationScopesParamFromUrl();\n  }\n\n  const oidcLoginHint = getOIDCLoginHintParamFromUrl();\n  if (oidcLoginHint) {\n    clearOIDCLoginHintParamFromUrl();\n  }\n\n  const oidcPrompt = getOIDCPromptParamFromUrl();\n  if (oidcPrompt) {\n    clearOIDCPromptParamFromUrl();\n  }\n\n  const oidcErrorRedirectUri = getOIDCErrorRedirectUriParamFromUrl();\n  if (oidcErrorRedirectUri) {\n    clearOIDCErrorRedirectUriParamFromUrl();\n  }\n\n  const oidcResource = getOIDCResourceParamFromUrl();\n  if (oidcResource) {\n    clearOIDCResourceParamFromUrl();\n  }\n\n  const idpInitiatedVal = descopeIdpInitiated === 'true';\n\n  return {\n    executionId,\n    stepId,\n    token,\n    code,\n    isPopup,\n    exchangeError,\n    redirectAuthCodeChallenge,\n    redirectAuthCallbackUrl,\n    redirectAuthBackupCallbackUri,\n    redirectAuthInitiator,\n    ssoQueryParams: {\n      oidcIdpStateId,\n      samlIdpStateId,\n      samlIdpUsername,\n      descopeIdpInitiated: idpInitiatedVal,\n      ssoAppId,\n      oidcLoginHint,\n      oidcPrompt,\n      oidcErrorRedirectUri,\n      oidcResource,\n      thirdPartyAppId,\n      thirdPartyAppStateId,\n      applicationScopes,\n    },\n  };\n};\n\nexport const loadFont = (url: string) => {\n  if (!url) return;\n\n  const font = document.createElement('link');\n  font.href = url;\n  font.rel = 'stylesheet';\n  document.head.appendChild(font);\n};\n\nconst compareArrays = (array1: any[], array2: any[]) =>\n  array1.length === array2.length &&\n  array1.every((value: any, index: number) => value === array2[index]);\n\nexport const withMemCache = <I extends any[], O>(fn: (...args: I) => O) => {\n  let prevArgs: any[];\n  let cache: any;\n  return Object.assign(\n    (...args: I) => {\n      if (prevArgs && compareArrays(prevArgs, args)) return cache as O;\n\n      prevArgs = args;\n      cache = fn(...args);\n\n      return cache as O;\n    },\n    {\n      reset: () => {\n        prevArgs = undefined;\n        cache = undefined;\n      },\n    },\n  );\n};\n\nexport const handleAutoFocus = (\n  ele: HTMLElement,\n  autoFocus: AutoFocusOptions,\n  isFirstScreen: boolean,\n) => {\n  if (\n    autoFocus === true ||\n    (autoFocus === 'skipFirstScreen' && !isFirstScreen)\n  ) {\n    // focus the first visible input\n    const firstVisibleInput: HTMLInputElement = ele.querySelector('*[name]');\n    setTimeout(() => {\n      firstVisibleInput?.focus();\n    });\n  }\n};\n\nexport const handleReportValidityOnBlur = (rootEle: HTMLElement) => {\n  rootEle.querySelectorAll('*[name]').forEach((ele: HTMLInputElement) => {\n    ele.addEventListener('blur', () => {\n      const onBlur = () => {\n        // reportValidity also focus the element if it's invalid\n        // in order to prevent this we need to override the focus method\n        const origFocus = ele.focus;\n        // eslint-disable-next-line no-param-reassign\n        ele.focus = () => {};\n        ele.reportValidity?.();\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          ele.focus = origFocus;\n        });\n      };\n\n      const isInputAlreadyInErrorState = ele.getAttribute('invalid') === 'true';\n\n      if (isInputAlreadyInErrorState || ele.value?.length) {\n        onBlur();\n        return;\n      }\n\n      // If the input is not in an error state, has no value, and a `formnovalidate` button was clicked,\n      // we want to prevent triggering validation.\n      // This handles a case where a required input was focused, and the user then clicked a social login button —\n      // in that case, we don't want the required error message to flash for a split second.\n      const ref = { timer: undefined };\n\n      const onClick = (e: MouseEvent) => {\n        const target = e.target as HTMLElement;\n\n        if (target.getAttribute('formnovalidate') === 'true') {\n          clearTimeout(ref.timer);\n          ref.timer = undefined;\n        }\n      };\n\n      ref.timer = setTimeout(() => {\n        rootEle.removeEventListener('click', onClick);\n        onBlur();\n        ref.timer = undefined;\n      }, 150);\n\n      rootEle.addEventListener('click', onClick, { once: true });\n    });\n  });\n};\n\n/**\n * To return a fallback value in case the timeout expires and the promise\n * isn't fulfilled:\n *\n *   const promise = loadUserCount();\n *   const count = await timeoutPromise(2000, promise, 0);\n *\n * Or without a fallback value to just throw an error if the timeout expires:\n *\n *   try {\n *     count = await timeoutPromise(2000, promise);\n *   }\n *\n * Fallback is returned only in case of timeout, so if the passed promise rejects\n * the fallback value is not used, and the returned promise will throw as well.\n */\nexport function timeoutPromise<T>(\n  timeout: number,\n  promise: Promise<T>,\n  fallback?: T,\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let expired = false;\n    const timer = setTimeout(() => {\n      expired = true;\n      if (fallback !== undefined) {\n        resolve(fallback);\n      } else {\n        reject(new Error(`Promise timed out after ${timeout} ms`));\n      }\n    }, timeout);\n\n    promise\n      .then((value) => {\n        if (!expired) {\n          clearTimeout(timer);\n          resolve(value);\n        }\n      })\n      .catch((error) => {\n        if (!expired) {\n          clearTimeout(timer);\n          reject(error);\n        }\n      });\n  });\n}\n\nexport const getChromiumVersion = (): number => {\n  const brands = (navigator as any)?.userAgentData?.brands;\n  const found = brands?.find(\n    ({ brand, version }) => brand === 'Chromium' && parseFloat(version),\n  );\n  return found ? found.version : 0;\n};\n\n// As an optimization - We can show first screen if we have startScreenId and we don't have any other of the ssoAppId/oidcIdpStateId/samlIdp params\n// - If there startScreenId it means that the sdk can show the first screen and we don't need to wait for the sdk to return the first screen\n// - If there is any one else of the other params (like oidcIdpStateId, ..) - we can't skip this call because descope may decide not to show the first screen (in cases like a user is already logged in)\nexport const showFirstScreenOnExecutionInit = (\n  startScreenId: string,\n  {\n    oidcIdpStateId,\n    samlIdpStateId,\n    samlIdpUsername,\n    ssoAppId,\n    oidcLoginHint,\n    oidcPrompt,\n    oidcErrorRedirectUri,\n    oidcResource,\n    thirdPartyAppId,\n    thirdPartyAppStateId,\n    applicationScopes,\n  }: SSOQueryParams,\n): boolean =>\n  !!startScreenId &&\n  !oidcIdpStateId &&\n  !samlIdpStateId &&\n  !samlIdpUsername &&\n  !ssoAppId &&\n  !oidcLoginHint &&\n  !oidcPrompt &&\n  !oidcErrorRedirectUri &&\n  !oidcResource &&\n  !thirdPartyAppId &&\n  !thirdPartyAppStateId &&\n  !applicationScopes;\n\nexport const injectSamlIdpForm = (\n  url: string,\n  samlResponse: string,\n  relayState: string,\n  submitCallback: (form: HTMLFormElement) => void,\n) => {\n  const formEle = document.createElement('form');\n  formEle.method = 'POST';\n  formEle.action = url;\n  formEle.innerHTML = `\n  <input type=\"hidden\" role=\"saml-response\" name=\"SAMLResponse\" value=\"${samlResponse}\" />\n  <input type=\"hidden\" role=\"saml-relay-state\" name=\"RelayState\" value=\"${relayState}\" />\n  <input style=\"display: none;\" id=\"SAMLSubmitButton\" type=\"submit\" value=\"Continue\" />\n  `;\n\n  document.body.appendChild(formEle);\n\n  submitCallback(formEle);\n};\n\nexport const submitForm = (formEle: HTMLFormElement) => formEle?.submit();\n\nexport const getFirstNonEmptyValue = (obj: object, keys: string[]) => {\n  const firstNonEmptyKey = keys.find((key) => obj[key]);\n  return firstNonEmptyKey ? obj[firstNonEmptyKey] : null;\n};\n\nexport const leadingDebounce = <T extends (...args: any[]) => void>(\n  func: T,\n  wait = 100,\n) => {\n  let timeout: NodeJS.Timeout;\n  return function executedFunction(...args) {\n    if (!timeout) func.apply(this, args);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n    }, wait);\n  } as T;\n};\n\nexport function getUserLocale(locale: string): Locale {\n  if (locale) {\n    return { locale: locale.toLowerCase(), fallback: locale.toLowerCase() };\n  }\n  const nl = navigator.language;\n  if (!nl) {\n    return { locale: '', fallback: '' };\n  }\n\n  if (nl.includes('-')) {\n    return {\n      locale: nl.toLowerCase(),\n      fallback: nl.split('-')[0].toLowerCase(),\n    };\n  }\n\n  return { locale: nl.toLowerCase(), fallback: nl.toLowerCase() };\n}\n\nexport const clearPreviousExternalInputs = () => {\n  document\n    .querySelectorAll('[data-hidden-input=\"true\"]')\n    .forEach((ele) => ele.remove());\n};\n\nexport const shouldHandleMarkdown = (compName: string) =>\n  MD_COMPONENTS.includes(compName);\n\nconst omitBy = <T extends Record<string, any>>(\n  obj: T,\n  predicate: (value: any, key: keyof T) => boolean,\n): T =>\n  Object.fromEntries(\n    Object.entries(obj).filter(\n      ([key, value]) => !predicate(value, key as keyof T),\n    ),\n  ) as T;\n\nexport const transformStepStateForCustomScreen = (\n  state: Partial<StepState>,\n) => {\n  const sanitizedState: CustomScreenState = omitBy(\n    state.screenState,\n    (_, key) => EXCLUDED_STATE_KEYS.includes(key) || key.startsWith('_'),\n  );\n\n  const {\n    screenState: { errorText, errorType },\n  } = state;\n\n  if (errorText || errorType) {\n    sanitizedState.error = { text: errorText, type: errorType };\n  }\n\n  if (state.action) {\n    sanitizedState.action = state.action;\n  }\n\n  if (state.screenState?.componentsConfig?.thirdPartyAppApproveScopes?.data) {\n    sanitizedState.inboundAppApproveScopes =\n      state.screenState.componentsConfig.thirdPartyAppApproveScopes.data;\n  }\n\n  return sanitizedState;\n};\n\nexport const transformScreenInputs = (inputs: Record<string, any>) => {\n  const res = { ...inputs };\n\n  if (inputs.inboundAppApproveScopes) {\n    res.thirdPartyAppApproveScopes = inputs.inboundAppApproveScopes;\n  }\n\n  return res;\n};\n\nexport function getScriptResultPath(scriptId: string, resultKey?: string) {\n  const path = resultKey ? `${scriptId}_${resultKey}` : scriptId;\n  return `${SDK_SCRIPT_RESULTS_KEY}.${path}`;\n}\n\nexport const openCenteredPopup = (\n  url: string,\n  title: string,\n  w: number,\n  h: number,\n) => {\n  const dualScreenLeft =\n    window.screenLeft !== undefined\n      ? window.screenLeft\n      : (window.screen as any).left;\n  const dualScreenTop =\n    window.screenTop !== undefined\n      ? window.screenTop\n      : (window.screen as any).top;\n\n  const width =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    window.screen.width;\n  const height =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    window.screen.height;\n\n  const left = (width - w) / 2 + dualScreenLeft;\n  const top = (height - h) / 2 + dualScreenTop;\n\n  const popup = window.open(\n    url,\n    title,\n    `width=${w},height=${h},top=${top},left=${left},scrollbars=yes,resizable=yes`,\n  );\n\n  popup.focus();\n\n  return popup;\n};\n"],"names":["MD_COMPONENTS","getUrlParam","paramName","URLSearchParams","window","location","search","get","resetUrlParam","history","replaceState","newUrl","URL","href","delete","toString","getRunIdsFromUrl","flowId","executionId","stepId","URL_RUN_IDS_PARAM_NAME","split","executionFlowId","_a","exec","getFlowIdFromExecId","clearRunIdsFromUrl","getTokenFromUrl","URL_TOKEN_PARAM_NAME","undefined","clearTokenFromUrl","getCodeFromUrl","URL_CODE_PARAM_NAME","getIsPopupFromUrl","URL_REDIRECT_MODE_PARAM_NAME","getExchangeErrorFromUrl","URL_ERR_PARAM_NAME","clearCodeFromUrl","clearIsPopupFromUrl","clearExchangeErrorFromUrl","getRedirectAuthFromUrl","redirectAuthCodeChallenge","URL_REDIRECT_AUTH_CHALLENGE_PARAM_NAME","redirectAuthCallbackUrl","URL_REDIRECT_AUTH_CALLBACK_PARAM_NAME","redirectAuthBackupCallbackUri","URL_REDIRECT_AUTH_BACKUP_CALLBACK_PARAM_NAME","redirectAuthInitiator","URL_REDIRECT_AUTH_INITIATOR_PARAM_NAME","getOIDCIDPParamFromUrl","OIDC_IDP_STATE_ID_PARAM_NAME","clearOIDCIDPParamFromUrl","getSAMLIDPParamFromUrl","SAML_IDP_STATE_ID_PARAM_NAME","clearSAMLIDPParamFromUrl","getSAMLIDPUsernameParamFromUrl","SAML_IDP_USERNAME_PARAM_NAME","clearSAMLIDPUsernameParamFromUrl","getDescopeIDPInitiatedParamFromUrl","DESCOPE_IDP_INITIATED_PARAM_NAME","clearDescopeIDPInitiatedParamFromUrl","getSSOAppIdParamFromUrl","SSO_APP_ID_PARAM_NAME","getThirdPartyAppIdParamFromUrl","THIRD_PARTY_APP_ID_PARAM_NAME","clearSSOAppIdParamFromUrl","clearThirdPartyAppIdParamFromUrl","getThirdPartyAppStateIdParamFromUrl","THIRD_PARTY_APP_STATE_ID_PARAM_NAME","clearThirdPartyAppStateIdParamFromUrl","getApplicationScopesParamFromUrl","APPLICATION_SCOPES_PARAM_NAME","clearApplicationScopesParamFromUrl","getOIDCLoginHintParamFromUrl","OIDC_LOGIN_HINT_PARAM_NAME","clearOIDCLoginHintParamFromUrl","getOIDCPromptParamFromUrl","OIDC_PROMPT_PARAM_NAME","clearOIDCPromptParamFromUrl","getOIDCErrorRedirectUriParamFromUrl","OIDC_ERROR_REDIRECT_URI_PARAM_NAME","clearOIDCErrorRedirectUriParamFromUrl","getOIDCResourceParamFromUrl","OIDC_RESOURCE_PARAM_NAME","clearOIDCResourceParamFromUrl","s","replace","x","toUpperCase","document","querySelectorAll","forEach","ele","remove","state","prevState","attrName","url","returnType","res","fetch","cache","ok","Error","status","body","headers","Object","fromEntries","entries","currentIdxStr","prevIdxStr","currentIdx","prevIdx","Number","isNaN","Direction","forward","backward","brands","navigator","userAgentData","found","find","brand","version","parseFloat","projectId","filename","assetsFolder","ASSETS_FOLDER","baseUrl","OVERRIDE_CONTENT_URL","BASE_CONTENT_URL","pathname","paths","join","pathJoin","Array","from","attributes","reduce","acc","attr","descopeAttrName","RegExp","DESCOPE_ATTRIBUTE_PREFIX","name","assign","value","obj","keys","firstNonEmptyKey","key","scriptId","resultKey","path","SDK_SCRIPT_RESULTS_KEY","locale","toLowerCase","fallback","nl","language","includes","autoFocus","isFirstScreen","firstVisibleInput","querySelector","setTimeout","focus","rootEle","addEventListener","onBlur","origFocus","reportValidity","call","getAttribute","length","ref","timer","onClick","e","target","clearTimeout","removeEventListener","once","logger","debug","ssoQueryParams","token","code","isPopup","exchangeError","oidcIdpStateId","samlIdpStateId","samlIdpUsername","descopeIdpInitiated","ssoAppId","thirdPartyAppId","thirdPartyAppStateId","applicationScopes","oidcLoginHint","oidcPrompt","oidcErrorRedirectUri","oidcResource","samlResponse","relayState","submitCallback","formEle","createElement","method","action","innerHTML","appendChild","test","userAgent","vendor","func","wait","timeout","args","apply","this","title","w","h","dualScreenLeft","screenLeft","screen","left","dualScreenTop","screenTop","top","innerWidth","documentElement","clientWidth","width","innerHeight","clientHeight","height","popup","open","compName","startScreenId","submit","promise","Promise","resolve","reject","expired","then","catch","error","inputs","inboundAppApproveScopes","thirdPartyAppApproveScopes","sanitizedState","screenState","predicate","_","EXCLUDED_STATE_KEYS","startsWith","filter","errorText","errorType","text","type","_c","_b","componentsConfig","data","fn","prevArgs","array2","array1","every","index","reset"],"mappings":"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"}