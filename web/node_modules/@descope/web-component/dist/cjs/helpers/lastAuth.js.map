{"version":3,"file":"lastAuth.js","sources":["../../../src/lib/helpers/lastAuth.ts"],"sourcesContent":["import {\n  DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY,\n  IS_LOCAL_STORAGE,\n} from '../constants';\nimport { NextFnReturnPromiseValue } from '../types';\n\nexport function getLastAuth(loginId: string) {\n  const lastAuth = {};\n  try {\n    Object.assign(\n      lastAuth,\n      JSON.parse(localStorage.getItem(DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY)),\n    );\n  } catch (e) {\n    /* empty */\n  }\n\n  if (!(lastAuth as any)?.loginId && !loginId) {\n    return {};\n  }\n  return lastAuth;\n}\n\n// save last auth to local storage\nexport function setLastAuth(\n  lastAuth: NextFnReturnPromiseValue['data']['lastAuth'],\n  forceLoginId?: boolean,\n) {\n  if (!lastAuth?.authMethod) {\n    return;\n  }\n  if (forceLoginId && !(lastAuth as any)?.loginId) {\n    return;\n  }\n  if (IS_LOCAL_STORAGE) {\n    localStorage.setItem(\n      DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY,\n      JSON.stringify(lastAuth),\n    );\n  }\n}\n"],"names":["loginId","lastAuth","Object","assign","JSON","parse","localStorage","getItem","DESCOPE_LAST_AUTH_LOCAL_STORAGE_KEY","e","forceLoginId","authMethod","IS_LOCAL_STORAGE","setItem","stringify"],"mappings":"6GAMM,SAAsBA,GAC1B,MAAMC,EAAW,CAAA,EACjB,IACEC,OAAOC,OACLF,EACAG,KAAKC,MAAMC,aAAaC,QAAQC,wCAEnC,CAAC,MAAOC,GAER,CAED,OAAMR,aAAA,EAAAA,EAAkBD,UAAYA,EAG7BC,EAFE,EAGX,sBAGgB,SACdA,EACAS,IAEKT,aAAA,EAAAA,EAAUU,cAGXD,KAAkBT,aAAQ,EAARA,EAAkBD,UAGpCY,oBACFN,aAAaO,QACXL,EAAmCA,oCACnCJ,KAAKU,UAAUb,IAGrB"}