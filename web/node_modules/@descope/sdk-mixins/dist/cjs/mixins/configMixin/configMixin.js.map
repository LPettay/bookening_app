{"version":3,"file":"configMixin.js","sources":["../../../../src/mixins/configMixin/configMixin.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { staticResourcesMixin } from '../staticResourcesMixin';\nimport { CONFIG_FILENAME } from './constants';\nimport { Config, ProjectConfiguration } from './types';\nimport { resetMixin } from '../resetMixin';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\n\nexport const configMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      resetMixin,\n      initLifecycleMixin,\n    )(superclass);\n\n    return class ConfigMixinClass extends BaseClass {\n      async init() {\n        await super.init();\n        this.onReset('config', this.#configCacheClear.bind(this));\n      }\n\n      get config() {\n        if (!this.#_configResource) {\n          this.#_configResource = this.#fetchConfig();\n        }\n\n        return this.#_configResource;\n      }\n\n      #configCacheClear() {\n        this.#_configResource = undefined;\n      }\n\n      #_configResource: Promise<Config>;\n\n      #fetchConfig: () => Promise<Config> = async () => {\n        try {\n          const {\n            body,\n            headers,\n          }: { body: ProjectConfiguration; headers: Record<string, any> } =\n            await (<any>this.fetchStaticResource(CONFIG_FILENAME, 'json'));\n          return {\n            projectConfig: body as ProjectConfiguration,\n            executionContext: { geo: headers['x-geo'] },\n          };\n        } catch (e) {\n          this.logger.error(\n            'Cannot fetch config file',\n            'make sure that your projectId & flowId are correct',\n          );\n        }\n\n        return undefined;\n      };\n    };\n  },\n);\n"],"names":["createSingletonMixin","compose","staticResourcesMixin","resetMixin","initLifecycleMixin","CONFIG_FILENAME","__classPrivateFieldGet","__classPrivateFieldSet"],"mappings":";;;;;;;;;MAQa,WAAW,GAAGA,+BAAoB,CAC7C,CAAqC,UAAa,KAAI;;AACpD,IAAA,MAAM,SAAS,GAAGC,kBAAO,CACvBC,yCAAoB,EACpBC,qBAAU,EACVC,qCAAkB,CACnB,CAAC,UAAU,CAAC,CAAC;IAEd,OAAO,EAAA,GAAA,MAAM,gBAAiB,SAAQ,SAAS,CAAA;AAAxC,YAAA,WAAA,GAAA;;;gBAkBL,iCAAkC,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;gBAElC,6BAAsC,CAAA,GAAA,CAAA,IAAA,EAAA,YAAW;AAC/C,oBAAA,IAAI;AACF,wBAAA,MAAM,EACJ,IAAI,EACJ,OAAO,GACR,GACC,MAAY,IAAI,CAAC,mBAAmB,CAACC,yBAAe,EAAE,MAAM,CAAE,CAAC;wBACjE,OAAO;AACL,4BAAA,aAAa,EAAE,IAA4B;4BAC3C,gBAAgB,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE;yBAC5C,CAAC;qBACH;oBAAC,OAAO,CAAC,EAAE;wBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,0BAA0B,EAC1B,oDAAoD,CACrD,CAAC;qBACH;AAED,oBAAA,OAAO,SAAS,CAAC;AACnB,iBAAC,CAAC,CAAA;aACH;AAvCC,YAAA,MAAM,IAAI,GAAA;AACR,gBAAA,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAEC,4BAAA,CAAA,IAAI,EAAkB,2BAAA,EAAA,GAAA,EAAA,kCAAA,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D;AAED,YAAA,IAAI,MAAM,GAAA;AACR,gBAAA,IAAI,CAACA,4BAAA,CAAA,IAAI,EAAA,iCAAA,EAAA,GAAA,CAAiB,EAAE;oBAC1BC,4BAAA,CAAA,IAAI,qCAAoBD,4BAAA,CAAA,IAAI,qCAAa,CAAjB,IAAA,CAAA,IAAI,CAAe,EAAA,GAAA,CAAA,CAAC;iBAC7C;gBAED,OAAOA,4BAAA,CAAA,IAAI,EAAA,iCAAA,EAAA,GAAA,CAAiB,CAAC;aAC9B;AA4BF,SAAA;;;;;AAzBG,YAAAC,4BAAA,CAAA,IAAI,EAAA,iCAAA,EAAoB,SAAS,EAAA,GAAA,CAAA,CAAC;SACnC;AAwBD,QAAA,EAAA,CAAA;AACJ,CAAC;;;;"}