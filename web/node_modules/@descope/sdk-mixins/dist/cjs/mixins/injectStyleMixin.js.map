{"version":3,"file":"injectStyleMixin.js","sources":["../../../src/mixins/injectStyleMixin.ts"],"sourcesContent":["import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { cspNonceMixin } from './cspNonceMixin';\n\n// we should mimic the CSSStyleSheet API for the fns we are using\nclass CSSStyleSheetMock {\n  styleEle: HTMLStyleElement;\n  ref: ShadowRoot | HTMLElement | null;\n  constructor(ref: ShadowRoot, nonce: string, { prepend = false } = {}) {\n    this.styleEle = document.createElement('style');\n    this.styleEle.setAttribute('nonce', nonce);\n    this.ref = ref;\n\n    if (!this.ref) {\n      return;\n    }\n\n    if (prepend) {\n      this.ref.prepend(this.styleEle);\n    } else {\n      this.ref.append(this.styleEle);\n    }\n  }\n\n  replaceSync(cssString: string) {\n    this.styleEle.textContent = cssString;\n  }\n\n  get cssRules() {\n    return this.styleEle.sheet?.cssRules;\n  }\n}\n\nexport const injectStyleMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(cspNonceMixin)(superclass);\n    return class InjectStyleMixinClass extends BaseClass {\n      injectStyle(cssString: string, { prepend = false } = {}) {\n        let style: CSSStyleSheet | CSSStyleSheetMock;\n        try {\n          style = new CSSStyleSheet();\n        } catch (e) {\n          // fallback for browsers that don't support CSSStyleSheet\n          style = new CSSStyleSheetMock(this.shadowRoot, this.nonce, {\n            prepend,\n          });\n        }\n\n        if (cssString) {\n          style.replaceSync(cssString);\n        }\n\n        if (style instanceof CSSStyleSheet) {\n          const ref = this.shadowRoot;\n\n          if (ref && 'adoptedStyleSheets' in ref) {\n            const adoptedStyleSheets = [...(ref.adoptedStyleSheets || [])];\n            adoptedStyleSheets[prepend ? 'unshift' : 'push'](style);\n\n            ref.adoptedStyleSheets = adoptedStyleSheets;\n          }\n        }\n\n        return style;\n      }\n    };\n  },\n);\n\nexport type InjectedStyle = CSSStyleSheet | CSSStyleSheetMock;\n"],"names":["createSingletonMixin","compose","cspNonceMixin"],"mappings":";;;;;AAGA;AACA,MAAM,iBAAiB,CAAA;IAGrB,WAAY,CAAA,GAAe,EAAE,KAAa,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,GAAG,EAAE,EAAA;QAClE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAEf,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO;SACR;QAED,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;KACF;AAED,IAAA,WAAW,CAAC,SAAiB,EAAA;AAC3B,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC;KACvC;AAED,IAAA,IAAI,QAAQ,GAAA;;QACV,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC;KACtC;AACF,CAAA;MAEY,gBAAgB,GAAGA,+BAAoB,CAClD,CAAqC,UAAa,KAAI;IACpD,MAAM,SAAS,GAAGC,kBAAO,CAACC,2BAAa,CAAC,CAAC,UAAU,CAAC,CAAC;IACrD,OAAO,MAAM,qBAAsB,SAAQ,SAAS,CAAA;QAClD,WAAW,CAAC,SAAiB,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,GAAG,EAAE,EAAA;AACrD,YAAA,IAAI,KAAwC,CAAC;AAC7C,YAAA,IAAI;AACF,gBAAA,KAAK,GAAG,IAAI,aAAa,EAAE,CAAC;aAC7B;YAAC,OAAO,CAAC,EAAE;;gBAEV,KAAK,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE;oBACzD,OAAO;AACR,iBAAA,CAAC,CAAC;aACJ;YAED,IAAI,SAAS,EAAE;AACb,gBAAA,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;aAC9B;AAED,YAAA,IAAI,KAAK,YAAY,aAAa,EAAE;AAClC,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;AAE5B,gBAAA,IAAI,GAAG,IAAI,oBAAoB,IAAI,GAAG,EAAE;AACtC,oBAAA,MAAM,kBAAkB,GAAG,CAAC,IAAI,GAAG,CAAC,kBAAkB,IAAI,EAAE,CAAC,CAAC,CAAC;AAC/D,oBAAA,kBAAkB,CAAC,OAAO,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AAExD,oBAAA,GAAG,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;iBAC7C;aACF;AAED,YAAA,OAAO,KAAK,CAAC;SACd;KACF,CAAC;AACJ,CAAC;;;;"}