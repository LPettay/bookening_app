{"version":3,"file":"UserProfile.js","sources":["../../../src/components/UserProfile.tsx"],"sourcesContent":["import React, {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport Context from '../hooks/Context';\nimport { UserProfileProps } from '../types';\nimport withPropsMapping from './withPropsMapping';\n\n// web-component code uses browser API, but can be used in SSR apps, hence the lazy loading\nconst UserProfileWC = lazy(async () => {\n  await import('@descope/user-profile-widget');\n\n  return {\n    default: withPropsMapping(\n      React.forwardRef<HTMLElement>((props, ref) => (\n\t<descope-user-profile-widget ref={ref} {...props} />\n      )),\n    ),\n  };\n});\n\nconst UserProfile = React.forwardRef<HTMLElement, UserProfileProps>(\n  ({ logger, theme, debug, widgetId, onLogout, styleId }, ref) => {\n    const [innerRef, setInnerRef] = useState(null);\n\n    useImperativeHandle(ref, () => innerRef);\n\n    const {\n      projectId,\n      baseUrl,\n      baseStaticUrl,\n      baseCdnUrl,\n      refreshCookieName,\n      setSession,\n      setUser,\n      setIsAuthenticated,\n    } = React.useContext(Context);\n\n    const handleLogout = useCallback(\n      (e: CustomEvent) => {\n        if (onLogout) {\n          onLogout(e);\n        }\n        // we want to clear the session and user when the logout event is triggered\n        setIsAuthenticated(false);\n        setSession('');\n        setUser(null);\n      },\n      [onLogout, setSession, setIsAuthenticated, setUser],\n    );\n\n    useEffect(() => {\n      if (innerRef) {\n        innerRef.addEventListener('logout', handleLogout);\n        return () => innerRef.removeEventListener('logout', handleLogout);\n      }\n      return undefined;\n    }, [innerRef, handleLogout]);\n\n    return (\n\t<Suspense fallback={null}>\n\t\t<UserProfileWC\n          projectId={projectId}\n          widgetId={widgetId}\n          baseUrl={baseUrl}\n          baseStaticUrl={baseStaticUrl}\n          baseCdnUrl={baseCdnUrl}\n          styleId={styleId}\n          ref={setInnerRef}\n          {...{\n            // attributes\n            'theme.attr': theme,\n            'debug.attr': debug,\n            'styleId.attr': styleId,\n            'refreshCookieName.attr': refreshCookieName,\n            // props\n            'logger.prop': logger,\n          }}\n        />\n\t</Suspense>\n    );\n  },\n);\n\nexport default UserProfile;\n"],"names":["UserProfileWC","lazy","async","import","default","withPropsMapping","React","forwardRef","props","ref","createElement","Object","assign","UserProfile","logger","theme","debug","widgetId","onLogout","styleId","innerRef","setInnerRef","useState","useImperativeHandle","projectId","baseUrl","baseStaticUrl","baseCdnUrl","refreshCookieName","setSession","setUser","setIsAuthenticated","useContext","Context","handleLogout","useCallback","e","useEffect","addEventListener","removeEventListener","Suspense","fallback"],"mappings":"mMAaA,MAAMA,EAAgBC,GAAKC,gBACnBC,OAAO,gCAEN,CACLC,QAASC,EACPC,EAAMC,YAAwB,CAACC,EAAOC,IAC3CH,EAA6BI,cAAA,8BAAAC,OAAAC,OAAA,CAAAH,IAAKA,GAASD,WAMtCK,EAAcP,EAAMC,YACxB,EAAGO,SAAQC,QAAOC,QAAOC,WAAUC,WAAUC,WAAWV,KACtD,MAAOW,EAAUC,GAAeC,EAAS,MAEzCC,EAAoBd,GAAK,IAAMW,IAE/B,MAAMI,UACJA,EAASC,QACTA,EAAOC,cACPA,EAAaC,WACbA,EAAUC,kBACVA,EAAiBC,WACjBA,EAAUC,QACVA,EAAOC,mBACPA,GACEzB,EAAM0B,WAAWC,GAEfC,EAAeC,GAClBC,IACKlB,GACFA,EAASkB,GAGXL,GAAmB,GACnBF,EAAW,IACXC,EAAQ,KAAK,GAEf,CAACZ,EAAUW,EAAYE,EAAoBD,IAW7C,OARAO,GAAU,KACR,GAAIjB,EAEF,OADAA,EAASkB,iBAAiB,SAAUJ,GAC7B,IAAMd,EAASmB,oBAAoB,SAAUL,EAEtC,GACf,CAACd,EAAUc,IAGjB5B,EAACI,cAAA8B,EAAS,CAAAC,SAAU,MACnBnC,EAAAI,cAACV,EAAa,CACNwB,UAAWA,EACXP,SAAUA,EACVQ,QAASA,EACTC,cAAeA,EACfC,WAAYA,EACZR,QAASA,EACTV,IAAKY,EAGH,aAAcN,EACd,aAAcC,EACd,eAAgBG,EAChB,yBAA0BS,EAE1B,cAAed,IAIrB"}