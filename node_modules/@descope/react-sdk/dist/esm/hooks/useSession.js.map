{"version":3,"file":"useSession.js","sources":["../../../src/hooks/useSession.ts"],"sourcesContent":["import { useEffect, useMemo, useRef } from 'react';\nimport useContext from './useContext';\n\nconst useSession = () => {\n  const {\n    session,\n    isSessionLoading,\n    isOidcLoading,\n    fetchSession,\n    isSessionFetched,\n    isAuthenticated,\n  } = useContext();\n\n  // when session should be received, we want the return value of \"isSessionLoading\" to be true starting from the first call\n  // (and not only when receiving an update from the context)\n  const isLoading = useRef(isSessionLoading || isOidcLoading);\n\n  // we want this to happen before returning a value so we are using \"useMemo\" and not \"useEffect\"\n  useMemo(() => {\n    isLoading.current = isSessionLoading || isOidcLoading;\n  }, [isSessionLoading, isOidcLoading]);\n\n  const shouldFetchSession = !isAuthenticated && !isSessionLoading;\n\n  // we want this to happen before returning a value so we are using \"useMemo\" and not \"useEffect\"\n  useMemo(() => {\n    if (shouldFetchSession && !isSessionFetched) {\n      isLoading.current = true;\n    }\n  }, [isSessionFetched]);\n\n  // Fetch session if it's not already fetched\n  // We want this to happen only once, so the dependency array should not contain shouldFetchSession\n  useEffect(() => {\n    if (shouldFetchSession) {\n      fetchSession();\n    }\n  }, [fetchSession]);\n  return {\n    isSessionLoading: isLoading.current,\n    sessionToken: session,\n    isAuthenticated,\n  };\n};\n\nexport default useSession;\n"],"names":["useSession","session","isSessionLoading","isOidcLoading","fetchSession","isSessionFetched","isAuthenticated","useContext","isLoading","useRef","useMemo","current","shouldFetchSession","useEffect","sessionToken"],"mappings":"0FAGM,MAAAA,EAAa,KACjB,MAAMC,QACJA,EAAOC,iBACPA,EAAgBC,cAChBA,EAAaC,aACbA,EAAYC,iBACZA,EAAgBC,gBAChBA,GACEC,IAIEC,EAAYC,EAAOP,GAAoBC,GAG7CO,GAAQ,KACNF,EAAUG,QAAUT,GAAoBC,CAAa,GACpD,CAACD,EAAkBC,IAEtB,MAAMS,GAAsBN,IAAoBJ,EAgBhD,OAbAQ,GAAQ,KACFE,IAAuBP,IACzBG,EAAUG,SAAU,EACrB,GACA,CAACN,IAIJQ,GAAU,KACJD,GACFR,GACD,GACA,CAACA,IACG,CACLF,iBAAkBM,EAAUG,QAC5BG,aAAcb,EACdK,kBACD"}