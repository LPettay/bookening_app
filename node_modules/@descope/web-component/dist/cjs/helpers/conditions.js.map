{"version":3,"file":"conditions.js","sources":["../../../src/lib/helpers/conditions.ts"],"sourcesContent":["import { ClientCondition, ConditionsMap, Context } from '../types';\n\nconst elseInteractionId = 'ELSE';\n\nconst conditionsMap: ConditionsMap = {\n  'lastAuth.loginId': {\n    'not-empty': (ctx) => !!ctx.loginId || !!ctx.lastAuth?.loginId,\n    empty: (ctx) => !ctx.loginId && !ctx.lastAuth?.loginId,\n  },\n  idpInitiated: {\n    'is-true': (ctx) => !!ctx.code,\n    'is-false': (ctx) => !ctx.code,\n  },\n  externalToken: {\n    'is-true': (ctx) => !!ctx.token,\n    'is-false': (ctx) => !ctx.token,\n  },\n  abTestingKey: {\n    'greater-than': (ctx, predicate: number) =>\n      (ctx.abTestingKey || 0) > predicate,\n    'less-than': (ctx, predicate: number) =>\n      (ctx.abTestingKey || 0) < predicate,\n    'greater-than-or-equal': (ctx, predicate: number) =>\n      (ctx.abTestingKey || 0) >= predicate,\n    'less-than-or-equal': (ctx, predicate: number) =>\n      (ctx.abTestingKey || 0) <= predicate,\n    'in-range': (ctx, predicate: string) => {\n      const [min, max] = predicate\n        ? predicate.split(',').map(Number)\n        : [undefined, undefined];\n      return (\n        (ctx.abTestingKey || 0) >= (min ?? 0) &&\n        (ctx.abTestingKey || 0) <= (max ?? 0)\n      );\n    },\n    'not-in-range': (ctx, predicate: string) => {\n      const [min, max] = predicate\n        ? predicate.split(',').map(Number)\n        : [undefined, undefined];\n      if (\n        min === undefined ||\n        max === undefined ||\n        Number.isNaN(min) ||\n        Number.isNaN(max)\n      ) {\n        // if no range is provided, return true, this is consistent with Descope server behavior\n        return true;\n      }\n      return (ctx.abTestingKey || 0) < min || (ctx.abTestingKey || 0) > max;\n    },\n    'devised-by': (ctx, predicate: string) => {\n      const predicateNum = Number(predicate);\n      if (Number.isNaN(predicateNum)) {\n        return false;\n      }\n      return (ctx.abTestingKey || 0) % predicateNum === 0;\n    },\n  },\n};\n\nexport const calculateCondition = (\n  condition: ClientCondition,\n  ctx: Context,\n) => {\n  const checkFunc = conditionsMap[condition?.key]?.[condition.operator];\n  if (!checkFunc) {\n    return {};\n  }\n  const conditionResult = checkFunc(ctx, condition.predicate)\n    ? condition.met\n    : condition.unmet;\n  return {\n    startScreenId: conditionResult?.screenId,\n    startScreenName: conditionResult?.screenName,\n    conditionInteractionId: conditionResult?.interactionId,\n  };\n};\n\n/* eslint-disable import/prefer-default-export */\nexport const calculateConditions = (\n  ctx: Context,\n  conditions?: ClientCondition[],\n) => {\n  const conditionResult = conditions?.find(({ key, operator, predicate }) => {\n    if (key === elseInteractionId) {\n      return true;\n    }\n    const checkFunc = conditionsMap[key]?.[operator];\n    return !!checkFunc?.(ctx, predicate);\n  });\n  return !conditionResult\n    ? {}\n    : {\n        startScreenId: conditionResult.met.screenId,\n        startScreenName: conditionResult.met.screenName,\n        conditionInteractionId: conditionResult.met.interactionId,\n        clientScripts: conditionResult.met.clientScripts,\n        componentsConfig: conditionResult.met.componentsConfig,\n      };\n};\n"],"names":["conditionsMap","ctx","loginId","_a","lastAuth","empty","idpInitiated","code","externalToken","token","abTestingKey","predicate","min","max","split","map","Number","undefined","isNaN","predicateNum","condition","checkFunc","key","operator","conditionResult","met","unmet","startScreenId","screenId","startScreenName","screenName","conditionInteractionId","interactionId","conditions","find","clientScripts","componentsConfig"],"mappings":"aAEA,MAEMA,EAA+B,CACnC,mBAAoB,CAClB,YAAcC,UAAQ,QAAEA,EAAIC,YAA2B,QAAdC,EAAAF,EAAIG,gBAAU,IAAAD,OAAA,EAAAA,EAAAD,QAAO,EAC9DG,MAAQJ,IAAQ,IAAAE,EAAA,OAACF,EAAIC,WAA0B,UAAdD,EAAIG,gBAAU,IAAAD,OAAA,EAAAA,EAAAD,QAAO,GAExDI,aAAc,CACZ,UAAYL,KAAUA,EAAIM,KAC1B,WAAaN,IAASA,EAAIM,MAE5BC,cAAe,CACb,UAAYP,KAAUA,EAAIQ,MAC1B,WAAaR,IAASA,EAAIQ,OAE5BC,aAAc,CACZ,eAAgB,CAACT,EAAKU,KACnBV,EAAIS,cAAgB,GAAKC,EAC5B,YAAa,CAACV,EAAKU,KAChBV,EAAIS,cAAgB,GAAKC,EAC5B,wBAAyB,CAACV,EAAKU,KAC5BV,EAAIS,cAAgB,IAAMC,EAC7B,qBAAsB,CAACV,EAAKU,KACzBV,EAAIS,cAAgB,IAAMC,EAC7B,WAAY,CAACV,EAAKU,KAChB,MAAOC,EAAKC,GAAOF,EACfA,EAAUG,MAAM,KAAKC,IAAIC,QACzB,MAACC,OAAWA,GAChB,OACGhB,EAAIS,cAAgB,KAAOE,QAAAA,EAAO,KAClCX,EAAIS,cAAgB,KAAOG,QAAAA,EAAO,EACnC,EAEJ,eAAgB,CAACZ,EAAKU,KACpB,MAAOC,EAAKC,GAAOF,EACfA,EAAUG,MAAM,KAAKC,IAAIC,QACzB,MAACC,OAAWA,GAChB,aACUA,IAARL,QACQK,IAARJ,IACAG,OAAOE,MAAMN,KACbI,OAAOE,MAAML,OAKPZ,EAAIS,cAAgB,GAAKE,IAAQX,EAAIS,cAAgB,GAAKG,EAAG,EAEvE,aAAc,CAACZ,EAAKU,KAClB,MAAMQ,EAAeH,OAAOL,GAC5B,OAAIK,OAAOE,MAAMC,KAGTlB,EAAIS,cAAgB,GAAKS,GAAiB,CAAC,+BAKvB,CAChCC,EACAnB,WAEA,MAAMoB,EAAyC,QAA7BlB,EAAAH,EAAcoB,aAAS,EAATA,EAAWE,YAAI,IAAAnB,OAAA,EAAAA,EAAGiB,EAAUG,UAC5D,IAAKF,EACH,MAAO,GAET,MAAMG,EAAkBH,EAAUpB,EAAKmB,EAAUT,WAC7CS,EAAUK,IACVL,EAAUM,MACd,MAAO,CACLC,cAAeH,aAAA,EAAAA,EAAiBI,SAChCC,gBAAiBL,aAAA,EAAAA,EAAiBM,WAClCC,uBAAwBP,aAAA,EAAAA,EAAiBQ,cAC1C,8BAIgC,CACjC/B,EACAgC,KAEA,MAAMT,EAAkBS,aAAU,EAAVA,EAAYC,MAAK,EAAGZ,MAAKC,WAAUZ,sBACzD,GAlFsB,SAkFlBW,EACF,OAAO,EAET,MAAMD,EAA8B,QAAlBlB,EAAAH,EAAcsB,UAAI,IAAAnB,OAAA,EAAAA,EAAGoB,GACvC,SAASF,aAAS,EAATA,EAAYpB,EAAKU,GAAU,IAEtC,OAAQa,EAEJ,CACEG,cAAeH,EAAgBC,IAAIG,SACnCC,gBAAiBL,EAAgBC,IAAIK,WACrCC,uBAAwBP,EAAgBC,IAAIO,cAC5CG,cAAeX,EAAgBC,IAAIU,cACnCC,iBAAkBZ,EAAgBC,IAAIW,kBANxC,CAAE,CAOD"}