import{__rest as e}from"tslib";import{escapeMarkdown as t}from"@descope/escape-markdown";import{ELEMENT_TYPE_ATTRIBUTE as o,HAS_DYNAMIC_VALUES_ATTR_NAME as r,DESCOPE_ATTRIBUTE_EXCLUDE_FIELD as c}from"../constants/index.js";import{shouldHandleMarkdown as s}from"./helpers.js";const n=["disabled"],l=(e,t,r="")=>{e.querySelectorAll(`[${o}="${t}"]`).forEach((e=>{e.textContent=r,e.classList[r?"remove":"add"]("hide")}))},i=(e,t)=>{Object.entries(t||{}).forEach((([t,o])=>{Array.from(e.querySelectorAll(`*[name="${t}"]:not([${c}])`)).forEach((e=>{e.value=o}))}))},a=(e,t)=>t.split(".").reduce(((e,t)=>(null==e?void 0:e[t])||""),e),d=(e,o,r)=>e.replace(/{{(.+?)}}/g,((e,c)=>r?t(a(o,c)):a(o,c))),u=(e,t,r)=>{e.querySelectorAll(`[${o}="${t}"]`).forEach((e=>{e.setAttribute("href",r)}))},f=(e,t,o,r)=>{o&&Object.keys(o).forEach((c=>{t.querySelector(c)||r.debug(`Skipping css vars for component "${c}}"`,`Got css vars for component ${c} but Could not find it on next page`);const s=customElements.get(c);s?Object.keys(o[c]).forEach((t=>{var n;const l=o[c],i=null===(n=null==s?void 0:s.cssVarList)||void 0===n?void 0:n[t];if(!i)return void r.info(`Could not find css variable name for ${t} in ${c}`,"Check if the css variable is defined in the component");const a=l[t];e.style.setProperty(i,a)})):r.info(`Could not find component class for ${c}`,"Check if the component is registered")}))},p=(e,t,o)=>{var r,c;const s=null===(r=customElements.get(t))||void 0===r?void 0:r.cssVarList.url;o&&s&&(null===(c=null==e?void 0:e.style)||void 0===c||c.setProperty(s,`url(data:image/jpg;base64,${o})`))},m=(t,o,c,l,i)=>{var a,f;u(t,"totp-link",null===(a=null==o?void 0:o.totp)||void 0===a?void 0:a.provisionUrl),u(t,"notp-link",null===(f=null==o?void 0:o.notp)||void 0===f?void 0:f.redirectUrl),((e,t)=>{e.querySelectorAll("descope-text,descope-link,descope-enriched-text,descope-code-snippet").forEach((e=>{const o=s(e.localName);e.textContent=d(e.textContent,t,o);const r=e.getAttribute("href");r&&e.setAttribute("href",d(r,t))}))})(t,o),((t,o,r)=>{if(!o)return;const{componentsDynamicAttrs:c}=o,s=e(o,["componentsDynamicAttrs"]),n=Object.keys(s).reduce(((e,t)=>(e[`[name=${t}]`]=s[t],e)),{});c&&Object.keys(c).forEach((e=>{const t=c[e];if(t){const{attributes:o}=t;o&&Object.keys(o).length&&(n[e]=o)}})),Object.keys(n).forEach((e=>{t.querySelectorAll(e).forEach((t=>{const o=n[e];Object.keys(o).forEach((e=>{let c=o[e];if("string"!=typeof c)try{c=JSON.stringify(c)}catch(t){r.error(`Could not stringify value "${c}" for "${e}"`,t.message),c=""}t.setAttribute(e,c)}))}))}))})(t,c,i),((e,t)=>{e.querySelectorAll(`[${r}]`).forEach((e=>{Array.from(e.attributes).forEach((e=>{e.value=d(e.value,t)}))}))})(t,o),((e,t)=>{Object.entries(t).forEach((([t,o])=>{e.querySelectorAll(`[name="${t}"]`).forEach((e=>{Object.entries(o).forEach((([t,o])=>{n.includes(t)&&e.setAttribute(t,o)}))}))}))})(t,l)},h=(e,t)=>{i(e,null==t?void 0:t.inputs),i(e,null==t?void 0:t.form)},v=(e,t)=>{p(e,"descope-totp-image",t)},y=(e,t)=>{p(e,"descope-notp-image",t)},b=(e,t)=>{Array.from(e.querySelectorAll('[default-code="autoDetect"]')).forEach((e=>{e.setAttribute("default-code",t)}))},A=e=>{e.querySelectorAll(`descope-button[${o}="biometrics"]`).forEach((e=>e.setAttribute("disabled","true")))};export{A as disableWebauthnButtons,l as replaceElementMessage,f as setCssVars,y as setNOTPVariable,b as setPhoneAutoDetectDefaultCode,v as setTOTPVariable,h as updateScreenFromScreenState,m as updateTemplateFromScreenState};
//# sourceMappingURL=templates.js.map
