{"version":3,"file":"index.cjs.js","sources":["../../src/dom.ts","../../src/generic.ts","../../src/state.ts","../../src/compose.ts","../../src/mixins.ts"],"sourcesContent":["export const createTemplate = (templateString: string) => {\n  const template = document.createElement('template');\n  template.innerHTML = templateString;\n\n  return template;\n};\n","// preventing duplicate separators\nexport const pathJoin = (...paths: string[]) =>\n  paths.join('/').replace(/\\/+/g, '/');\n\nexport const compareArrays = (array1: any[], array2: any[]) =>\n  array1.length === array2.length &&\n  array1.every((value: any, index: number) => value === array2[index]);\n\nexport const withMemCache = <I extends any[], O>(fn: (...args: I) => O) => {\n  let prevArgs: any[];\n  let cache: any;\n  return (...args: I) => {\n    if (prevArgs && compareArrays(prevArgs, args)) return cache as O;\n\n    prevArgs = args;\n    cache = fn(...args);\n\n    return cache as O;\n  };\n};\n\nexport const kebabCase = (str: string) =>\n  str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_.]+/g, '-')\n    .toLowerCase();\n\nexport const isObjEmpty = (obj: object) =>\n  Object.keys(obj).length === 0 && obj.constructor === Object;\n\nexport const pluralize =\n  (amount: number) =>\n  (strings: TemplateStringsArray, ...expressions: (string | number)[][]) =>\n    strings.reduce(\n      (acc, str, idx) =>\n        `${acc}${str}${expressions?.[idx]?.[amount > 1 ? 1 : 0] || ''}`,\n      '',\n    );\n\nexport const debounce = (fn: Function, ms = 500) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return function debounced(this: any, ...args: any[]) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n","const createIsChanged =\n  <T extends Record<string, any>>(state: T, prevState: T) =>\n  (attrName: keyof T) =>\n    state[attrName] !== prevState[attrName];\n\ntype StateObject = Record<string, any>;\n\ntype UpdateStateCb<T> = (state: T) => Partial<T>;\ntype Subscribers<T> = Record<string, SubscribeCb<T>>;\n\n// eslint-disable-next-line import/exports-last\nexport type SubscribeCb<T> = (\n  state: T,\n  prevState: T,\n  isChanged: ReturnType<typeof createIsChanged>,\n) => void | Promise<void>;\n\nfunction compareObjects(\n  objectA: Record<string, any>,\n  objectB: Record<string, any>,\n) {\n  const aProperties = Object.getOwnPropertyNames(objectA);\n  const bProperties = Object.getOwnPropertyNames(objectB);\n\n  if (aProperties.length !== bProperties.length) {\n    return false;\n  }\n\n  for (let i = 0; i < aProperties.length; i += 1) {\n    const propName = aProperties[i];\n\n    const valA = objectA[propName];\n    const valB = objectB[propName];\n    if (valA === null || valB === null) {\n      if (valA !== valB) {\n        return false;\n      }\n    } else if (typeof valA === 'object' && typeof valB === 'object') {\n      // compare nested objects\n      if (!compareObjects(valA, valB)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport type IsChanged<T> = Parameters<SubscribeCb<T>>[2];\n\nexport class State<T extends StateObject> {\n  #state: T;\n\n  #subscribers: Subscribers<T> = {};\n\n  #token = 0;\n\n  #forceUpdate = true;\n\n  constructor(init: T = {} as T, { forceUpdate = false } = {}) {\n    this.#state = init;\n    this.#forceUpdate = forceUpdate;\n  }\n\n  get current() {\n    return { ...this.#state };\n  }\n\n  update = (newState: Partial<T> | UpdateStateCb<T>) => {\n    const internalNewState =\n      typeof newState === 'function' ? newState(this.#state) : newState;\n\n    const nextState = { ...this.#state, ...internalNewState };\n    if (this.#forceUpdate || !compareObjects(this.#state, nextState)) {\n      const prevState = this.#state;\n      this.#state = nextState;\n      Object.freeze(this.#state);\n\n      setTimeout(() => {\n        Object.values(this.#subscribers).forEach((cb) =>\n          cb(nextState, prevState, createIsChanged(nextState, prevState)),\n        );\n      }, 0);\n    }\n  };\n\n  subscribe(cb: SubscribeCb<T>) {\n    this.#token += 1;\n    this.#subscribers[this.#token] = cb;\n\n    return this.#token.toString();\n  }\n\n  unsubscribe(token: string) {\n    const isFound = !!this.#subscribers[token];\n\n    if (isFound) {\n      delete this.#subscribers[token];\n    }\n\n    return isFound;\n  }\n\n  unsubscribeAll() {\n    this.#subscribers = {};\n\n    return true;\n  }\n}\n","type Fn = (arg: any) => any;\n\nexport function compose<Input, A1>(\n  fn1: (input: Input) => A1,\n): (input: Input) => A1;\n\nexport function compose<Input, A1, A2>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n): (input: Input) => A2;\n\nexport function compose<Input, A1, A2, A3>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n): (input: Input) => A3;\n\nexport function compose<Input, A1, A2, A3, A4>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n): (input: Input) => A4;\n\nexport function compose<Input, A1, A2, A3, A4, A5>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n): (input: Input) => A5;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n): (input: Input) => A6;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6, A7>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n): (input: Input) => A7;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6, A7, A8>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n): (input: Input) => A8;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6, A7, A8, A9>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n): (input: Input) => A9;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n  fn10: (input: A9) => A10,\n): (input: Input) => A10;\n\nexport function compose<Input, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n  fn10: (input: A9) => A10,\n  fn11: (input: A10) => A11,\n): (input: Input) => A11;\n\nexport function compose<\n  Input,\n  A1,\n  A2,\n  A3,\n  A4,\n  A5,\n  A6,\n  A7,\n  A8,\n  A9,\n  A10,\n  A11,\n  A12,\n>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n  fn10: (input: A9) => A10,\n  fn11: (input: A10) => A11,\n  fn12: (input: A11) => A12,\n): (input: Input) => A12;\n\nexport function compose<\n  Input,\n  A1,\n  A2,\n  A3,\n  A4,\n  A5,\n  A6,\n  A7,\n  A8,\n  A9,\n  A10,\n  A11,\n  A12,\n  A13,\n>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n  fn10: (input: A9) => A10,\n  fn11: (input: A10) => A11,\n  fn12: (input: A11) => A12,\n  fn13: (input: A12) => A13,\n): (input: Input) => A13;\n\nexport function compose<\n  Input,\n  A1,\n  A2,\n  A3,\n  A4,\n  A5,\n  A6,\n  A7,\n  A8,\n  A9,\n  A10,\n  A11,\n  A12,\n  A13,\n  A14,\n>(\n  fn1: (input: Input) => A1,\n  fn2: (input: A1) => A2,\n  fn3: (input: A2) => A3,\n  fn4: (input: A3) => A4,\n  fn5: (input: A4) => A5,\n  fn6: (input: A5) => A6,\n  fn7: (input: A6) => A7,\n  fn8: (input: A7) => A8,\n  fn9: (input: A8) => A9,\n  fn10: (input: A9) => A10,\n  fn11: (input: A10) => A11,\n  fn12: (input: A11) => A12,\n  fn13: (input: A12) => A13,\n  fn14: (input: A13) => A14,\n): (input: Input) => A14;\n\n/**\n * Currently there is no way to create a compose function in Typescript without using overloading\n * This function currently support up to 10 wrappers\n * If needed you can add more by duplicating the type and add more parameters\n */\n\nexport function compose(...args: Fn[]) {\n  return (data: any) => args.reduce((acc, elem) => elem(acc), data) as any;\n}\n","const getFunctionHash = (fn: Function) => {\n  const functionSource = fn.toString();\n\n  let hash = 0;\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < functionSource.length; i++) {\n    const char = functionSource.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = (hash << 5) - hash + char;\n    // eslint-disable-next-line no-bitwise\n    hash &= hash; // Convert to 32-bit integer\n  }\n\n  return hash.toString(16);\n};\n\ntype Mixin = (superclass: CustomElementConstructor) => CustomElementConstructor;\n\n// because a single mixin can be a dependency for many other mixins, a mixin can be loaded multiple times\n// some mixins should not be loaded multiple times, wrapping a mixin with this fn ensures it will load only once\nexport const createSingletonMixin = <T extends Mixin>(mixin: T): T => {\n  const mixinNameSym = Symbol(getFunctionHash(mixin));\n\n  const singletonMixin = (superclass: CustomElementConstructor) => {\n    if (superclass[mixinNameSym]) {\n      return superclass;\n    }\n\n    const cls = mixin(superclass);\n    cls[mixinNameSym] = true;\n\n    return cls;\n  };\n\n  return singletonMixin as T;\n};\n"],"names":["compareArrays","array1","array2","length","every","value","index","compareObjects","objectA","objectB","aProperties","Object","getOwnPropertyNames","bProperties","i","propName","valA","valB","constructor","init","forceUpdate","_State_state","set","this","_State_subscribers","_State_token","_State_forceUpdate","update","newState","internalNewState","__classPrivateFieldGet","nextState","prevState","__classPrivateFieldSet","freeze","setTimeout","values","forEach","cb","state","attrName","createIsChanged","current","assign","subscribe","toString","unsubscribe","token","isFound","unsubscribeAll","args","data","reduce","acc","elem","mixin","mixinNameSym","Symbol","fn","functionSource","hash","charCodeAt","getFunctionHash","superclass","cls","templateString","template","document","createElement","innerHTML","ms","timeoutId","clearTimeout","apply","obj","keys","str","replace","toLowerCase","paths","join","amount","strings","expressions","idx","_a","prevArgs","cache"],"mappings":"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"}